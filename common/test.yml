name: "test__{{ params.name }}"
ctxs: "{{ params.ctxs }}"
migration: ""
container: ""
meta:
  lax: false
  template_no_empty_lines: true
main:
  local_cloud_hooks:
    repo: "cloud"
    env_repos:
      - repo: "custom_cloud"
        dir: "custom-cloud"
    hosts: |
      [main]
      localhost ansible_connection=local
      [host]
    hooks:
      before_initial_services: "custom-cloud/test/hooks/before_initial_services.yml"
      after_initial_services: "custom-cloud/test/hooks/after_initial_services.yml"
      before_nodes: "custom-cloud/test/hooks/before_nodes.yml"
      after_nodes: "custom-cloud/test/hooks/after_nodes.yml"
      before_wait_nodes: "custom-cloud/test/hooks/before_wait_nodes.yml"
      after_wait_nodes: "custom-cloud/test/hooks/after_wait_nodes.yml"
      before_prepare: "custom-cloud/test/hooks/before_prepare.yml"
      after_prepare: "custom-cloud/test/hooks/after_prepare.yml"
      before_cron: "custom-cloud/test/hooks/before_cron.yml"
      after_cron: "custom-cloud/test/hooks/after_cron.yml"
      before_final_services: "custom-cloud/test/hooks/before_final_services.yml"
      after_final_services: "custom-cloud/test/hooks/after_final_services.yml"
      before_delete_tmp: "custom-cloud/test/hooks/before_delete_tmp.yml"
      after_delete_tmp: "custom-cloud/test/hooks/after_delete_tmp.yml"
      before_delete_main: "custom-cloud/test/hooks/before_delete_main.yml"
      after_delete_main: "custom-cloud/test/hooks/after_delete_main.yml"
  local_cloud_services:
    repo: "cloud"
    env_repos:
      - repo: "custom_cloud"
        dir: "custom-cloud"
    hosts: |
      [main]
      localhost ansible_connection=local
      [host]
    initial_services:
      - name: "test_list_1"
        absent: true
      - name: "test_service_1_initial"
        key: "test_service_1"
        single: true
        tmp: true
        can_destroy: true
        params:
          param1: "value_overriden_1_1"
        group_params:
          param1: "overriden_group_1_1"
          param2: "overriden_group_1_2"
        shared_params: ["overriden_s1"]
        shared_group_params: "overriden_g1"
      - name: "test_service_2_initial"
        key: "test_service_2"
        single: true
        absent: true
        params:
          param1: "value_overriden_2_1"
        group_params:
          param1: "overriden_group_2_1"
          param2: "overriden_group_2_2"
        shared_params: ["overriden_s2"]
        shared_group_params: "overriden_g2"
    final_services:
      - "test_service_3"
      - name: "test_service_1_final"
        key: "test_service_1"
        single: true
        tmp: true
        params:
          param1: "value_overriden_1_1"
        group_params:
          param1: "overriden_group_1_1"
          param2: "overriden_group_1_2"
        shared_params: ["overriden_s1"]
        shared_group_params: "overriden_g1"
      - name: "test_list_2_final"
        key: "test_list_2"
        tmp: true
  local_cloud_layer_services:
    repo: "cloud"
    env_repos:
      - repo: "custom_cloud"
        dir: "custom-cloud"
    hosts: |
      [main]
      localhost ansible_connection=local
      [host]
    initial_services:
      - "test_top_1"
      - name: "test_top_2"
        single: true
        tmp: true
    final_services:
      - name: "test_top_1"
        tmp: true
        can_destroy: true
  local_cloud_sequence_services:
    repo: "cloud"
    env_repos:
      - repo: "custom_cloud"
        dir: "custom-cloud"
    hosts: |
      [main]
      localhost ansible_connection=local
      [host]
    initial_services:
      - name: "test_sequence"
        tmp: true
  local_repos:
    repo: "cloud"
    hosts: |
      [main]
      localhost ansible_connection=local
      [host]
    extra_repos:
      - repo: "env_base"
        dir: "env-base"
        links:
          - src: ""
            dest: "tmp/test/link-env-base"
          - repo: "custom_cloud"
            src: ""
            dest: "tmp/test/link-custom-cloud"
          - repo: "pod"
            src: "run"
            dest: "tmp/test/link-pod-run.sh"
        env_files:
          - src: "{{ params.env.repo_dir }}/test/extra-repos/file1.yml"
            dest: "tmp/test/ef1.yml"
        env_templates:
          - src: "{{ params.env.repo_dir }}/test/extra-repos/template1.yml"
            dest: "tmp/test/etpl1.yml"
            params:
              value1: "env_base_1_1"
              value2: "env_base_1_2"
          - src: "{{ params.env.repo_dir }}/test/extra-repos/template2.yml"
            dest: "tmp/test/etpl2.yml"
            params:
              value1: "env_base_2_1"
              value2: "env_base_2_2"
        files:
          - src: "test/extra-repos/repo_file1.yml"
            dest: "tmp/test/f1.yml"
          - src: "test/extra-repos/repo_file2.yml"
            dest: "tmp/test/f2.yml"
        templates:
          - src: "test/extra-repos/repo_template1.yml"
            dest: "tmp/test/tpl1.yml"
            params:
              value1: "env_base_1_1 (repo)"
              value2: "env_base_1_2 (repo)"
              value3: "env_base_1_3 (repo)"
          - src: "test/extra-repos/repo_template2.yml"
            dest: "tmp/test/tpl2.yml"
            params:
              value1: "env_base_2_1 (repo)"
              value2: "env_base_2_2 (repo)"
              value3: "env_base_2_3 (repo)"
      - repo: "custom_cloud"
        dir: "custom-cloud"
        links:
          - src: ""
            dest: "tmp/test/link-custom-cloud"
          - repo: "pod"
            src: "run"
            dest: "tmp/test/link-pod-run.sh"
        env_files:
          - src: "{{ params.env.repo_dir }}/test/extra-repos/file2.yml"
            dest: "tmp/test/ef2.yml"
        env_templates:
          - src: "{{ params.env.repo_dir }}/test/extra-repos/template1.yml"
            dest: "tmp/test/etpl1.yml"
            params:
              value1: "custom_cloud_1"
              value2: "custom_cloud_2"
        files:
          - src: "test/extra-repos/cloud_file1.yml"
            dest: "tmp/test/cf1.yml"
          - src: "test/extra-repos/cloud_file2.yml"
            dest: "tmp/test/cf2.yml"
        templates:
          - src: "test/extra-repos/cloud_template1.yml"
            dest: "tmp/test/ct1.yml"
            params:
              value1: "custom_cloud_1_1 (repo)"
              value2: "custom_cloud_1_2 (repo)"
          - src: "test/extra-repos/cloud_template2.yml"
            dest: "tmp/test/ct2.yml"
            params:
              value1: "custom_cloud_2_1 (repo)"
              value2: "custom_cloud_2_2 (repo)"
      - repo: "pod"
        dir: "pod"
        links:
          - repo: "env_base"
            src: ""
            dest: "tmp/test/link-env-base"
        env_templates:
          - src: "{{ params.env.repo_dir }}/test/extra-repos/template2.yml"
            dest: "tmp/test/etpl2.yml"
            params:
              value1: "pod_1"
              value2: "pod_2"
      - repo: "custom_pod"
        dir: "custom-pod"
        links:
          - repo: "env_base"
            src: "common/test.yml"
            dest: "tmp/test/link-env-base-test.yml"
          - repo: "env_base"
            src: "test/extra-repos/file1.yml"
            dest: "tmp/test/link-env-base-file.yml"
        env_files:
          - src: "{{ params.env.repo_dir }}/test/extra-repos/file1.yml"
            dest: "tmp/test/ef1.yml"
          - src: "{{ params.env.repo_dir }}/test/extra-repos/file2.yml"
            dest: "tmp/test/ef2.yml"
  services:
    repo: "cloud"
    env_repos:
      - repo: "custom_cloud"
        dir: "custom-cloud"
    hosts: |
      [main]
      localhost ansible_connection=local
      [host]
    initial_services: "{{ params.env_params.services }}"
  node_local:
    repo: "cloud"
    env_repos:
      - repo: "custom_cloud"
        dir: "custom-cloud"
    hosts: |
      [main]
      localhost ansible_connection=local
      [host]
      [host:children]
      custom_node_service_local
      [custom_node_service_local]
    nodes:
      - name: "test_node_local"
        key: "custom_local"
        local: true
        pods:
          test_pod_local:
            params:
              pod_param_1: "ctx overriden value"
          test_pod_local_2:
            params:
              pod_param_1: "ctx overriden value"
      - name: "custom_node_service_local"
        amount: 3
        max_amount: 5
    run_stages:
      - tasks:
          - name: "test_task_cloud"
            all_nodes: true
            node_task: true
            params:
              prop4: "overriden_cloud_1_4"
            shared_params: ["test_task_overriden_1"]
          - name: "test"
            nodes:
              - name: "test_node_local"
                pods: ["test_pod_local"]
            pod_task: true
          - name: "test_skip"
            all_nodes: true
            node_task: true
      - tasks:
          - name: "test_task_env"
            nodes: ["test_node_local"]
            node_task: true
            params:
              prop4: "overriden_env_1_4"
            shared_params: ["test_task_overriden_1"]
          - name: "test_task_pod_1"
            key: "test_task_pod"
            all_nodes: true
            pod_task: true
            params:
              prop4: "overriden_pod_1_4"
            shared_params: ["test_task_overriden_1"]
          - name: "test_task_pod_2"
            key: "test_task_pod"
            nodes:
              - name: "test_node_local"
                pods: ["test_pod_local_2"]
            pod_task: true
            params:
              prop4: "overriden_pod_2_4"
            shared_params: ["test_task_overriden_2"]
  node:
    repo: "cloud"
    env_repos:
      - repo: "custom_cloud"
        dir: "custom-cloud"
    hosts: |
      [main]
      localhost ansible_connection=local
      [host]
      [host:children]
      app
      [app]
    nodes:
      - name: "app"
        key: "{{ params.env_params.node }}"
        absent: true
        tmp: true
        can_destroy: true
services:
  digital_ocean_vpn:
    base_dir: "custom-cloud"
    namespace: "ext_vpn"
    task: "tasks/vpn/digital_ocean.main.vpn.yml"
    params_schema: "tasks/vpn/digital_ocean.params.schema.vpn.yml"
    credentials_schema: "tasks/vpn/digital_ocean.credentials.schema.vpn.yml"
    credentials:
      vpn: "digital_ocean"
    params:
      tags:
        - "auto"
        - "dmz"
      firewalls:
        - name: "private"
          tags: ["auto"]
          inbound_rules:
            - ports: "9080"
              sources:
                addresses: "{{ params.env_params.private_ips }}"
            - ports: "9443"
              sources:
                addresses: "{{ params.env_params.private_ips }}"
        - name: "auto"
          tags: ["auto"]
          inbound_rules:
            - ports: "22"
              sources:
                tags: ["main"]
          outbound_rules:
            - protocol: "tcp"
              ports: "1-65535"
              destinations:
                addresses: ["0.0.0.0/0", "::/0"]
            - protocol: "udp"
              ports: "1-65535"
              destinations:
                addresses: ["0.0.0.0/0", "::/0"]
            - protocol: "icmp"
              ports: "1-65535"
              destinations:
                addresses: ["0.0.0.0/0", "::/0"]
        - name: "dmz"
          tags: ["dmz"]
          inbound_rules:
            - ports: "80"
              sources:
                addresses: ["0.0.0.0/0", "::/0"]
            - ports: "443"
              sources:
                addresses: ["0.0.0.0/0", "::/0"]
  service_dns:
    base_dir: "custom-cloud"
    namespace: "ext_dns"
    task: "tasks/dns/{{ params.env_params.dns_name }}.main.dns.yml"
    params_schema: "tasks/dns/params.schema.dns.yml"
    credentials_schema: "tasks/dns/{{ params.env_params.dns_name }}.credentials.schema.dns.yml"
    credentials:
      dns: "{{ params.env_params.dns_name }}"
    params:
      zone: "{{ params.env_params.domain }}"
      dns_type: "A"
      record: "dev"
      data_list: "{{ params.env_params.dns_records }}"
  service_s3:
    base_dir: "custom-cloud"
    namespace: "ext_s3"
    task: "tasks/s3/aws.main.s3.yml"
    params_schema: "tasks/s3/params.schema.s3.yml"
    credentials_schema: "tasks/s3/credentials.schema.s3.yml"
    credentials:
      s3: "s3"
    params:
      bucket: "{{ params.env_params.s3_bucket }}"
      permission: "public-read"
  digital_ocean_node_service:
    base_dir: "custom-cloud"
    namespace: "ext_node"
    task: "tasks/node/digital_ocean.main.node.yml"
    params_schema: "tasks/node/digital_ocean.params.schema.node.yml"
    credentials_schema: "tasks/node/digital_ocean.credentials.schema.node.yml"
    credentials:
      node: "digital_ocean"
    params:
      image_id: "ubuntu-18-04-x64"
      ipv6: true
      region_id: "ams3"
      size_id: "s-1vcpu-1gb"
      tags:
        - "auto"
        - "dmz"
  node_dns_service:
    base_dir: "custom-cloud"
    namespace: "ext_dns"
    task: "tasks/dns/{{ params.env_params.dns_provider }}.main.dns.yml"
    params_schema: "tasks/dns/params.schema.dns.yml"
    credentials_schema: "tasks/dns/{{ params.env_params.dns_provider }}.credentials.schema.dns.yml"
    credentials:
      dns: "{{ params.env_params.dns_provider }}"
    params:
      zone: "{{ params.env_params.domain }}"
  service_node_local:
    base_dir: "custom-cloud"
    namespace: "ext_node"
    task: "test/services/node/test.main.node.yml"
    params_schema: "test/services/node/test.params.schema.node.yml"
    credentials_schema: "test/services/node/test.credentials.schema.node.yml"
    credentials:
      node: "node_service_local_credential"
    params:
      prop1: "test value 1"
      user_datas:
        - |
          User Data 1 1
          User Data 1 2
          User Data 1 3
        - type: "str"
          params:
            value: |
              User Data 2 1
              User Data 2 2
              User Data 2 3
        - type: "str"
          shared_params: ["user_data_str"]
        - type: "env"
          name: "user_data_str_1"
        - type: "env"
          name: "user_data_str_2_custom_name"
          key: "user_data_str_2"
        - type: "env"
          name: "user_data_str_3"
        - type: "file"
          file: "custom-cloud/test/services/node/files/user-data.sh"
        - type: "env"
          name: "user_data_file_1"
          key: "user_data_file"
        - type: "template"
          file: "custom-cloud/test/services/node/files/user-data.tpl.sh"
          params:
            prop1: "value_1"
          group_params:
            prop1: "user_data_1"
            prop2: "user_data_2"
          shared_params: ["user_data_1", "user_data_2"]
          shared_group_params: "user_data"
        - type: "env"
          name: "user_data_tpl_1"
          key: "user_data_tpl"
          params:
            prop1: "value_overridden_1"
          group_params:
            prop1: "user_data_overridden_1"
            prop2: "user_data_overridden_2"
          shared_params: ["user_data_overridden_1", "user_data_overridden_2"]
          shared_group_params: "user_data_overridden"
        - type: "env"
          name: "user_data_tpl_2"
          key: "user_data_tpl"
          params:
            prop3: "value_overridden_3"
          group_params:
            prop1: "user_data_overridden_1"
        - type: "env"
          name: "user_data_tpl_env_1"
          key: "user_data_tpl_env"
          params:
            prop1: "value_overridden_env_1"
          group_params:
            prop1: "user_data_overridden_1"
            prop2: "user_data_overridden_2"
          shared_params: ["user_data_overridden_1", "user_data_overridden_2"]
          shared_group_params: "user_data_overridden"
        - type: "env"
          name: "user_data_tpl_env_2"
          key: "user_data_tpl_env"
          params:
            prop3: "value_overridden_env_3"
          group_params:
            prop1: "user_data_overridden_1"
  test_service_1:
    base_dir: "custom-cloud"
    task: "test/services/general/01.yml"
    credentials:
      service_credential_1: "my_credential_1_1"
      service_credential_2: "my_credential_1_2"
    params:
      param1: "value_1_1"
    group_params:
      param1: "group_1_1"
      param2: "group_1_2"
    shared_params: ["value_s1"]
    shared_group_params: "value_g1"
  test_service_2:
    base_dir: "custom-cloud"
    task: "test/services/general/02.yml"
    credentials:
      service_credential_1: "my_credential_2_1"
      service_credential_2: "my_credential_2_2"
    params:
      param1: "value_2_1"
    group_params:
      param1: "group_2_1"
      param2: "group_2_2"
    shared_params: ["value_s2"]
    shared_group_params: "value_g2"
  test_service_3:
    base_dir: "custom-cloud"
    task: "test/services/general/03.yml"
    credentials:
      service_credential_1: "my_credential_3_1"
      service_credential_2: "my_credential_3_2"
    params:
      param1: "value_3_1"
    group_params:
      param1: "group_3_1"
      param2: "group_3_2"
    shared_params: ["value_s3"]
    shared_group_params: "value_g3"
  test_list_1:
    list: true
    services:
      - name: "test_service_1"
        single: true
      - name: "test_service_2"
        single: true
  test_list_2:
    list: true
    services:
      - name: "test_list_2_list_1"
        key: "test_list_1"
        single: false
      - name: "test_list_2_service_2"
        key: "test_service_2"
        single: true
        absent: true
        params:
          param1: "value_overriden_2_1"
        group_params:
          param1: "overriden_group_2_1"
          param2: "overriden_group_2_2"
        shared_params: ["overriden_s2"]
        shared_group_params: "overriden_g2"
  test_list_3:
    list: true
    services:
      - name: "test_list_3_service_2"
        single: true
        key: "test_service_2"
  test_top_1:
    base_dir: "custom-cloud"
    task: "test/services/layer/top.yml"
    namespace: "ext_test_top"
    credentials:
      service_credential_top_1: "my_credential_top_1_1"
      service_credential_top_2: "my_credential_top_1_2"
    params:
      result_service_name: "test_top_1_middle_1"
      result_value: "test_top_1"
      services:
        - name: "test_top_1_middle_1"
          key: "test_middle_1"
          single: true
          params:
            result_value: "value_top_1_middle_1"
        - name: "test_top_1_bottom_1"
          key: "test_bottom_1"
          single: true
      param1: "value_top_1_1"
    group_params:
      param1: "group_top_1_1"
      param2: "group_top_1_2"
    shared_params: ["value_top_s1"]
    shared_group_params: "value_top_g1"
  test_middle_1:
    base_dir: "custom-cloud"
    task: "test/services/layer/middle.yml"
    namespace: "ext_test_middle"
    credentials:
      service_credential_middle_1: "my_credential_middle_1_1"
      service_credential_middle_2: "my_credential_middle_1_2"
    params:
      result_service_name: "test_middle_1_bottom_1"
      services:
        - name: "test_middle_1_bottom_1"
          key: "test_bottom_1"
          single: true
          params:
            result_value: "value_middle_1_bottom_1"
        - name: "test_middle_1_list_1"
          key: "test_list_1"
          single: false
      param1: "value_middle_1_1"
    group_params:
      param1: "group_middle_1_1"
      param2: "group_middle_1_2"
    shared_params: ["value_middle_s1"]
    shared_group_params: "value_middle_g1"
  test_bottom_1:
    base_dir: "custom-cloud"
    task: "test/services/layer/bottom.yml"
    namespace: "ext_test_bottom"
    credentials:
      service_credential_bottom_1: "my_credential_bottom_1_1"
      service_credential_bottom_2: "my_credential_bottom_1_2"
    params:
      result_value: "value_bottom_1"
      param1: "value_bottom_1_1"
    group_params:
      param1: "group_bottom_1_1"
      param2: "group_bottom_1_2"
    shared_params: ["value_bottom_s1"]
    shared_group_params: "value_bottom_g1"
  test_top_2:
    base_dir: "custom-cloud"
    task: "test/services/layer/top.yml"
    namespace: "ext_test_top"
    credentials:
      service_credential_top_1: "my_credential_top_2_1"
      service_credential_top_2: "my_credential_top_2_2"
    params:
      services:
        - name: "test_top_2_middle_1"
          key: "test_middle_1"
        - name: "test_top_2_middle_2"
          key: "test_middle_2"
      param1: "value_top_2_1"
    group_params:
      param1: "group_top_2_1"
      param2: "group_top_2_2"
    shared_params: ["value_top_s2"]
    shared_group_params: "value_top_g2"
  test_middle_2:
    base_dir: "custom-cloud"
    task: "test/services/layer/middle.yml"
    namespace: "ext_test_middle"
    credentials:
      service_credential_middle_1: "my_credential_middle_2_1"
      service_credential_middle_2: "my_credential_middle_2_2"
    params:
      services:
        - name: "test_middle_2_bottom_1"
          key: "test_bottom_1"
        - name: "test_middle_2_bottom_2"
          key: "test_bottom_2"
      param1: "value_middle_2_1"
    group_params:
      param1: "group_middle_2_1"
      param2: "group_middle_2_2"
    shared_params: ["value_middle_s2"]
    shared_group_params: "value_middle_g2"
  test_bottom_2:
    base_dir: "custom-cloud"
    task: "test/services/layer/bottom.yml"
    namespace: "ext_test_bottom"
    credentials:
      service_credential_bottom_1: "my_credential_bottom_2_1"
      service_credential_bottom_2: "my_credential_bottom_2_2"
    params:
      result_value: "value_bottom_2"
      param1: "value_bottom_2_1"
    group_params:
      param1: "group_bottom_2_1"
      param2: "group_bottom_2_2"
    shared_params: ["value_bottom_s2"]
    shared_group_params: "value_bottom_g2"
  test_sequence:
    list: true
    services:
      - name: "test_before_sequence"
        key: "test_before"
        single: true
      - name: "test_after_no_sequence_1"
        key: "test_after"
        params:
          param_changed: "after_value_no_sequence_1"
      - name: "test_adapter_sequence"
        key: "test_adapter"
        single: true
        params:
          input_service: "test_before_sequence"
      - name: "test_after_no_sequence_2"
        key: "test_after"
        params:
          param_changed: "after_value_no_sequence_2"
      - name: "test_after_sequence"
        key: "test_after"
        single: true
        params:
          input_service: "test_adapter_sequence"
      - name: "test_after_no_sequence_3"
        key: "test_after"
        params:
          param_changed: "after_value_no_sequence_3"
  test_before:
    base_dir: "custom-cloud"
    task: "test/services/sequence/before.yml"
    namespace: "ext_test_before"
    params:
      param_1: "value_1"
      param_2: "value_2"
  test_adapter:
    base_dir: "custom-cloud"
    task: "test/services/sequence/adapter.yml"
    namespace: "ext_test_adapter"
  test_after:
    base_dir: "custom-cloud"
    task: "test/services/sequence/after.yml"
    namespace: "ext_test_after"
    params:
      param_unchanged: "after_value"
service_shared_group_params:
  value_g1:
    param1: "shared_1_1"
    param2: "shared_1_2"
    param3: "shared_1_3"
    param4: "shared_1_4"
  overriden_g1:
    param1: "overriden_shared_1_1"
    param2: "overriden_shared_1_2"
    param3: "overriden_shared_1_3"
    param4: "overriden_shared_1_4"
  value_g2:
    param1: "shared_2_1"
    param2: "shared_2_2"
    param3: "shared_2_3"
    param4: "shared_2_4"
  overriden_g2:
    param1: "overriden_shared_2_1"
    param2: "overriden_shared_2_2"
    param3: "overriden_shared_2_3"
    param4: "overriden_shared_2_4"
  value_g3:
    param1: "shared_3_1"
    param2: "shared_3_2"
    param3: "shared_3_3"
    param4: "shared_3_4"
  value_top_g1:
    param1: "shared_top_1_1"
    param2: "shared_top_1_2"
    param3: "shared_top_1_3"
    param4: "shared_top_1_4"
  value_middle_g1:
    param1: "shared_middle_1_1"
    param2: "shared_middle_1_2"
    param3: "shared_middle_1_3"
    param4: "shared_middle_1_4"
  value_bottom_g1:
    param1: "shared_bottom_1_1"
    param2: "shared_bottom_1_2"
    param3: "shared_bottom_1_3"
    param4: "shared_bottom_1_4"
  value_top_g2:
    param1: "shared_top_2_1"
    param2: "shared_top_2_2"
    param3: "shared_top_2_3"
    param4: "shared_top_2_4"
  value_middle_g2:
    param1: "shared_middle_2_1"
    param2: "shared_middle_2_2"
    param3: "shared_middle_2_3"
    param4: "shared_middle_2_4"
  value_bottom_g2:
    param1: "shared_bottom_2_1"
    param2: "shared_bottom_2_2"
    param3: "shared_bottom_2_3"
    param4: "shared_bottom_2_4"
service_shared_params:
  value_s1:
    param1: "value_shared_1_1"
    param2: "value_shared_1_2"
    param3: "value_shared_1_3"
  overriden_s1:
    param1: "value_overriden_shared_1_1"
    param2: "value_overriden_shared_1_2"
    param3: "value_overriden_shared_1_3"
  value_s2:
    param1: "value_shared_2_1"
    param2: "value_shared_2_2"
    param3: "value_shared_2_3"
  overriden_s2:
    param1: "value_overriden_shared_2_1"
    param2: "value_overriden_shared_2_2"
    param3: "value_overriden_shared_2_3"
  value_s3:
    param1: "value_shared_3_1"
    param2: "value_shared_3_2"
    param3: "value_shared_3_3"
  value_top_s1:
    param1: "value_shared_top_1_1"
    param2: "value_shared_top_1_2"
    param3: "value_shared_top_1_3"
  value_middle_s1:
    param1: "value_shared_middle_1_1"
    param2: "value_shared_middle_1_2"
    param3: "value_shared_middle_1_3"
  value_bottom_s1:
    param1: "value_shared_bottom_1_1"
    param2: "value_shared_bottom_1_2"
    param3: "value_shared_bottom_1_3"
  value_top_s2:
    param1: "value_shared_top_2_1"
    param2: "value_shared_top_2_2"
    param3: "value_shared_top_2_3"
  value_middle_s2:
    param1: "value_shared_middle_2_1"
    param2: "value_shared_middle_2_2"
    param3: "value_shared_middle_2_3"
  value_bottom_s2:
    param1: "value_shared_bottom_2_1"
    param2: "value_shared_bottom_2_2"
    param3: "value_shared_bottom_2_3"
service_group_params:
  group_1_1: "value_group_1_1"
  group_1_2: "value_group_1_2"
  overriden_group_1_1: "value_overriden_group_1_1"
  overriden_group_1_2: "value_overriden_group_1_2"
  shared_1_1: "value_group_shared_1_1"
  shared_1_2: "value_group_shared_1_2"
  shared_1_3: "value_group_shared_1_3"
  shared_1_4: "value_group_shared_1_4"
  overriden_shared_1_1: "value_overriden_group_shared_1_1"
  overriden_shared_1_2: "value_overriden_group_shared_1_2"
  overriden_shared_1_3: "value_overriden_group_shared_1_3"
  overriden_shared_1_4: "value_overriden_group_shared_1_4"
  group_2_1: "value_group_2_1"
  group_2_2: "value_group_2_2"
  overriden_group_2_1: "value_overriden_group_2_1"
  overriden_group_2_2: "value_overriden_group_2_2"
  shared_2_1: "value_group_shared_2_1"
  shared_2_2: "value_group_shared_2_2"
  shared_2_3: "value_group_shared_2_3"
  shared_2_4: "value_group_shared_2_4"
  overriden_shared_2_1: "value_overriden_group_shared_2_1"
  overriden_shared_2_2: "value_overriden_group_shared_2_2"
  overriden_shared_2_3: "value_overriden_group_shared_2_3"
  overriden_shared_2_4: "value_overriden_group_shared_2_4"
  group_3_1: "value_group_3_1"
  group_3_2: "value_group_3_2"
  shared_3_1: "value_group_shared_3_1"
  shared_3_2: "value_group_shared_3_2"
  shared_3_3: "value_group_shared_3_3"
  shared_3_4: "value_group_shared_3_4"
  group_top_1_1: "value_group_top_1_1"
  group_top_1_2: "value_group_top_1_2"
  group_middle_1_1: "value_group_middle_1_1"
  group_middle_1_2: "value_group_middle_1_2"
  group_bottom_1_1: "value_group_bottom_1_1"
  group_bottom_1_2: "value_group_bottom_1_2"
  shared_top_1_1: "value_group_shared_top_1_1"
  shared_top_1_2: "value_group_shared_top_1_2"
  shared_top_1_3: "value_group_shared_top_1_3"
  shared_top_1_4: "value_group_shared_top_1_4"
  shared_middle_1_1: "value_group_shared_middle_1_1"
  shared_middle_1_2: "value_group_shared_middle_1_2"
  shared_middle_1_3: "value_group_shared_middle_1_3"
  shared_middle_1_4: "value_group_shared_middle_1_4"
  shared_bottom_1_1: "value_group_shared_bottom_1_1"
  shared_bottom_1_2: "value_group_shared_bottom_1_2"
  shared_bottom_1_3: "value_group_shared_bottom_1_3"
  shared_bottom_1_4: "value_group_shared_bottom_1_4"
  group_top_2_1: "value_group_top_2_1"
  group_top_2_2: "value_group_top_2_2"
  group_middle_2_1: "value_group_middle_2_1"
  group_middle_2_2: "value_group_middle_2_2"
  group_bottom_2_1: "value_group_bottom_2_1"
  group_bottom_2_2: "value_group_bottom_2_2"
  shared_top_2_1: "value_group_shared_top_2_1"
  shared_top_2_2: "value_group_shared_top_2_2"
  shared_top_2_3: "value_group_shared_top_2_3"
  shared_top_2_4: "value_group_shared_top_2_4"
  shared_middle_2_1: "value_group_shared_middle_2_1"
  shared_middle_2_2: "value_group_shared_middle_2_2"
  shared_middle_2_3: "value_group_shared_middle_2_3"
  shared_middle_2_4: "value_group_shared_middle_2_4"
  shared_bottom_2_1: "value_group_shared_bottom_2_1"
  shared_bottom_2_2: "value_group_shared_bottom_2_2"
  shared_bottom_2_3: "value_group_shared_bottom_2_3"
  shared_bottom_2_4: "value_group_shared_bottom_2_4"
nodes:
  digital_ocean_node:
    service: "digital_ocean_node_service"
    dns_service: "node_dns_service"
    base_dir: "/var/cloud"
    credential: "fake_user"
    pods:
      - name: "test_pod"
        key: "custom"
        params:
          pod_param_4: "value_4"
    params:
      user_data_file: "{{ params.env.repo_dir }}/templates/ubuntu-18.04.j2.sh"
      dns_service_params_list:
        - record: "test1"
          ttl: 100
        - record: "test2"
          ttl: 200
      host_test:
        log_file: "/var/log/setup.log"
        setup_finished_log_regex: "$Setup Finished*"
        setup_success_log_last_line: "Setup Finished - Success"
        initial_connection_timeout: 90
        setup_finished_timeout: 300
  custom_local:
    credential: "user"
    pods:
      - name: "test_pod_local"
        key: "custom"
        params:
          pod_param_2: "node overriden value"
      - name: "test_pod_local_2"
        key: "custom"
        params:
          pod_param_2: "node overriden value"
    params:
      host_test:
        log_file: "/var/log/setup.log"
        setup_finished_log_regex: "Setup Finished"
        setup_success_log_last_line: "Setup Finished"
        initial_connection_timeout: 3
        setup_finished_timeout: 5
      cron:
        - user: "root"
          src_file: "{{ params.env.repo_dir }}/cron/app.cron"
          dest_dir: "/var/spool/cron/crontabs"
  custom_node_service_local:
    service: "service_node_local"
    base_dir: "/var/cloud"
    credential: "user"
    params:
      host_test:
        log_file: "/var/log/setup.log"
        setup_finished_log_regex: "Setup Finished"
        setup_success_log_last_line: "Setup Finished"
        initial_connection_timeout: 3
        setup_finished_timeout: 5
pods:
  custom:
    repo: "pod"
    env_repos:
      - repo: "custom_pod"
        dir: "custom-pod"
    ctx: "custom-pod/test/ctx.yml"
    params_schema: "custom-pod/test/params.schema.yml"
    credentials_schema: "custom-pod/test/credentials.schema.yml"
    root: true
    fast_prepare: true
    skip_unchanged: false
    credentials:
      pod_credential_1: my_credential_1_1
      pod_credential_2: my_credential_1_2
    params:
      env_files_dir: "{{ params.env.repo_dir }}/test/files"
      test_schema:
        - 123
        - { p1: [{ p1: [456, { p1: 111 }] }, 012, { p1: 123 }] }
        - 789
        - { p1: 000 }
      custom_dir: "custom-pod"
      pod_param_1: "value_1"
      pod_param_2: "value_2"
      pod_param_3: "value_3"
tasks:
  test_task_cloud:
    type: "task"
    root: true
    file: "custom-cloud/test/run-tasks/task.yml"
    params_schema: "custom-cloud/test/run-tasks/task.schema.yml"
    credentials_schema: "custom-cloud/test/run-tasks/task.schema.yml"
    credentials:
      prop1: "test_task_prop1_cloud"
      prop2: "test_task_prop2"
      prop4: "test_task_prop4"
      prop5: "test_task_prop5"
    shared_params: ["test_task", "test_task_cloud"]
    group_params:
      prop3: "test_task_prop3"
  test_task_env:
    type: "task"
    target_origin: "env"
    root: true
    file: "{{ params.env.repo_dir }}/test/run-tasks/task.yml"
    params_schema: "{{ params.env.repo_dir }}/test/run-tasks/task.schema.yml"
    credentials_schema: "{{ params.env.repo_dir }}/test/run-tasks/task.schema.yml"
    credentials:
      prop1: "test_task_prop1_env"
      prop2: "test_task_prop2"
      prop4: "test_task_prop4"
      prop5: "test_task_prop5"
    shared_params: ["test_task", "test_task_env"]
    group_params:
      prop3: "test_task_prop3"
  test_task_pod:
    type: "task"
    target_origin: "pod"
    root: true
    file: "custom-pod/test/run-tasks/task.yml"
    params_schema: "custom-pod/test/run-tasks/task.schema.yml"
    credentials_schema: "custom-pod/test/run-tasks/task.schema.yml"
    credentials:
      prop1: "test_task_prop1_pod"
      prop2: "test_task_prop2"
      prop4: "test_task_prop4"
      prop5: "test_task_prop5"
    shared_params: ["test_task", "test_task_pod"]
    group_params:
      prop3: "test_task_prop3"
  test:
    type: "shell"
    cmd: "bash custom-pod/test/run.sh"
  test_skip:
    type: "skip"
task_shared_params:
  test_task:
    prop1: "value1"
    prop2:
      inner_prop1: "inner_value1"
      inner_prop2:
        inner_prop1: "inner2_2_value1"
      inner_prop3:
        inner_prop1: "inner2_3_value1"
  test_task_cloud:
    prop1: "value1_cloud"
  test_task_env:
    prop1: "value1_env"
  test_task_pod:
    prop1: "value1_pod"
  test_task_overriden_1:
    prop4: "overriden_shared_1_4"
    prop5: "overriden_shared_1_5"
  test_task_overriden_2:
    prop4: "overriden_shared_2_4"
    prop5: "overriden_shared_2_5"
task_group_params:
  test_task_prop3:
    inner_prop1: "inner3_value1"
    inner_prop2:
      inner_prop1: "inner3_2_value1"
      inner_prop2:
        inner_prop1: "inner3_2_2_value1"
        inner_prop3:
          inner_prop1: "inner3_2_2_3_value1"
    inner_prop3:
      inner_prop1: "inner3_3_value1"
contents:
  user_data_str_1: |
    User Data Env 1 1
    User Data Env 1 2
    User Data Env 1 3
  user_data_str_2:
    type: "str"
    params:
      value: |
        User Data Env 2 1
        User Data Env 2 2
        User Data Env 2 3
  user_data_str_3:
    type: "str"
    shared_params: ["user_data_env_str"]
  user_data_file:
    type: "file"
    file: "custom-cloud/test/services/node/files/user-data.sh"
  user_data_file_env:
    type: "file"
    origin: "env"
    file: "{{ params.env.repo_dir }}/test/files/user-data.sh"
  user_data_tpl:
    type: "template"
    file: "custom-cloud/test/services/node/files/user-data.tpl.sh"
    params:
      prop1: "value_env_1"
    group_params:
      prop1: "user_data_1"
      prop2: "user_data_2"
    shared_params: ["user_data_1", "user_data_2"]
    shared_group_params: "user_data"
  user_data_tpl_env:
    type: "template"
    origin: "env"
    file: "{{ params.env.repo_dir }}/test/files/user-data.tpl.sh"
    params:
      prop1: "value_double_env_1"
    group_params:
      prop1: "user_data_1"
      prop2: "user_data_2"
    shared_params: ["user_data_1", "user_data_2"]
    shared_group_params: "user_data"
content_shared_group_params:
  user_data:
    prop1: "user_data_shared_1"
    prop2: "user_data_shared_2"
    prop3: "user_data_shared_3"
    prop4: "user_data_shared_4"
    prop5: "user_data_shared_5"
  user_data_overridden:
    prop1: "user_data_shared_overriden_1"
    prop2: "user_data_shared_overriden_2"
    prop3: "user_data_shared_overriden_3"
    prop4: "user_data_shared_overriden_4"
    prop5: "user_data_shared_overriden_5"
content_shared_params:
  user_data_str:
    value: |
      User Data Shared 1
      User Data Shared 2
      User Data Shared 3
  user_data_env_str:
    value: |
      User Data Env Shared 1
      User Data Env Shared 2
      User Data Env Shared 3
  user_data_1:
    prop1: "value_shared_1_1"
    prop2: "value_shared_1_2"
    prop3: "value_shared_1_3"
    prop4: "value_shared_1_4"
  user_data_2:
    prop2: "value_shared_2_2"
    prop4: "value_shared_2_4"
  user_data_overridden_1:
    prop1: "value_shared_overridden_1_1"
    prop2: "value_shared_overridden_1_2"
    prop3: "value_shared_overridden_1_3"
    prop4: "value_shared_overridden_1_4"
  user_data_overridden_2:
    prop2: "value_shared_overridden_2_2"
    prop4: "value_shared_overridden_2_4"
content_group_params:
  user_data_1: "value_group_1"
  user_data_2: "value_group_2"
  user_data_shared_1: "value_shared_group_1"
  user_data_shared_2: "value_shared_group_2"
  user_data_shared_3: "value_shared_group_3"
  user_data_shared_4: "value_shared_group_4"
  user_data_shared_5: "value_shared_group_5"
  user_data_overridden_1: "value_group_overridden_1"
  user_data_overridden_2: "value_group_overridden_2"
  user_data_shared_overriden_1: "value_shared_group_overriden_1"
  user_data_shared_overriden_2: "value_shared_group_overriden_2"
  user_data_shared_overriden_3: "value_shared_group_overriden_3"
  user_data_shared_overriden_4: "value_shared_group_overriden_4"
  user_data_shared_overriden_5: "value_shared_group_overriden_5"
repos:
  env_base:
    src: "https://github.com/lucasbasquerotto/env-base.git"
    version: "master"
  cloud:
    src: "https://github.com/lucasbasquerotto/ansible-docker.git"
    version: "master"
  custom_cloud:
    src: "https://github.com/lucasbasquerotto/custom-cloud.git"
    version: "master"
  pod:
    src: "https://github.com/lucasbasquerotto/pod.git"
    version: "master"
  custom_pod:
    src: "https://github.com/lucasbasquerotto/custom-pod.git"
    version: "master"
credentials:
  fake: {}
  fake_user:
    host_user: "test"
    host_pass: "123456"
  user:
    host_user: "root"
  my_credential_1_1: "my_secret_1_1"
  my_credential_1_2: "my_secret_1_2"
  my_credential_2_1: "my_secret_2_1"
  my_credential_2_2: "my_secret_2_2"
  my_credential_3_1: "my_secret_3_1"
  my_credential_3_2: "my_secret_3_2"
  my_credential_top_1_1: "my_secret_top_1_1"
  my_credential_top_1_2: "my_secret_top_1_2"
  my_credential_middle_1_1: "my_secret_middle_1_1"
  my_credential_middle_1_2: "my_secret_middle_1_2"
  my_credential_bottom_1_1: "my_secret_bottom_1_1"
  my_credential_bottom_1_2: "my_secret_bottom_1_2"
  my_credential_top_2_1: "my_secret_top_2_1"
  my_credential_top_2_2: "my_secret_top_2_2"
  my_credential_middle_2_1: "my_secret_middle_2_1"
  my_credential_middle_2_2: "my_secret_middle_2_2"
  my_credential_bottom_2_1: "my_secret_bottom_2_1"
  my_credential_bottom_2_2: "my_secret_bottom_2_2"
  digital_ocean: "{{ params.credentials.digital_ocean | default({}) }}"
  s3: "{{ params.credentials.s3 | default({}) }}"
  godaddy: "{{ params.credentials.godaddy | default({}) }}"
  cloudflare: "{{ params.credentials.cloudflare | default({}) }}"
  node_service_local_credential: { test_token: "1234556" }
  test_task_prop1_cloud: "value1_credential_cloud"
  test_task_prop1_env: "value1_credential_env"
  test_task_prop1_pod: "value1_credential_pod"
  test_task_prop2:
    inner_prop1: "inner2_value1"
    inner_prop2:
      inner_prop1: "inner2_2_value1"
      inner_prop2:
        inner_prop1: "inner2_2_2_value1"
        inner_prop3:
          inner_prop1: "inner2_2_2_3_value1"
    inner_prop3:
      inner_prop1: "inner2_3_value1"
  test_task_prop4: "value4_credential"
  test_task_prop5: "value5_credential"
