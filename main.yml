name: "{{ params.name }}"
ctxs: "{{ params.ctxs }}"
main:
  local:
    repo: "cloud"
    env_repos:
      - repo: "custom_cloud"
        dir: "custom-cloud"
    hosts: |
      [main]
      localhost ansible_connection=local
      [host]
    nodes:
    - name: "ctl"
      key: "local"
      local: true
  remote:
    repo: "cloud"
    env_repos:
      - repo: "custom_cloud"
        dir: "custom-cloud"
    hosts: |
      [main]
      localhost ansible_connection=local
      [host:children]
      ctl
      [ctl]
    initial_services:
      - "{{ params.env_params.vpn_service }}"
    nodes:
    - name: "ctl"
      key: "remote"
  external:
    repo: "cloud"
    env_repos:
      - repo: "custom_cloud"
        dir: "custom-cloud"
    hosts:
      type: "template"
      file: "{{ params.env.repo_dir }}/files/external.hosts"
      credentials:
        ctl: "host"
      params:
        node_types:
        - name: "ctl"
          hosts:
          - name: "ctl-external-host"
            ip: "{{ params.env_params.external_ipv4 | default('') }}"
            ipv4: "{{ params.env_params.external_ipv4 | default('') }}"
            ipv6: "{{ params.env_params.external_ipv6 | default('') }}"
            private_ip: "{{ params.env_params.external_private_ip | default('') }}"
    initial_services:
      - "{{ params.env_params.vpn_service }}"
    nodes:
    - name: "ctl"
      key: "remote"
      external: true
services:
  digital_ocean_vpn:
    base_dir: "custom-cloud"
    task: "tasks/vpn/digital_ocean.main.vpn.yml"
    credentials:
      vpn: "digital_ocean"
    params:
      tags:
        - "auto"
        - "dmz"
      firewalls:
        - name: "private"
          tags: ["auto"]
          inbound_rules:
            - ports: "9080"
              sources:
                addresses: "{{ params.env_params.private_ips }}"
            - ports: "9443"
              sources:
                addresses: "{{ params.env_params.private_ips }}"
        - name: "auto"
          tags: ["auto"]
          inbound_rules:
            - ports: "22"
              sources:
                tags: ["main"]
          outbound_rules:
            - protocol: "tcp"
              ports: "1-65535"
              destinations:
                addresses: ["0.0.0.0/0", "::/0"]
            - protocol: "udp"
              ports: "1-65535"
              destinations:
                addresses: ["0.0.0.0/0", "::/0"]
            - protocol: "icmp"
              ports: "1-65535"
              destinations:
                addresses: ["0.0.0.0/0", "::/0"]
        - name: "dmz"
          tags: ["dmz"]
          inbound_rules:
            - ports: "80"
              sources:
                addresses: ["0.0.0.0/0", "::/0"]
            - ports: "443"
              sources:
                addresses: ["0.0.0.0/0", "::/0"]
  digital_ocean_node:
    base_dir: "custom-cloud"
    namespace: "ext_node"
    task: "tasks/node/digital_ocean.main.node.yml"
    schema: "tasks/node/digital_ocean.schema.node.yml"
    credentials:
      node: "digital_ocean"
    params:
      image_id: "ubuntu-18-04-x64"
      ipv6: true
      region_id: "ams3"
      size_id: "s-1vcpu-1gb"
      tags:
        - "auto"
        - "dmz"
    contents:
      user_data:
        type: "template"
        origin: "cloud"
        file: "custom-cloud/files/user-data/ubuntu-18.04.tpl.sh"
        schema: "custom-cloud/files/user-data/ubuntu-18.04.schema.yml"
        credentials:
          node: "host"
        contents:
          host_ssh_public_keys:
            origin: "env"
            file: "{{ params.credentials.host.host_ssh_public_keys_path | default('') }}"
nodes:
  local: {}
  remote:
    service: "{{ params.env_params.node_service }}"
    base_dir: "/var/cloud"
    credential: "host"
    pods: ["main"]
    params:
      cron:
        - user: "root"
          src_file: "{{ params.env.repo_dir }}/cron/app.cron"
          dest_dir: "/var/spool/cron/crontabs"
      host_test:
        log_file: "/var/log/setup.log"
        setup_finished_log_regex: "$Setup Finished*"
        setup_success_log_last_line: "Setup Finished - Success"
        initial_connection_timeout: 90
        setup_finished_timeout: 300
node_shared_params:
  local:
    size:
      memory: "1gb"
      cpu: 1
    cron:
    - user: "root"
      src_file: "{{ params.env.repo_dir }}/cron/main.cron"
      dest_dir: "/var/spool/cron/crontabs"
  do_ubuntu_remote:
    instance:
      image: "ubuntu-18-04-x64"
      user_data_file: "{{ params.env.repo_dir }}/templates/ubuntu-18.04.j2.sh"
      ipv6: "yes"
    region:
      name: "ams3"
      region: "ams"
      zone: "3"
    size:
      name: "s-1vcpu-1gb"
      memory: "1gb"
      cpu: 1
    host_test:
      log_file: "/var/log/setup.log"
      setup_last_line: "Setup Finished"
      initial_connection_timeout: 90
      setup_finished_timeout: 300
    x_digital_ocean_tags: ["main"]
pods:
  main:
    repo: "main"
    root: "yes"
    ctx: "ctx.yml"
    fast_prepare: "true"
    env_repos:
    - repo: "main_env"
      dir: "env-main"
    credentials:
      vault: "vault"
tasks:
  skip:
    type: "skip"
  docker_compose_install:
    type: "task"
    root: "true"
    file: "docker.yml"
    compose_params:
      version: "1.27.2"
      remote: true
  main_build:
    type: "task"
    root: "true"
    file: "docker-compose.build.yml"
  main_wait:
    type: "shell"
    root: "true"
    cmd: "sleep {{ params.env_params.wait | default('60') }}"
repos:
  cloud:
    src: "https://github.com/lucasbasquerotto/cloud.git"
    version: "master"
  main:
    src: "https://github.com/lucasbasquerotto/ansible-manager"
    version: "master"
  main_env:
    src: "ssh://git@bitbucket.org/lucasbasquerotto/ansible-main-env-demo.git"
    version: "master"
    private: true
    key_file_encrypted: "ssh/env_main.encrypted.key"
credentials:
  node: "{{ params.credentials.node | default({}) }}"
  vault: "{{ params.credentials.vault | default({}) }}"
  digital_ocean: "{{ params.credentials.digital_ocean | default({}) }}"
