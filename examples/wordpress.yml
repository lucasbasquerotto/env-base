name: "{{ params.name }}"
ctxs: "{{ params.ctxs }}"
migration: ""
container: ""
meta:
  ignore_validators: false
  skip_local_pod_preparation: false
  template_no_empty_lines: true
cloud:
  repo: "cloud"
  ext_repos:
    - repo: "ext_cloud"
      dir: "ext-cloud"
  collections:
    - namespace: "lrd"
      collection: "ext_cloud"
      path: "ext-cloud/collection"
  hosts:
    type: "template"
    file: "files/hosts.tpl.ini"
    schema: "files/hosts.schema.yml"
main:
  cloud:
    extend_cloud: true
    initial_services:
      - "{{ params.env_params.cloud_service }}"
  local:
    extend_cloud: true
    nodes:
      - name: "app"
        key: "wp_local"
        local: true
    extra_repos:
      - repo: "app"
        dir: "app-wp"
  remote:
    extend_cloud: true
    initial_services:
      - "{{ params.env_params.cloud_service }}"
      - name: "s3_buckets"
        can_destroy: true
    nodes:
      - name: "app"
        key: "wp"
        can_destroy: true
    run_stages:
      - tasks:
          - name: "docker_compose_install"
            all_nodes: true
            task_target: "node"
          - name: "main_upgrade"
            all_nodes: true
            task_target: "pod"
  nodes:
    extend_cloud: true
    initial_services:
      - "{{ params.env_params.cloud_service }}"
      - name: "s3_buckets"
        can_destroy: true
    nodes:
      - name: "db"
        key: "wp"
        can_destroy: true
        dependencies:
          elasticsearch:
            type: "url"
            host: "{{ params.env_params.elasticsearch_url | default('') }}"
        params:
          service_params:
            tags:
              - "auto"
              - "wp-mysql"
        pods:
          wp:
            params:
              type: "db"
            group_params:
              memory: "memory_db"
      - name: "web"
        key: "wp"
        can_destroy: true
        dependencies:
          mysql:
            type: "node"
            host: "db"
            port: "3306"
          elasticsearch:
            type: "url"
            host: "{{ params.env_params.elasticsearch_url | default('') }}"
        params:
          service_params:
            tags:
              - "auto"
              - "wp-web"
              - "wp-dmz"
        pods:
          wp:
            params:
              type: "web"
            group_params:
              memory: "memory_web"
    run_stages:
      - tasks:
          - name: "docker_compose_install"
            all_nodes: true
            task_target: "node"
          - name: "main_build"
            all_nodes: true
            task_target: "pod"
          - name: "main_upgrade"
            nodes: ["db"]
            task_target: "pod"
      - tasks:
          - name: "main_upgrade"
            nodes: ["web"]
            task_target: "pod"
services:
  skip:
    list: true
    services: []
  s3_buckets:
    base_dir: "ext-cloud"
    namespace: "ext_s3"
    task: "tasks/s3/main.s3.yml"
    schema: "tasks/s3/schema.s3.yml"
    validator: "tasks/s3/validator.s3.yml"
    credentials:
      s3: "s3"
    params:
      list:
        - bucket: "{{ params.env_params.backup_bucket_name }}"
          permission: "private"
        - bucket: "{{ params.env_params.uploads_bucket_name }}"
          permission: "public-read"
  node_dns_service:
    base_dir: "ext-cloud"
    namespace: "ext_dns"
    task: >-
      tasks/dns/{{
        params.env_params.dns_provider | default('')
      }}/{{
        params.env_params.dns_provider | default('')
      }}.main.dns.yml
    schema: >-
      tasks/dns/{{
        params.env_params.dns_provider | default('')
      }}/{{
        params.env_params.dns_provider | default('')
      }}.schema.dns.yml
    validator: >-
      tasks/dns/{{
        params.env_params.dns_provider | default('')
      }}/{{
        params.env_params.dns_provider | default('')
      }}.validator.dns.yml
    credentials:
      dns: "{{ params.env_params.dns_provider }}"
    params:
      zone: "{{ params.env_params.main_domain }}"
  digital_ocean_vpn:
    base_dir: "ext-cloud"
    namespace: "ext_vpn"
    task: "tasks/vpn/digital_ocean/digital_ocean.main.vpn.yml"
    schema: "tasks/vpn/digital_ocean/digital_ocean.schema.vpn.yml"
    validator: "tasks/vpn/digital_ocean/digital_ocean.validator.vpn.yml"
    credentials:
      vpn: "digital_ocean"
    params:
      tags:
        - "auto"
        - "wp-mysql"
        - "wp-web"
        - "wp-dmz"
      firewalls:
        - name: "private"
          tags: ["auto"]
          inbound_rules:
            - ports: "9080"
              sources:
                addresses: "{{ params.env_params.private_ips }}"
            - ports: "9443"
              sources:
                addresses: "{{ params.env_params.private_ips }}"
        - name: "auto"
          tags: ["auto"]
          inbound_rules:
            - ports: "22"
              sources:
                tags: ["main"]
                addresses: "{{ params.env_params.private_ips }}"
          outbound_rules:
            - protocol: "tcp"
              ports: "1-65535"
              destinations:
                addresses: ["0.0.0.0/0", "::/0"]
            - protocol: "udp"
              ports: "1-65535"
              destinations:
                addresses: ["0.0.0.0/0", "::/0"]
            - protocol: "icmp"
              ports: "1-65535"
              destinations:
                addresses: ["0.0.0.0/0", "::/0"]
        - name: "wp-mysql"
          tags: ["wp-mysql"]
          inbound_rules:
            - ports: "3306"
              sources:
                tags: ["wp-web"]
        - name: "wp-web"
          tags: ["wp-web"]
          inbound_rules:
            - ports: "80"
              sources:
                tags: ["wp-dmz"]
            - ports: "443"
              sources:
                tags: ["wp-dmz"]
        - name: "wp-dmz"
          tags: ["wp-dmz"]
          inbound_rules:
            - ports: "80"
              sources:
                addresses: ["0.0.0.0/0", "::/0"]
            - ports: "443"
              sources:
                addresses: ["0.0.0.0/0", "::/0"]
  digital_ocean_node:
    base_dir: "ext-cloud"
    namespace: "ext_node"
    task: "tasks/node/digital_ocean/digital_ocean.main.node.yml"
    schema: "tasks/node/digital_ocean/digital_ocean.schema.node.yml"
    validator: "tasks/node/digital_ocean/digital_ocean.validator.node.yml"
    credentials:
      node: "digital_ocean"
    params:
      image_id: "ubuntu-18-04-x64"
      ipv6: true
      region_id: "ams3"
      size_id: "s-2vcpu-2gb"
    contents:
      user_data:
        type: "template"
        origin: "cloud"
        file: "ext-cloud/files/user-data/ubuntu-18.04.tpl.sh"
        schema: "ext-cloud/files/user-data/ubuntu-18.04.schema.yml"
        params:
          user_directories: ["/var/cloud"]
          install_docker: true
          install_podman: false
          install_packages: false
        credentials:
          node: "host"
        contents:
          host_ssh_public_keys: "{{ params.env_params.host_ssh_public_keys_content | default('') }}"
  linode:
    base_dir: "ext-cloud"
    namespace: "ext_node"
    task: "tasks/node/linode/linode.main.node.yml"
    schema: "tasks/node/linode/linode.schema.node.yml"
    validator: "tasks/node/linode/linode.validator.node.yml"
    credentials:
      node: "linode"
    params:
      image: "linode/ubuntu18.04"
      region: "us-east"
      type: "g6-standard-1"
    contents:
      user_data:
        type: "template"
        origin: "cloud"
        file: "ext-cloud/files/user-data/ubuntu-18.04.tpl.sh"
        schema: "ext-cloud/files/user-data/ubuntu-18.04.schema.yml"
        params:
          user_directories: ["/var/cloud"]
          install_docker: true
          install_podman: false
          install_packages: false
        credentials:
          node: "host"
        contents:
          host_ssh_public_keys: "{{ params.env_params.host_ssh_public_keys_content | default('') }}"
nodes:
  wp_local:
    credentials:
      host: "localhost"
    pods:
      - name: "wp"
        params:
          local: true
          wp_env: "development"
          named_volumes: "{{ params.env_params.named_volumes | default(false) }}"
          custom_ssl: "{{ params.env_params.local_custom_ssl | default({}) }}"
          migrate_old_domain_host: "{{ params.env_params.wp_old_domain_host | default('') }}"
          migrate_new_domain_host: >-
            {{ params.env_params.ssl | bool | ternary('https', 'http')
            }}://localhost:{{ params.env_params.ssl | bool | ternary(8443, 8080) }}/
          enable_logs_setup: false
          enable_sync_setup: false
          main_domain: "{{ params.env_params.local_main_domain | default('localhost') }}"
          domains: "{{ params.env_params.local_domains | default({}) }}"
          ports:
            public_http_port: "8080"
            public_https_port: "8443"
            private_http_port: "9080"
            private_https_port: "9443"
        group_params:
          db_setup_new: "db_setup_new_local"
          db_backup: "db_backup_no_sync"
          uploads_backup: "uploads_backup_no_sync"
  wp:
    service:
      name: "{{ params.env_params.node_service }}"
      params:
        tags:
          - "auto"
          - "wp-dmz"
    dns_service: "node_dns_service"
    base_dir: "/var/cloud"
    root: true
    credentials:
      host: "host"
    params:
      dns_service_params_list: "{{ params.env_params.dns_service_params_list | default([]) }}"
      host_users:
        - name: "host"
          setup_log_file: "/var/log/setup.log"
          setup_finished_log_regex: "^Setup Finished.*$"
          setup_success_log_last_line: "Setup Finished - Success"
          initial_connection_timeout: 90
          setup_finished_timeout: 300
      cron:
        - dest: "/var/spool/cron/crontabs/root"
          user: "root"
          src:
            type: "template"
            origin: "cloud"
            file: "ext-cloud/files/cron/pod.tpl.sh"
            schema: "ext-cloud/files/cron/pod.schema.yml"
            params:
              tasks:
                - name: "sync"
                  task: "sync:verify"
                  cron: "*/1 * * * *"
                - name: "backup"
                  cron: "*/5 * * * *"
    pods:
      - name: "wp"
        params:
          local: false
          domains: "{{ params.env_params.domains | default({}) }}"
          ports:
            public_http_port: "80"
            public_https_port: "443"
            private_http_port: "9080"
            private_https_port: "9443"
pods:
  wp:
    repo: "pod"
    root: "yes"
    ctx: "ext-pod/wordpress/wordpress.ctx.yml"
    schema: "ext-pod/wordpress/wordpress.schema.yml"
    validator: "ext-pod/wordpress/wordpress.validator.yml"
    fast_prepare: "true"
    ext_repos:
      - repo: "ext_pod"
        dir: "ext-pod"
    credentials:
      wordpress: "wordpress"
      mysql: "mysql"
      minio_gateway: "minio_gateway"
      backup_bucket: "s3"
      uploads_bucket: "s3"
      backup_replica_bucket: "s3_replica"
      uploads_replica_bucket: "s3_replica"
    params:
      type: "app"
      orchestration: "docker_compose"
      custom_dir: "ext-pod"
      custom_dir_sync: "{{ params.env_params.pod_custom_dir_sync | default(false) }}"
      main_domain: "{{ params.env_params.main_domain }}"
      wp_env: "staging"
      app_dev: "{{ params.env_params.app_dev | default(false) }}"
      app_repo_dir: "app-wp"
      use_ssl: "{{ params.env_params.ssl | default(false) }}"
      use_pod_prefix: "{{ params.env_params.use_pod_prefix | default(false) }}"
      use_pod_full_prefix: "{{ params.env_params.use_pod_full_prefix | default(false) }}"
      use_composer: "{{ params.env_params.use_composer | default(false) }}"
      use_varnish: "{{ params.env_params.use_varnish | default(false) }}"
      use_redis: "{{ params.env_params.use_redis | default(false) }}"
      use_memcached: "{{ params.env_params.use_memcached | default(false) }}"
      use_pma: "{{ params.env_params.use_pma | default(false) }}"
      use_adminer: "{{ params.env_params.use_adminer | default(false) }}"
      use_theia: "{{ params.env_params.use_theia | default(false) }}"
      use_minio_gateway: "{{ params.env_params.use_minio_gateway | default(false) }}"
      use_filestash: "{{ params.env_params.use_filestash | default(false) }}"
      use_fluentd: "{{ params.env_params.use_fluentd | default(false) }}"
      use_certbot: "{{ params.env_params.use_certbot | default(false) }}"
      block_ips: "{{ params.env_params.block_ips | default(false) }}"
      auth_file: "{{ params.env_params.auth_file | default('') }}"
      s3_cli: "{{ params.env_params.s3_cli | default('') }}"
      define_s3_backup_lifecycle: "{{ params.env_params.define_s3_backup_lifecycle | default(false) }}"
      s3_backup_lifecycle_file: "s3-backup-lifecycle.json"
      backup_bucket_name: "{{ params.env_params.backup_bucket_name }}"
      backup_bucket_path: "{{ params.env_params.backup_bucket_path | default('') }}"
      uploads_bucket_name: "{{ params.env_params.uploads_bucket_name }}"
      uploads_bucket_path: "{{ params.env_params.uploads_bucket_path | default('') }}"
      backup_replica_bucket_name: "{{ params.env_params.backup_replica_bucket_name }}"
      backup_replica_bucket_path: "{{ params.env_params.backup_replica_bucket_path | default('') }}"
      uploads_replica_bucket_name: "{{ params.env_params.uploads_replica_bucket_name }}"
      uploads_replica_bucket_path: "{{ params.env_params.uploads_replica_bucket_path | default('') }}"
      db_gui_root_user: "{{ params.env_params.db_gui_root_user | default('') }}"
      enable_db_backup: "{{ params.env_params.enable_db_backup | default('') }}"
      enable_db_setup: "{{ params.env_params.enable_db_setup | default('') }}"
      enable_db_setup_new: "{{ params.env_params.enable_db_setup_new | default('') }}"
      enable_logs_backup: "{{ params.env_params.enable_logs_backup | default('') }}"
      enable_logs_setup: "{{ params.env_params.enable_logs_setup | default('') }}"
      enable_sync_backup: "{{ params.env_params.enable_sync_backup | default('') }}"
      enable_sync_setup: "{{ params.env_params.enable_sync_setup | default('') }}"
      enable_uploads_backup: "{{ params.env_params.enable_uploads_backup | default('') }}"
      enable_uploads_setup: "{{ params.env_params.enable_uploads_setup | default('') }}"
      enable_backup_replica: "{{ params.env_params.enable_backup_replica | default(false) }}"
      enable_uploads_replica: "{{ params.env_params.enable_uploads_replica | default(false) }}"
      use_s3_storage: "{{ params.env_params.use_s3_storage | default('') }}"
      use_w3tc: "{{ params.env_params.use_w3tc | default('') }}"
      migrate_wp_activate_all_plugins: false
      migrate_wp_plugins_to_activate: >-
        {{ params.env_params.migrate_wp_plugins_to_activate | default('') }}
      migrate_wp_plugins_to_deactivate: >-
        {{ params.env_params.migrate_wp_plugins_to_deactivate | default('') }}
      migrate_old_domain_host: "{{ params.env_params.wp_old_domain_host | default('') }}"
      migrate_new_domain_host: "{{ params.env_params.wp_new_domain_host | default('') }}"
      migrate_wp_rewrite_structure: "/%year%/%monthnum%/%day%/%postname%"
      certbot:
        email: "{{ params.env_params.certbot_email | default('') }}"
        staging: "{{ params.env_params.certbot_staging | default(false) }}"
        force: "{{ params.env_params.certbot_force | default(false) }}"
      services:
        mysql:
          port: "3306"
        wordpress:
          lang: "en_US"
          debug: "{{ params.env_params.wp_debug | default(false) }}"
        fluentd:
          port: "24224"
      images:
        nginx_image: "nginx"
        nginx_version: "1.14.2-alpine"
        varnish_image: "varnish"
        varnish_version: "6.4.0-1"
        wordpress_image: "lucasbasquerotto/wordpress"
        wordpress_version: "20200825"
        redis_image: "redis"
        redis_version: "6.0.6"
        memcached_image: "memcached"
        memcached_version: "1.6.6"
        pma_image: "phpmyadmin/phpmyadmin"
        pma_version: "4.8.5"
        adminer_image: "lucasbasquerotto/image"
        adminer_version: "adminer-20200713-03"
        mysql_image: "lucasbasquerotto/wordpress"
        mysql_version: "mysql-8.0.16-02"
        theia_image: "theiaide/theia"
        theia_version: "1.3.0"
        minio_gateway_image: "minio/minio"
        minio_gateway_version: "RELEASE.2020-07-02T00-15-09Z"
        filestash_image: "machines/filestash"
        filestash_version: "4cbeb2c"
        toolbox_image: "lucasbasquerotto/image"
        toolbox_version: "toolbox-20200715-02"
        composer_image: "lucasbasquerotto/wordpress"
        composer_version: "composer-1.8.6"
        certbot_image: "certbot/certbot"
        certbot_version: "v1.2.0"
        awscli_image: "lucasbasquerotto/aws-cli"
        awscli_version: "1.0.0"
        mc_image: "minio/mc"
        mc_version: "RELEASE.2021-03-12T03-36-59Z"
        rclone_image: "rclone/rclone"
        rclone_version: "1.53.0"
        logrotator_image: "python"
        logrotator_version: "3.8.4-buster"
        fluentd_image: "lucasbasquerotto/image"
        fluentd_version: "fluentd-20200617"
    group_params:
      memory: "memory_app"
      db_setup_new: "db_setup_new"
      db_setup: >-
        {{
        params.env_params.non_s3_setup | default(false) | bool |
        ternary('db_setup_restore_file', 'db_setup_restore_s3')
        }}
      db_backup: "db_backup_no_sync"
      uploads_setup: >-
        {{
        params.env_params.non_s3_setup | default(false) | bool |
        ternary('uploads_setup_file', 'uploads_setup_s3')
        }}
      uploads_backup: "uploads_backup_sync"
    transfer:
      - dest: "env/{{ params.env_params.s3_cli | default('') }}/etc/s3-backup-lifecycle.json"
        when: "{{ params.env_params.define_s3_backup_lifecycle | default(false) | bool }}"
        src:
          type: "template"
          origin: "cloud"
          file: "ext-cloud/files/s3/s3_lifecycle.json.j2"
          schema: "ext-cloud/files/s3/s3_lifecycle.schema.yml"
          params:
            rules:
              - name: "logs-expiration"
                filter_prefix: "logs/"
                expiration_days: 30
                older_versions_expiration_days: 180
              - name: "db-expiration"
                filter_prefix: "db/"
                expiration_days: 15
                older_versions_expiration_days: 90
pod_group_params:
  memory_app:
    nginx: 256mb
    varnish: 256mb
    wordpress: 256mb
    redis: 256mb
    memcached: 256mb
    pma: 256mb
    adminer: 256mb
    mysql: 512mb
    theia: 512mb
    minio_gateway: 256mb
    filestash: 256mb
    toolbox: 256mb
    composer: 256mb
    fluentd: 256mb
    certbot: 256mb
    s3_cli: 256mb
  memory_db:
    mysql: 1gb
    toolbox: 512mb
    fluentd: 256mb
    s3_cli: 512mb
  memory_cache:
    redis: 512mb
    memcached: 512mb
  memory_web:
    nginx: 512mb
    varnish: 512mb
    wordpress: 1gb
    pma: 512mb
    adminer: 512mb
    theia: 512mb
    minio_gateway: 512mb
    filestash: 512mb
    toolbox: 512mb
    fluentd: 256mb
    certbot: 256mb
    s3_cli: 512mb
  db_backup_sync:
    backup_bucket_sync_dir: "db"
  db_backup_no_sync:
    is_compressed_file: true
  db_setup_restore_file:
    restore_use_s3: false
    restore_remote_file: "https://github.com/lucasbasquerotto/backups/blob/master/wordpress/db/20200624_214700.zip?raw=true"
    is_compressed_file: true
    db_file_name: "{{ params.credentials.wordpress.db.name }}.sql"
  db_setup_restore_s3:
    restore_use_s3: true
    restore_s3_sync: true
    restore_remote_bucket_path_dir: "db"
  db_setup_new:
    title: "{{ params.env_params.wp_title }}"
    restore_seed: "{{ params.env_params.wp_restore_seed | default(false) }}"
    remote_seed_data: "https://gist.githubusercontent.com/lucasbasquerotto/667447640482369d0c6b093ee7200c96/raw/9d9d446b9f1017aa4bc12628aea954f1f10f020c/wordpress-theme-unit-test-data.xml"
  db_setup_new_local:
    title: "{{ params.env_params.wp_title }}"
    restore_seed: "{{ params.env_params.wp_restore_seed | default(false) }}"
    remote_seed_data: "https://gist.githubusercontent.com/lucasbasquerotto/667447640482369d0c6b093ee7200c96/raw/9d9d446b9f1017aa4bc12628aea954f1f10f020c/wordpress-theme-unit-test-data.xml"
  uploads_backup_sync:
    backup_bucket_sync_dir: "uploads"
  uploads_backup_no_sync:
    is_compressed_file: true
  uploads_setup_file:
    restore_use_s3: false
    restore_remote_file: "https://github.com/lucasbasquerotto/backups/blob/master/wordpress/uploads/20200624_214700.zip?raw=true"
    is_compressed_file: true
    restore_compressed_inner_dir: "uploads"
  uploads_setup_s3:
    restore_use_s3: true
    restore_s3_sync: true
    restore_bucket_path_dir: "uploads"
tasks:
  docker_compose_install:
    type: "task"
    root: true
    file: "ext-cloud/run-tasks/docker.yml"
    schema: "ext-cloud/run-tasks/docker.schema.yml"
    params:
      compose:
        version: "1.27.2"
  main_build:
    type: "shell"
    root: true
    cmd: "./run build"
  main_upgrade:
    type: "shell"
    root: true
    cmd: "./run upgrade"
repos:
  cloud:
    src: "https://github.com/lucasbasquerotto/cloud.git"
    version: "master"
  ext_cloud:
    src: "https://github.com/lucasbasquerotto/ext-cloud.git"
    version: "master"
  pod:
    src: "https://github.com/lucasbasquerotto/pod.git"
    version: "master"
  ext_pod:
    src: "https://github.com/lucasbasquerotto/ext-pod.git"
    version: "master"
  app:
    src: "https://github.com/lucasbasquerotto/wordpress-docker.git"
    version: "master"
credentials: "{{ params.credentials }}"
