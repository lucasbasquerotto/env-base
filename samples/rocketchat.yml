name: "{{ params.name }}"
main:
  local:
    clouds:
    - "local"
    nodes:
    - name: "app"
      key: "rocketchat_local"
      pods:
        rocketchat:
          group_params:
            run: "rocketchat_run_local"
            run_tasks: "rocketchat_run_tasks_app_local"
    local:
      pods:
      - "rocketchat"
    params:
      entrypoint: "main.yml"
      entrypoint_template_src: "main.tpl.yml"
      hosts_content: |
        [main]
        localhost ansible_connection=local
        [host]
      meta:
        template_no_empty_lines: true
      repo: "cloud"
  remote:
    destroy:
      nodes: true
      buckets: true
    clouds:
    - "{{ params.env_params.cloud_name }}"
    buckets:
    - "rocketchat_uploads"
    - "rocketchat_backup"
    nodes:
    - name: "app"
      key: "rocketchat"
      pods:
        rocketchat:
          group_params:
            run: "rocketchat_run"
            run_tasks: "rocketchat_run_tasks_app"
    run_stages:
    - tasks:
      - name: "docker_compose_install"
        all_nodes: true
        nodes_tasks: true
      - name: "main_build"
        all_nodes: true
        pods_tasks: true
      - name: "main_upgrade"
        all_nodes: true
        pods_tasks: true
    params:
      entrypoint: "main.yml"
      entrypoint_template_src: "main.tpl.yml"
      repo: "cloud"
      hosts_content: |
        [main]
        localhost ansible_connection=local
        [host:children]
        app
        [app]
  remote_local_test:
    clouds:
    - "local"
    nodes:
    - name: "app"
      key: "rocketchat_local"
      pods:
        rocketchat:
          params:
            remote_test: true
          group_params:
            run: "rocketchat_run_local"
            run_tasks: "rocketchat_run_tasks_app_local"
    local:
      pods:
      - "rocketchat"
    params:
      entrypoint: "main.yml"
      entrypoint_template_src: "main.tpl.yml"
      hosts_content: |
        [main]
        localhost ansible_connection=local
        [host]
      meta:
        template_no_empty_lines: true
      repo: "cloud"
  nodes:
    destroy:
      nodes: true
      buckets: true
    clouds:
    - "{{ params.env_params.cloud_name }}"
    buckets:
    - "rocketchat_uploads"
    - "rocketchat_backup"
    nodes:
    - name: "db"
      key: "rocketchat"
      pods:
        rocketchat:
          params:
            type: "db"
          group_params:
            custom_memory: "rocketchat_custom_memory_db"
            run: "rocketchat_run"
            run_tasks: "rocketchat_run_tasks_db"
    - name: "web"
      key: "rocketchat"
      dependencies:
      - host: "mongo"
        node: "db"
      pods:
        rocketchat:
          params:
            type: "web"
          group_params:
            custom_memory: "rocketchat_custom_memory_web"
            run: "rocketchat_run"
            run_tasks: "rocketchat_run_tasks_web"
    run_stages:
    - tasks:
      - name: "docker_compose_install"
        all_nodes: true
        nodes_tasks: true
      - name: "main_build"
        all_nodes: true
        pods_tasks: true
      - name: "main_upgrade"
        nodes: ["db"]
        pods_tasks: true
    - tasks:
      - name: "main_upgrade"
        nodes: ["web"]
        pods_tasks: true
    params:
      entrypoint: "main.yml"
      entrypoint_template_src: "main.tpl.yml"
      repo: "cloud"
      hosts_content: |
        [main]
        localhost ansible_connection=local
        [host:children]
        db
        web
        [db]
        [web]
clouds:
  local:
    type: "local"
  digital_ocean:
    type: "digital_ocean"
    credentials: "digital_ocean"
    params:
      x_digital_ocean_tags:
      - "auto"
      - "dmz"
      x_digital_ocean_firewalls:
      - name: "auto"
        tags: ["auto"]
        inbound_rules:
        - ports: "22"
          sources:
            tags: ["main"]
        outbound_rules:
        - protocol: "tcp"
          ports: "1-65535"
          destinations:
            addresses: ["0.0.0.0/0", "::/0"]
        - protocol: "udp"
          ports: "1-65535"
          destinations:
            addresses: ["0.0.0.0/0", "::/0"]
        - protocol: "icmp"
          ports: "1-65535"
          destinations:
            addresses: ["0.0.0.0/0", "::/0"]
      - name: "dmz"
        tags: ["dmz"]
        inbound_rules:
        - ports: "80"
          sources:
            addresses: ["0.0.0.0/0", "::/0"]
        - ports: "443"
          sources:
            addresses: ["0.0.0.0/0", "::/0"]
dns:
  cloudflare:
    type: "cloudflare"
    zone: "{{ params.env_params.domain }}"
    credentials: "cloudflare"
  godaddy:
    type: "godaddy"
    zone: "{{ params.env_params.domain }}"
    credentials: "godaddy"
buckets:
  rocketchat_backup:
    name: "{{ params.env_params.rocketchat_backup_bucket_name }}"
    endpoint: "{{ params.env_params.rocketchat_backup_bucket_endpoint }}"
    credentials: "rocketchat_backup_bucket"
nodes:
  rocketchat_local:
    cloud: "local"
    base_dir: "/var/cloud"
    credentials: "user"
    pods:
    - name: "rocketchat"
      params:
        local: true
      group_params:
        custom_args: "rocketchat_custom_args"
        custom_domain: "rocketchat_custom_domain_local"
    params:
      size:
        memory: "2gb"
        cpu: 2
  rocketchat:
    cloud: "{{ params.env_params.cloud_name }}"
    base_dir: "/var/cloud"
    credentials: "host"
    pods:
    - name: "rocketchat"
      params:
        local: false
      group_params:
        custom_args: "rocketchat_custom_args"
        custom_domain: "rocketchat_custom_domain"
    params:
      dns:
      - record: "{{ params.env_params.main_dns_record }}"
        name: "{{ params.env_params.main_dns_name }}"
      - record: "{{ params.env_params.mongo_express_dns_record }}"
        name: "{{ params.env_params.mongo_express_dns_name }}"
      cron:
      - user: "root"
        src_file: "{{ params.env.repo_dir }}/cron/app.cron"
        dest_dir: "/var/spool/cron/crontabs"
      instance:
        image: "ubuntu-18-04-x64"
        user_data_file: "{{ params.env.repo_dir }}/templates/ubuntu-18.04.j2.sh"
        ipv6: "yes"
      region:
        name: "ams3"
        region: "ams"
        zone: "3"
      size:
        name: "s-1vcpu-1gb"
        memory: "1gb"
        cpu: 1
      host_test:
        log_file: "/var/log/setup.log"
        setup_last_line: "Setup Finished"
        initial_connection_timeout: 90
        setup_finished_timeout: 300
      x_digital_ocean_tags:
      - "auto"
      - "dmz"
pods:
  rocketchat:
    repo: "pod"
    root: "yes"
    ctx: "custom-pod/rocketchat/ctx.yml"
    fast_prepare: "true"
    env_repos:
    - repo: "custom_pod"
      dir: "custom-pod"
    credentials:
      rocketchat: "rocketchat"
      hubot: "hubot"
      rocketchat_uploads_bucket: "rocketchat_uploads_bucket"
      rocketchat_backup_bucket: "rocketchat_backup_bucket"
    params:
      type: "app"
      orchestration: "docker_compose"
      custom_dir: "custom-pod"
      use_certbot: "{{ params.env_params.use_certbot }}"
      use_bot: "{{ params.env_params.use_bot }}"
    group_params:
      custom_images: "rocketchat_custom_images"
      custom_memory: "rocketchat_custom_memory_app"
      meta: "rocketchat_meta"
      run_dict: "rocketchat_run_dict"
      run_tasks_dict: "rocketchat_run_tasks_dict"
pod_params:
  rocketchat_custom_args:
    rocketchat:
      storage_type: "{{ params.env_params.s3_uploads | bool | ternary('AmazonS3', 'FileSystem') }}"
      uploads_bucket_endpoint: "{{ params.env_params.rocketchat_uploads_bucket_endpoint }}"
      uploads_bucket_name: "{{ params.env_params.rocketchat_uploads_bucket_name }}"
    mongo:
      host: "mongo"
      port: "27017"
    fluentd:
      port: "24224"
  rocketchat_custom_domain:
    public_http_port: "80"
    public_https_port: "443"
    private_http_port: "9080"
    private_https_port: "9443"
    main_domain: "{{ params.env_params.rocketchat_full_domain }}"
    main_ssl: "{{ params.env_params.ssl }}"
    me_domain: "{{ params.env_params.mongo_express_full_domain }}"
    me_ssl: "{{ params.env_params.ssl }}"
  rocketchat_custom_domain_local:
    public_http_port: "8080"
    public_https_port: "8443"
    private_http_port: "9080"
    private_https_port: "9443"
    main_domain: "localhost"
    main_ssl: "{{ params.env_params.ssl }}"
    me_domain: "localhost"
    me_ssl: "{{ params.env_params.ssl }}"
  rocketchat_custom_images:
    nginx_image: "nginx"
    nginx_version: "1.14.2-alpine"
    rocketchat_image: "rocket.chat"
    rocketchat_version: "3.2.2"
    hubot_image: "rocketchat/hubot-rocketchat"
    hubot_version: "v1.0.11"
    mongo_express_image: "mongo-express"
    mongo_express_version: "0.54.0"
    mongo_image: "mongo"
    mongo_version: "4.0"
    toolbox_image: "lucasbasquerotto/image"
    toolbox_version: "toolbox-20200513"
    certbot_image: "certbot/certbot"
    certbot_version: "v1.2.0"
    awscli_image: "lucasbasquerotto/aws-cli"
    awscli_version: "1.0.0"
    fluentd_image: "lucasbasquerotto/image"
    fluentd_version: "fluentd-20200617"
  rocketchat_custom_memory_app:
    nginx: 512mb
    rocketchat: 1gb
    hubot: 512mb
    mongo_express: 512mb
    mongo: 1gb
    toolbox: 512mb
    certbot: 256mb
    mongo_init: 512mb
    s3_uploads: 512mb
    s3_backup: 512mb
    fluentd: 256mb
  rocketchat_custom_memory_db:
    mongo: 1gb
    toolbox: 512mb
    mongo_init: 512mb
    s3_backup: 512mb
    fluentd: 256mb
  rocketchat_custom_memory_web:
    nginx: 512mb
    rocketchat: 1gb
    hubot: 512mb
    mongo_express: 512mb
    toolbox: 512mb
    certbot: 256mb
    s3_uploads: 512mb
    s3_backup: 512mb
    fluentd: 256mb
  rocketchat_meta:
    use_run_dict: true
    use_run_tasks_dict: true
  rocketchat_run:
    tasks: >-
      {{
      params.env_params.restore_db | default(false) | bool |
      ternary('tasks', 'tasks_new_db')
      }}
    general: "general"
    migrate: "migrate"
  rocketchat_run_local:
    tasks: >-
      {{
      params.env_params.restore_db | default(false) | bool |
      ternary('tasks', 'tasks_new_db')
      }}
    general: "general_local"
    migrate: "migrate"
  rocketchat_run_dict:
    tasks:
      backup: "group_backup"
      setup: "group_setup"
    tasks_new_db:
      backup: "group_backup"
    general:
      backup_delete_old_days: 3
      backup_local_base_dir: "/tmp/rocketchat/backup"
      orchestration: "compose"
      script_dir: "custom-pod/rocketchat/scripts"
      script_env_file: "remote.sh"
      toolbox_service: "toolbox"
    general_local:
      backup_delete_old_days: 3
      backup_local_base_dir: "/tmp/main/backup"
      orchestration: "compose"
      script_dir: "custom-pod/rocketchat/scripts"
      script_env_file: "local.sh"
      toolbox_service: "toolbox"
    migrate:
      db_service: "mongo"
      db_name: "{{ params.credentials.rocketchat.db.name }}"
      db_user: "{{ params.credentials.rocketchat.db.user }}"
      db_pass: "{{ params.credentials.rocketchat.db.password }}"
      db_connect_wait_secs: 300
  rocketchat_run_tasks_app:
    group_setup: "group_setup_app"
    group_backup: "group_backup_app"
    uploads_setup: >-
      {{
      params.env_params.non_s3_setup | default(false) | bool |
      ternary('uploads_setup_file', 'uploads_setup_s3')
      }}
    uploads_backup: "uploads_backup_sync"
    db_setup: >-
      {{
      params.env_params.non_s3_setup | default(false) | bool |
      ternary('db_setup_restore_dir', 'db_setup_restore_s3')
      }}
    db_backup: "db_backup_no_sync"
    logs_setup: "logs_setup"
    logs_backup: "logs_backup"
    sync_setup: "sync_setup"
    sync_backup: "sync_backup"
    certbot: "certbot"
    s3_uploads: "s3_uploads"
    s3_backup: "s3_backup"
    db_main: "db_main"
  rocketchat_run_tasks_app_local:
    group_setup: "group_setup_app_local"
    group_backup: "group_backup_app_local"
    uploads_setup: >-
      {{
      params.env_params.non_s3_setup | default(false) | bool |
      ternary('uploads_setup_file', 'uploads_setup_s3')
      }}
    uploads_backup: "uploads_backup_no_sync"
    db_setup: >-
      {{
      params.env_params.non_s3_setup | default(false) | bool |
      ternary('db_setup_restore_dir', 'db_setup_restore_s3')
      }}
    db_backup: "db_backup_no_sync"
    logs_setup: "logs_setup"
    logs_backup: "logs_backup"
    sync_setup: "sync_setup"
    sync_backup: "sync_backup"
    certbot: "certbot_local"
    s3_uploads: "s3_uploads"
    s3_backup: "s3_backup"
    db_main: "db_main"
  rocketchat_run_tasks_db:
    group_setup: "group_setup_db"
    group_backup: "group_backup_db"
    db_setup: >-
      {{
      params.env_params.non_s3_setup | default(false) | bool |
      ternary('db_setup_restore_dir', 'db_setup_restore_s3')
      }}
    db_backup: "db_backup_no_sync"
    logs_setup: "logs_setup"
    logs_backup: "logs_backup"
    sync_setup: "sync_setup"
    sync_backup: "sync_backup"
    s3_backup: "s3_backup"
    db_main: "db_main"
  rocketchat_run_tasks_web:
    group_setup: "group_setup_web"
    group_backup: "group_backup_web"
    uploads_setup: >-
      {{
      params.env_params.non_s3_setup | default(false) | bool |
      ternary('uploads_setup_file', 'uploads_setup_s3')
      }}
    uploads_backup: "uploads_backup_sync"
    logs_setup: "logs_setup"
    logs_backup: "logs_backup"
    sync_setup: "sync_setup"
    sync_backup: "sync_backup"
    certbot: "certbot"
    s3_uploads: "s3_uploads"
    s3_backup: "s3_backup"
    db_main: "db_main"
  rocketchat_run_tasks_dict:
    group_setup_app:
      task: { type: "group" }
      group_task: { task_names: "logs_setup,sync_setup,sync_backup,uploads_setup,db_setup" }
    group_backup_app:
      task: { type: "group" }
      group_task: { task_names: "db_backup,uploads_backup,logs_backup" }
    group_setup_app_local:
      task: { type: "group" }
      group_task: { task_names: "uploads_setup,db_setup" }
    group_backup_app_local:
      task: { type: "group" }
      group_task: { task_names: "db_backup,uploads_backup" }
    group_setup_db:
      task: { type: "group" }
      group_task: { task_names: "logs_setup,sync_setup,sync_backup,db_setup" }
    group_backup_db:
      task: { type: "group" }
      group_task: { task_names: "db_backup,logs_backup" }
    group_setup_web:
      task: { type: "group" }
      group_task: { task_names: "logs_setup,sync_setup,sync_backup,uploads_setup" }
    group_backup_web:
      task: { type: "group" }
      group_task: { task_names: "uploads_backup,logs_backup" }
    uploads_setup_file:
      task:
        type: "setup"
      setup_task:
        subtask_cmd_verify: "setup:verify:default"
        subtask_cmd_remote: "setup:remote:default"
        setup_dest_base_dir: "/var/main/data/rocketchat/uploads"
      setup_verify:
        setup_dest_dir_to_verify: "/var/main/data/rocketchat/uploads"
      setup_remote:
        task_kind: "dir"
        restore_tmp_dir: "/tmp/main/restore/rocketchat/uploads"
        restore_remote_file: "https://github.com/lucasbasquerotto/backups/blob/master/rocketchat/uploads/20200612_221938.zip?raw=true"
        restore_is_zip_file: "true"
        restore_zip_pass: "{{ params.credentials.rocketchat_uploads_zip_file_pass | default('') }}"
        restore_recursive_mode_dir: "777"
        restore_recursive_mode_file: "666"
        restore_zip_inner_dir: "uploads"
    uploads_setup_s3:
      task:
        type: "setup"
      setup_task:
        subtask_cmd_verify: "setup:verify:default"
        subtask_cmd_remote: "setup:remote:default"
        setup_dest_base_dir: "/var/log/main"
      setup_verify:
        setup_dest_dir_to_verify: "/var/main/data/rocketchat/uploads"
      setup_remote:
        task_kind: "dir"
        subtask_cmd_s3: "s3:subtask:s3_uploads"
        restore_tmp_dir: "/tmp/main/restore/rocketchat/uploads"
        restore_recursive_mode_dir: "777"
        restore_recursive_mode_file: "666"
        restore_remote_bucket_path_dir: "uploads"
    uploads_backup_sync:
      task:
        type: "backup"
      backup_task:
        subtask_cmd_remote: "backup:remote:default"
        backup_src_base_dir: "/var/main/data/rocketchat"
        backup_local_static_dir:  "/tmp/main/backup/static"
      backup_remote:
        task_kind: "dir"
        subtask_cmd_s3: "s3:subtask:s3_uploads"
        backup_src_dir: "uploads"
        backup_bucket_sync: "true"
        backup_bucket_sync_dir: "uploads"
    uploads_backup_no_sync:
      task:
        type: "backup"
      backup_task:
        subtask_cmd_remote: "backup:remote:default"
        backup_src_base_dir: "/var/main/data/rocketchat"
        backup_local_static_dir:  "/tmp/main/backup/static"
      backup_remote:
        task_kind: "dir"
        subtask_cmd_s3: "s3:subtask:s3_uploads"
        backup_src_dir: "uploads"
        backup_bucket_static_dir: "files"
        backup_zip_file: "rocketchat-uploads.zip"
    db_setup_restore_dir:
      task:
        type: "setup"
      setup_task:
        subtask_cmd_verify: "setup:verify:db"
        subtask_cmd_remote: "setup:remote:default"
        subtask_cmd_local: "setup:local:db"
        setup_dest_base_dir: "/tmp/main/mongo/restore"
      setup_verify:
        task_name: "db_main"
        db_subtask_cmd: "db:restore:verify:mongo"
      setup_remote:
        task_kind: "dir"
        restore_dest_dir: "{{ params.credentials.rocketchat.db.name }}"
        restore_tmp_dir: "/tmp/main/restore/mongo"
        restore_remote_file: "https://github.com/lucasbasquerotto/backups/blob/master/rocketchat/db/20200612_221938.zip?raw=true"
        restore_is_zip_file: "true"
        restore_zip_pass: "{{ params.credentials.db_zip_file_pass | default('') }}"
        restore_zip_inner_dir: "{{ params.credentials.rocketchat.db.name }}"
      setup_local:
        task_name: "db_main"
        db_subtask_cmd: "db:restore:mongo"
    db_setup_restore_s3:
      task:
        type: "setup"
      setup_task:
        subtask_cmd_verify: "setup:verify:db"
        subtask_cmd_remote: "setup:remote:default"
        subtask_cmd_local: "setup:local:db"
        setup_dest_base_dir: "/tmp/main/mongo/restore"
      setup_verify:
        task_name: "db_main"
        db_subtask_cmd: "db:restore:verify:mongo"
      setup_remote:
        task_kind: "dir"
        restore_dest_dir: "{{ params.credentials.rocketchat.db.name }}"
        subtask_cmd_s3: "s3:subtask:s3_backup"
        restore_tmp_dir: "/tmp/main/restore/mongo"
        restore_recursive_mode_dir: "777"
        restore_recursive_mode_file: "666"
        restore_remote_bucket_path_dir: "db"
      setup_local:
        task_name: "db_main"
        db_subtask_cmd: "db:restore:mongo"
    db_backup_sync:
      task:
        type: "backup"
      backup_task:
        subtask_cmd_local: "backup:local:db"
        subtask_cmd_remote: "backup:remote:default"
        backup_src_base_dir: "/tmp/main/mongo/backup"
        backup_local_static_dir:  "/tmp/main/backup/static"
      backup_local:
        task_name: "db_main"
        db_subtask_cmd: "db:backup:mongo"
      backup_remote:
        task_kind: "dir"
        subtask_cmd_s3: "s3:subtask:s3_backup"
        backup_src_dir: "rocketchat"
        backup_bucket_sync: "true"
        backup_bucket_sync_dir: "db"
    db_backup_no_sync:
      task:
        type: "backup"
      backup_task:
        subtask_cmd_local: "backup:local:db"
        subtask_cmd_remote: "backup:remote:default"
        backup_src_base_dir: "/tmp/main/mongo/backup"
        backup_local_static_dir:  "/tmp/main/backup/static"
      backup_local:
        task_name: "db_main"
        db_subtask_cmd: "db:backup:mongo"
      backup_remote:
        task_kind: "dir"
        subtask_cmd_s3: "s3:subtask:s3_backup"
        backup_src_dir: "rocketchat"
        backup_bucket_static_dir: "files"
        backup_zip_file: "rocketchat-db.zip"
    logs_setup:
      task:
        type: "setup"
      setup_task:
        subtask_cmd_verify: "setup:verify:default"
        subtask_cmd_remote: "setup:remote:default"
        setup_dest_base_dir: "/var/log/main"
      setup_verify:
        setup_dest_dir_to_verify: "/var/log/main"
      setup_remote:
        task_kind: "dir"
        subtask_cmd_s3: "s3:subtask:s3_backup"
        restore_tmp_dir: "/tmp/main/restore/log"
        restore_recursive_mode_dir: "777"
        restore_recursive_mode_file: "666"
        restore_remote_bucket_path_dir: "logs"
    logs_backup:
      task:
        type: "backup"
      backup_task:
        subtask_cmd_remote: "backup:remote:default"
        backup_src_base_dir: "/var/log"
        backup_local_static_dir:  "/tmp/main/backup/static"
      backup_remote:
        task_kind: "dir"
        subtask_cmd_s3: "s3:subtask:s3_backup"
        backup_src_dir: "main"
        backup_bucket_sync: "true"
        backup_bucket_sync_dir: "log"
    sync_setup:
      task:
        type: "setup"
      setup_task:
        subtask_cmd_remote: "setup:remote:default"
        setup_dest_base_dir: "/var/sync/main"
      setup_verify:
        setup_dest_dir_to_verify: "/var/sync/main"
      setup_remote:
        task_kind: "dir"
        subtask_cmd_s3: "s3:subtask:s3_backup"
        restore_tmp_dir: "/tmp/main/restore/sync"
        restore_recursive_mode_dir: "777"
        restore_recursive_mode_file: "666"
        restore_remote_bucket_path_dir: "sync"
    sync_backup:
      task:
        type: "backup"
      backup_task:
        subtask_cmd_remote: "backup:remote:default"
        backup_src_base_dir: "/var/sync"
        backup_local_static_dir:  "/tmp/main/backup/static"
      backup_remote:
        task_kind: "dir"
        subtask_cmd_s3: "s3:subtask:s3_backup"
        backup_src_dir: "main"
        backup_bucket_sync: "true"
        backup_bucket_sync_dir: "sync"
    certbot:
      task:
        type: "certbot"
      certbot_task:
        certbot_cmd: "setup"
      certbot_subtask:
        toolbox_service: "toolbox"
        certbot_service: "certbot"
        webservice_type: "nginx"
        data_base_path: "/var/main/data/sync/certbot"
        main_domain: "{{ params.env_params.rocketchat_full_domain }}"
        domains: "{{ params.env_params.certbot_domains }}"
        rsa_key_size: "4096"
        email: "{{ params.env_params.certbot_email | default('') }}"
        staging: "{{ params.env_params.certbot_staging | default('false') }}"
        force: "{{ params.env_params.certbot_force | default('false') }}"
    certbot_local:
      task:
        type: "certbot"
      certbot_task:
        certbot_cmd: "setup"
      certbot_subtask:
        toolbox_service: "toolbox"
        certbot_service: "certbot"
        webservice_type: "nginx"
        data_base_path: "/var/main/data/sync/certbot"
        main_domain: "localhost"
        domains: "localhost www.localhost"
        rsa_key_size: "4096"
        email: "{{ params.env_params.certbot_email | default('') }}"
        dev: "true"
        staging: "true"
        force: "{{ params.env_params.certbot_force | default('false') }}"
    s3_uploads:
      s3_subtask:
        endpoint: "{{ params.env_params.rocketchat_uploads_bucket_endpoint }}"
        bucket_name: "{{ params.env_params.rocketchat_uploads_bucket_name }}"
        service: "s3_uploads"
        cli: "awscli"
        cli_cmd: "run"
    s3_backup:
      s3_subtask:
        endpoint: "{{ params.env_params.rocketchat_backup_bucket_endpoint }}"
        bucket_name: "{{ params.env_params.rocketchat_backup_bucket_name }}"
        service: "s3_backup"
        cli: "awscli"
        cli_cmd: "run"
    db_main:
      db_subtask:
        db_service: "mongo"
        authentication_database: "admin"
        db_name: "{{ params.credentials.rocketchat.db.name }}"
        db_user: "{{ params.credentials.rocketchat.db.user }}"
        db_pass: "{{ params.credentials.rocketchat.db.password }}"
        db_connect_wait_secs: 300
tasks:
  docker_compose_install:
    type: "task"
    root: true
    file: "docker.yml"
    compose_params:
      version: "1.25.3"
      remote: true
  main_build:
    type: "shell"
    root: true
    cmd: "./run build"
  main_upgrade:
    type: "shell"
    root: true
    cmd: "./run upgrade"
repos:
  cloud:
    src: "https://github.com/lucasbasquerotto/ansible-docker.git"
    version: "master"
  pod:
    src: "https://github.com/lucasbasquerotto/pod.git"
    version: "master"
  custom_pod:
    src: "https://github.com/lucasbasquerotto/custom-pod.git"
    version: "master"
credentials: "{{ params.credentials }}"
