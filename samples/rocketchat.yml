name: "{{ params.name }}"
main:
  cloud:
    clouds:
    - "{{ params.env_params.cloud_name }}"
  local:
    clouds:
    - "local"
    nodes:
    - name: "app"
      key: "rocketchat_local"
    local:
      pods:
      - "rocketchat"
    params:
      entrypoint: "main.yml"
      entrypoint_template_src: "main.tpl.yml"
      hosts_content: |
        [main]
        localhost ansible_connection=local
        [host]
      meta:
        template_no_empty_lines: true
      repo: "cloud"
  remote:
    destroy:
      nodes: true
      buckets: true
    clouds:
    - "{{ params.env_params.cloud_name }}"
    buckets:
    - "rocketchat_uploads"
    - "rocketchat_backup"
    nodes:
    - name: "app"
      key: "rocketchat"
    run_stages:
    - tasks:
      - name: "docker_compose_install"
        all_nodes: true
        nodes_tasks: true
      - name: "main_build"
        all_nodes: true
        pods_tasks: true
      - name: "main_upgrade"
        all_nodes: true
        pods_tasks: true
    params:
      entrypoint: "main.yml"
      entrypoint_template_src: "main.tpl.yml"
      repo: "cloud"
      hosts_content: |
        [main]
        localhost ansible_connection=local
        [host:children]
        app
        [app]
  remote_local_test:
    clouds:
    - "local"
    nodes:
    - name: "app"
      key: "rocketchat_local"
    local:
      pods:
      - "rocketchat"
    params:
      entrypoint: "main.yml"
      entrypoint_template_src: "main.tpl.yml"
      hosts_content: |
        [main]
        localhost ansible_connection=local
        [host]
      meta:
        template_no_empty_lines: true
      repo: "cloud"
  nodes:
    destroy:
      nodes: true
      buckets: true
    clouds:
    - "{{ params.env_params.cloud_name }}"
    buckets:
    - "rocketchat_uploads"
    - "rocketchat_backup"
    nodes:
    - name: "db"
      key: "rocketchat"
      pods:
        rocketchat:
          params:
            type: "db"
          group_params:
            custom_memory: "rocketchat_custom_memory_db"
    - name: "web"
      key: "rocketchat"
      dependencies:
      - host: "mongo"
        node: "db"
      pods:
        rocketchat:
          params:
            type: "web"
          group_params:
            custom_memory: "rocketchat_custom_memory_web"
    run_stages:
    - tasks:
      - name: "docker_compose_install"
        all_nodes: true
        nodes_tasks: true
      - name: "main_build"
        all_nodes: true
        pods_tasks: true
      - name: "main_upgrade"
        nodes: ["db"]
        pods_tasks: true
    - tasks:
      - name: "main_upgrade"
        nodes: ["web"]
        pods_tasks: true
    params:
      entrypoint: "main.yml"
      entrypoint_template_src: "main.tpl.yml"
      repo: "cloud"
      hosts_content: |
        [main]
        localhost ansible_connection=local
        [host:children]
        db
        web
        [db]
        [web]
clouds:
  local:
    type: "local"
  digital_ocean:
    type: "digital_ocean"
    credentials: "digital_ocean"
    params:
      x_digital_ocean_tags:
      - "auto"
      - "dmz"
      x_digital_ocean_firewalls:
      - name: "auto"
        tags: ["auto"]
        inbound_rules:
        - ports: "22"
          sources:
            tags: ["main"]
        outbound_rules:
        - protocol: "tcp"
          ports: "1-65535"
          destinations:
            addresses: ["0.0.0.0/0", "::/0"]
        - protocol: "udp"
          ports: "1-65535"
          destinations:
            addresses: ["0.0.0.0/0", "::/0"]
        - protocol: "icmp"
          ports: "1-65535"
          destinations:
            addresses: ["0.0.0.0/0", "::/0"]
      - name: "dmz"
        tags: ["dmz"]
        inbound_rules:
        - ports: "80"
          sources:
            addresses: ["0.0.0.0/0", "::/0"]
        - ports: "443"
          sources:
            addresses: ["0.0.0.0/0", "::/0"]
dns:
  cloudflare:
    type: "cloudflare"
    zone: "{{ params.env_params.domain }}"
    credentials: "cloudflare"
  godaddy:
    type: "godaddy"
    zone: "{{ params.env_params.domain }}"
    credentials: "godaddy"
buckets:
  rocketchat_backup:
    name: "{{ params.env_params.rocketchat_backup_bucket_name }}"
    credentials: "rocketchat_backup_bucket"
nodes:
  rocketchat_local:
    cloud: "local"
    base_dir: "/var/cloud"
    credentials: "user"
    pods:
    - name: "rocketchat"
      params:
        local: true
      group_params:
        custom_args: "rocketchat_custom_args"
        custom_domain: "rocketchat_custom_domain_local"
        db_backup: "db_backup_no_sync"
        uploads_backup: "uploads_backup_no_sync"
        certbot: "certbot_local"
    params:
      size:
        memory: "2gb"
        cpu: 2
  rocketchat:
    cloud: "{{ params.env_params.cloud_name }}"
    base_dir: "/var/cloud"
    credentials: "host"
    pods:
    - name: "rocketchat"
      params:
        local: false
      group_params:
        custom_args: "rocketchat_custom_args"
        custom_domain: "rocketchat_custom_domain"
    params:
      dns:
      - record: "{{ params.env_params.main_dns_record }}"
        name: "{{ params.env_params.main_dns_name }}"
      - record: "{{ params.env_params.theia_dns_record }}"
        name: "{{ params.env_params.theia_dns_name }}"
        when: "{{ params.env_params.use_theia }}"
      - record: "{{ params.env_params.minio_gateway_dns_record }}"
        name: "{{ params.env_params.minio_gateway_dns_name }}"
        when: "{{ params.env_params.use_minio_gateway }}"
      - record: "{{ params.env_params.filestash_dns_record }}"
        name: "{{ params.env_params.filestash_dns_name }}"
        when: "{{ params.env_params.use_filestash }}"
      - record: "{{ params.env_params.nextcloud_dns_record }}"
        name: "{{ params.env_params.nextcloud_dns_name }}"
        when: "{{ params.env_params.use_nextcloud }}"
      - record: "{{ params.env_params.mongo_express_dns_record }}"
        name: "{{ params.env_params.mongo_express_dns_name }}"
        when: "{{ params.env_params.use_mongo_express }}"
      cron:
      - user: "root"
        src_file: "{{ params.env.repo_dir }}/cron/app.cron"
        dest_dir: "/var/spool/cron/crontabs"
      instance:
        image: "ubuntu-18-04-x64"
        user_data_file: "{{ params.env.repo_dir }}/templates/ubuntu-18.04.j2.sh"
        ipv6: "yes"
      region:
        name: "ams3"
        region: "ams"
        zone: "3"
      size:
        name: "s-1vcpu-1gb"
        memory: "1gb"
        cpu: 1
      host_test:
        log_file: "/var/log/setup.log"
        setup_last_line: "Setup Finished"
        initial_connection_timeout: 90
        setup_finished_timeout: 300
      x_digital_ocean_tags:
      - "auto"
      - "dmz"
pods:
  rocketchat:
    repo: "pod"
    root: "yes"
    ctx: "custom-pod/rocketchat/ctx.yml"
    fast_prepare: "true"
    env_repos:
    - repo: "custom_pod"
      dir: "custom-pod"
    credentials:
      rocketchat: "rocketchat"
      hubot: "hubot"
      minio_gateway: "minio_gateway"
      nextcloud: "nextcloud"
      rocketchat_uploads_bucket: "rocketchat_uploads_bucket"
      rocketchat_backup_bucket: "rocketchat_backup_bucket"
    params:
      type: "app"
      orchestration: "docker_compose"
      custom_dir: "custom-pod"
      use_pod_prefix: "{{ params.env_params.use_pod_prefix | default(false) }}"
      use_pod_full_prefix: "{{ params.env_params.use_pod_full_prefix | default(false) }}"
      use_bot: "{{ params.env_params.use_bot }}"
      use_mongo_express: "{{ params.env_params.use_mongo_express }}"
      use_theia: "{{ params.env_params.use_theia }}"
      use_minio_gateway: "{{ params.env_params.use_minio_gateway }}"
      use_filestash: "{{ params.env_params.use_filestash }}"
      use_nextcloud: "{{ params.env_params.use_nextcloud }}"
      use_fluentd: "{{ params.env_params.use_fluentd }}"
      use_certbot: "{{ params.env_params.use_certbot }}"
      block_ips: "{{ params.env_params.block_ips }}"
      auth_file: "{{ params.env_params.auth_file }}"
      backup_bucket_name: "{{ params.env_params.rocketchat_backup_bucket_name }}"
      uploads_bucket_name: "{{ params.env_params.rocketchat_uploads_bucket_name }}"
      restore_db: "{{ params.env_params.restore_db }}"
      db_gui_root_user: "{{ params.env_params.db_gui_root_user }}"
      use_s3_storage: "{{ params.env_params.use_s3_storage }}"
      enable_db_backup: true
      enable_db_setup: true
      enable_logs_backup: true
      enable_logs_setup: true
      enable_sync_backup: true
      enable_sync_setup: true
      enable_uploads_backup: true
      enable_uploads_setup: true
    group_params:
      custom_images: "rocketchat_custom_images"
      custom_memory: "rocketchat_custom_memory_app"
      db_setup: >-
        {{
        params.env_params.non_s3_setup | default(false) | bool |
        ternary('db_setup_restore_file', 'db_setup_restore_s3')
        }}
      db_backup: "db_backup_no_sync"
      uploads_setup: >-
        {{
        params.env_params.non_s3_setup | default(false) | bool |
        ternary('uploads_setup_file', 'uploads_setup_s3')
        }}
      uploads_backup: "uploads_backup_sync"
      certbot: "certbot"
pod_params:
  rocketchat_custom_args:
    nginx:
      enable_validate_origin: true
    mongo:
      host: "mongo"
      port: "27017"
    fluentd:
      port: "24224"
  rocketchat_custom_domain:
    public_http_port: "80"
    public_https_port: "443"
    private_http_port: "9080"
    private_https_port: "9443"
    main_domain: "{{ params.env_params.rocketchat_full_domain }}"
    main_ssl: "{{ params.env_params.ssl }}"
    me_domain: "{{ params.env_params.mongo_express_full_domain }}"
    me_ssl: "{{ params.env_params.ssl }}"
    theia_domain: "{{ params.env_params.theia_full_domain }}"
    theia_ssl: "{{ params.env_params.ssl }}"
    minio_gateway_domain: "{{ params.env_params.minio_gateway_full_domain }}"
    minio_gateway_ssl: "{{ params.env_params.ssl }}"
    filestash_domain: "{{ params.env_params.filestash_full_domain }}"
    filestash_ssl: "{{ params.env_params.ssl }}"
    nextcloud_domain: "{{ params.env_params.nextcloud_full_domain }}"
    nextcloud_ssl: "{{ params.env_params.ssl }}"
  rocketchat_custom_domain_local:
    public_http_port: "8080"
    public_https_port: "8443"
    private_http_port: "9080"
    private_https_port: "9443"
    main_domain: "localhost"
    main_ssl: "{{ params.env_params.ssl }}"
    me_domain: "me.localhost"
    me_ssl: "{{ params.env_params.ssl }}"
    theia_domain: "theia.localhost"
    theia_ssl: "{{ params.env_params.ssl }}"
    minio_gateway_domain: "minio.localhost"
    minio_gateway_ssl: "{{ params.env_params.ssl }}"
    filestash_domain: "filestash.localhost"
    filestash_ssl: "{{ params.env_params.ssl }}"
    nextcloud_domain: "nextcloud.localhost"
    nextcloud_ssl: "{{ params.env_params.ssl }}"
  rocketchat_custom_images:
    nginx_image: "nginx"
    nginx_version: "1.14.2-alpine"
    rocketchat_image: "rocket.chat"
    rocketchat_version: "3.2.2"
    hubot_image: "rocketchat/hubot-rocketchat"
    hubot_version: "v1.0.11"
    mongo_express_image: "mongo-express"
    mongo_express_version: "0.54.0"
    mongo_image: "mongo"
    mongo_version: "4.0"
    theia_image: "theiaide/theia"
    theia_version: "1.3.0"
    minio_gateway_image: "minio/minio"
    minio_gateway_version: "RELEASE.2020-07-02T00-15-09Z"
    filestash_image: "machines/filestash"
    filestash_version: "4cbeb2c"
    nextcloud_image: "nextcloud"
    nextcloud_version: "19.0.0-apache"
    toolbox_image: "lucasbasquerotto/image"
    toolbox_version: "toolbox-20200715-02"
    certbot_image: "certbot/certbot"
    certbot_version: "v1.2.0"
    awscli_image: "lucasbasquerotto/aws-cli"
    awscli_version: "1.0.0"
    logrotator_image: "python"
    logrotator_version: "3.8.4-buster"
    fluentd_image: "lucasbasquerotto/image"
    fluentd_version: "fluentd-20200617"
  rocketchat_custom_memory_app:
    nginx: 512mb
    rocketchat: 1gb
    hubot: 512mb
    mongo_express: 512mb
    mongo: 1gb
    theia: 512mb
    minio_gateway: 512mb
    filestash: 512mb
    nextcloud: 512mb
    toolbox: 512mb
    certbot: 256mb
    mongo_init: 512mb
    s3_uploads: 512mb
    s3_backup: 512mb
    fluentd: 256mb
  rocketchat_custom_memory_db:
    mongo: 1gb
    toolbox: 512mb
    mongo_init: 512mb
    s3_backup: 512mb
    fluentd: 256mb
  rocketchat_custom_memory_web:
    nginx: 512mb
    rocketchat: 1gb
    hubot: 512mb
    mongo_express: 512mb
    theia: 512mb
    minio_gateway: 512mb
    filestash: 512mb
    nextcloud: 512mb
    toolbox: 512mb
    certbot: 256mb
    s3_uploads: 512mb
    s3_backup: 512mb
    fluentd: 256mb
  certbot:
    main_domain: "{{ params.env_params.rocketchat_full_domain }}"
    domains: "{{ params.env_params.certbot_domains }}"
    email: "{{ params.env_params.certbot_email | default('') }}"
    staging: "{{ params.env_params.certbot_staging | default(false) }}"
    force: "{{ params.env_params.certbot_force | default(false) }}"
  certbot_local:
    main_domain: "localhost"
    domains: "localhost www.localhost"
    email: "{{ params.env_params.certbot_email | default('') }}"
    force: "{{ params.env_params.certbot_force | default(false) }}"
  db_backup_sync:
    backup_bucket_sync_dir: "db"
  db_backup_no_sync:
    is_compressed_file: true
  db_setup_restore_file:
    restore_use_s3: false
    restore_remote_file: "https://github.com/lucasbasquerotto/backups/blob/master/rocketchat/db/20200612_221938.zip?raw=true"
    is_compressed_file: true
    restore_compressed_inner_dir: "{{ params.credentials.rocketchat.db.name }}"
  db_setup_restore_s3:
    restore_use_s3: true
    restore_s3_sync: true
    restore_remote_bucket_path_dir: "db"
  uploads_backup_sync:
    backup_bucket_sync_dir: "uploads"
  uploads_backup_no_sync:
    is_compressed_file: true
  uploads_setup_file:
    restore_use_s3: false
    restore_remote_file: "https://github.com/lucasbasquerotto/backups/blob/master/rocketchat/uploads/20200612_221938.zip?raw=true"
    is_compressed_file: true
    restore_compressed_inner_dir: "uploads"
  uploads_setup_s3:
    restore_use_s3: true
    restore_s3_sync: true
    restore_remote_bucket_path_dir: "uploads"
tasks:
  docker_compose_install:
    type: "task"
    root: true
    file: "docker.yml"
    compose_params:
      version: "1.25.3"
      remote: true
  main_build:
    type: "shell"
    root: true
    cmd: "./run build"
  main_upgrade:
    type: "shell"
    root: true
    cmd: "./run upgrade"
repos:
  cloud:
    src: "https://github.com/lucasbasquerotto/ansible-docker.git"
    version: "master"
  pod:
    src: "https://github.com/lucasbasquerotto/pod.git"
    version: "master"
  custom_pod:
    src: "https://github.com/lucasbasquerotto/custom-pod.git"
    version: "master"
credentials: "{{ params.credentials }}"
