name: "{{ params.name }}"
ctxs: "{{ params.ctxs }}"
migration: ""
container: ""
main:
  cloud:
    repo: "cloud"
    env_repos:
      - repo: "custom_cloud"
        dir: "custom-cloud"
    services:
      - "{{ params.env_params.vpn_service }}"
    params:
      hosts_content: |
        [main]
        localhost ansible_connection=local
        [host]
  local:
    repo: "cloud"
    env_repos:
      - repo: "custom_cloud"
        dir: "custom-cloud"
    clouds:
      - "local"
    nodes:
      - name: "app"
        key: "wp_local"
    extra_repos:
      - repo: "app"
        dir: "app-wp"
    params:
      hosts_content: |
        [main]
        localhost ansible_connection=local
        [host]
      meta:
        template_no_empty_lines: true
  remote:
    repo: "cloud"
    env_repos:
      - repo: "custom_cloud"
        dir: "custom-cloud"
    destroy:
      nodes: true
      buckets: true
    clouds:
      - "{{ params.env_params.cloud_name }}"
    buckets:
      - "wp_uploads"
      - "wp_backup"
    nodes:
      - name: "app"
        key: "wp"
    run_stages:
      - tasks:
          - name: "docker_compose_install"
            all_nodes: true
            nodes_tasks: true
          - name: "main_build"
            all_nodes: true
            pods_tasks: true
          - name: "main_upgrade"
            all_nodes: true
            pods_tasks: true
    params:
      hosts_content: |
        [main]
        localhost ansible_connection=local
        [host:children]
        app
        [app]
  remote_local_test:
    repo: "cloud"
    env_repos:
      - repo: "custom_cloud"
        dir: "custom-cloud"
    clouds:
      - "local"
    nodes:
      - name: "app"
        key: "wp_local"
    local:
      pods:
        - "wp"
      apps:
        - "wp_local"
    params:
      hosts_content: |
        [main]
        localhost ansible_connection=local
        [host]
      meta:
        template_no_empty_lines: true
  nodes:
    repo: "cloud"
    env_repos:
      - repo: "custom_cloud"
        dir: "custom-cloud"
    destroy:
      nodes: true
      buckets: true
    clouds:
      - "{{ params.env_params.cloud_name }}"
    buckets:
      - "wp_uploads"
      - "wp_backup"
    nodes:
      - name: "db"
        key: "wp"
        pods:
          wp:
            params:
              type: "db"
            group_params:
              custom_memory: "wp_custom_memory_db"
      - name: "web"
        key: "wp"
        dependencies:
          - host: "mysql"
            node: "db"
        pods:
          wp:
            params:
              type: "web"
            group_params:
              custom_memory: "wp_custom_memory_web"
    run_stages:
      - tasks:
          - name: "docker_compose_install"
            all_nodes: true
            nodes_tasks: true
          - name: "main_build"
            all_nodes: true
            pods_tasks: true
          - name: "main_upgrade"
            nodes: ["db"]
            pods_tasks: true
      - tasks:
          - name: "main_upgrade"
            nodes: ["web"]
            pods_tasks: true
    params:
      hosts_content: |
        [main]
        localhost ansible_connection=local
        [host:children]
        db
        web
        [db]
        [web]
services:
  digital_ocean_vpn:
    type: "custom-cloud/tasks/vpn/digital_ocean"
    credentials:
      digital_ocean: "digital_ocean"
    params:
      tags:
        - "auto"
        - "dmz"
      firewalls:
        - name: "private"
          tags: ["auto"]
          inbound_rules:
            - ports: "9080"
              sources:
                addresses: "{{ params.env_params.private_ips }}"
            - ports: "9443"
              sources:
                addresses: "{{ params.env_params.private_ips }}"
        - name: "auto"
          tags: ["auto"]
          inbound_rules:
            - ports: "22"
              sources:
                tags: ["main"]
          outbound_rules:
            - protocol: "tcp"
              ports: "1-65535"
              destinations:
                addresses: ["0.0.0.0/0", "::/0"]
            - protocol: "udp"
              ports: "1-65535"
              destinations:
                addresses: ["0.0.0.0/0", "::/0"]
            - protocol: "icmp"
              ports: "1-65535"
              destinations:
                addresses: ["0.0.0.0/0", "::/0"]
        - name: "dmz"
          tags: ["dmz"]
          inbound_rules:
            - ports: "80"
              sources:
                addresses: ["0.0.0.0/0", "::/0"]
            - ports: "443"
              sources:
                addresses: ["0.0.0.0/0", "::/0"]
clouds:
  local:
    type: "local"
  digital_ocean:
    type: "digital_ocean"
    credentials: "digital_ocean"
    params:
      x_digital_ocean_tags:
        - "auto"
        - "dmz"
      x_digital_ocean_firewalls:
        - name: "private"
          tags: ["auto"]
          inbound_rules:
            - ports: "9080"
              sources:
                addresses: "{{ params.env_params.private_ips }}"
            - ports: "9443"
              sources:
                addresses: "{{ params.env_params.private_ips }}"
        - name: "auto"
          tags: ["auto"]
          inbound_rules:
            - ports: "22"
              sources:
                tags: ["main"]
          outbound_rules:
            - protocol: "tcp"
              ports: "1-65535"
              destinations:
                addresses: ["0.0.0.0/0", "::/0"]
            - protocol: "udp"
              ports: "1-65535"
              destinations:
                addresses: ["0.0.0.0/0", "::/0"]
            - protocol: "icmp"
              ports: "1-65535"
              destinations:
                addresses: ["0.0.0.0/0", "::/0"]
        - name: "dmz"
          tags: ["dmz"]
          inbound_rules:
            - ports: "80"
              sources:
                addresses: ["0.0.0.0/0", "::/0"]
            - ports: "443"
              sources:
                addresses: ["0.0.0.0/0", "::/0"]
dns:
  cloudflare:
    type: "cloudflare"
    zone: "{{ params.env_params.domain }}"
    credentials: "cloudflare"
  godaddy:
    type: "godaddy"
    zone: "{{ params.env_params.domain }}"
    credentials: "godaddy"
buckets:
  wp_uploads:
    name: "{{ params.env_params.uploads_bucket_name }}"
    credentials: "uploads_bucket"
  wp_backup:
    name: "{{ params.env_params.backup_bucket_name }}"
    credentials: "backup_bucket"
  wp_uploads_replica:
    name: "{{ params.env_params.uploads_replica_bucket_name }}"
    credentials: "uploads_replica_bucket"
  wp_backup_replica:
    name: "{{ params.env_params.backup_replica_bucket_name }}"
    credentials: "backup_replica_bucket"
nodes:
  wp_local:
    cloud: "local"
    base_dir: "/var/cloud"
    credentials: "user"
    pods:
      - name: "wp"
        params:
          local: true
          named_volumes: "{{ params.env_params.named_volumes | default(false) }}"
          custom_ssl: "{{ params.env_params.local_custom_ssl | default({}) }}"
          migrate_old_domain_host: "{{ params.env_params.wp_old_domain_host | default('') }}"
          migrate_new_domain_host: >-
            {{ params.env_params.ssl | bool | ternary('https', 'http')
            }}://localhost:{{ params.env_params.ssl | bool | ternary(8443, 8080) }}/
        group_params:
          custom_args: "wp_custom_args_local"
          custom_domain: "wp_custom_domain_local"
          db_setup_new: "db_setup_new_local"
          db_backup: "db_backup_no_sync"
          uploads_backup: "uploads_backup_no_sync"
          certbot: "certbot_local"
    params:
      size:
        memory: "2gb"
        cpu: 2
  wp:
    cloud: "{{ params.env_params.cloud_name }}"
    base_dir: "/var/cloud"
    credentials: "host"
    pods:
      - name: "wp"
        params:
          local: false
        group_params:
          custom_args: "wp_custom_args"
          custom_domain: "wp_custom_domain"
    params:
      dns:
        - record: "{{ params.env_params.main_dns_record }}"
          name: "{{ params.env_params.main_dns_name }}"
        - record: "{{ params.env_params.theia_dns_record }}"
          name: "{{ params.env_params.theia_dns_name }}"
          when: "{{ params.env_params.use_theia }}"
        - record: "{{ params.env_params.minio_gateway_dns_record }}"
          name: "{{ params.env_params.minio_gateway_dns_name }}"
          when: "{{ params.env_params.use_minio_gateway }}"
        - record: "{{ params.env_params.filestash_dns_record }}"
          name: "{{ params.env_params.filestash_dns_name }}"
          when: "{{ params.env_params.use_filestash }}"
        - record: "{{ params.env_params.nextcloud_dns_record }}"
          name: "{{ params.env_params.nextcloud_dns_name }}"
          when: "{{ params.env_params.use_nextcloud }}"
        - record: "{{ params.env_params.pma_dns_record }}"
          name: "{{ params.env_params.pma_dns_name }}"
          when: "{{ params.env_params.use_pma }}"
        - record: "{{ params.env_params.adminer_dns_record }}"
          name: "{{ params.env_params.adminer_dns_name }}"
          when: "{{ params.env_params.use_adminer }}"
      cron:
        - user: "root"
          src_file: "{{ params.env.repo_dir }}/cron/app.cron"
          dest_dir: "/var/spool/cron/crontabs"
      instance:
        image: "ubuntu-18-04-x64"
        user_data_file: "{{ params.env.repo_dir }}/templates/ubuntu-18.04.j2.sh"
        ipv6: "yes"
      region:
        name: "ams3"
        region: "ams"
        zone: "1"
      size:
        name: "s-1vcpu-1gb"
        memory: "1gb"
        cpu: 1
      host_test:
        log_file: "/var/log/setup.log"
        setup_last_line: "Setup Finished"
        initial_connection_timeout: 90
        setup_finished_timeout: 300
      x_digital_ocean_tags:
        - "auto"
        - "dmz"
pods:
  wp:
    repo: "pod"
    root: "yes"
    ctx: "custom-pod/wordpress/ctx.yml"
    fast_prepare: "true"
    env_repos:
      - repo: "custom_pod"
        dir: "custom-pod"
    credentials:
      wordpress: "wordpress"
      mysql: "mysql"
      minio_gateway: "minio_gateway"
      nextcloud: "nextcloud"
      backup_bucket: "backup_bucket"
      uploads_bucket: "uploads_bucket"
      backup_replica_bucket: "backup_replica_bucket"
      uploads_replica_bucket: "uploads_replica_bucket"
    params:
      type: "app"
      orchestration: "docker_compose"
      custom_dir: "custom-pod"
      custom_dir_sync: "{{ params.env_params.pod_custom_dir_sync | default(false) }}"
      app_dev: "{{ params.env_params.app_dev | default(false) }}"
      use_pod_prefix: "{{ params.env_params.use_pod_prefix | default(false) }}"
      use_pod_full_prefix: "{{ params.env_params.use_pod_full_prefix | default(false) }}"
      use_composer: "{{ params.env_params.use_composer | default(false) }}"
      use_varnish: "{{ params.env_params.use_varnish }}"
      use_redis: "{{ params.env_params.use_redis }}"
      use_memcached: "{{ params.env_params.use_memcached }}"
      use_pma: "{{ params.env_params.use_pma }}"
      use_adminer: "{{ params.env_params.use_adminer }}"
      use_theia: "{{ params.env_params.use_theia }}"
      use_minio_gateway: "{{ params.env_params.use_minio_gateway }}"
      use_filestash: "{{ params.env_params.use_filestash }}"
      use_nextcloud: "{{ params.env_params.use_nextcloud }}"
      use_fluentd: "{{ params.env_params.use_fluentd }}"
      use_certbot: "{{ params.env_params.use_certbot }}"
      block_ips: "{{ params.env_params.block_ips }}"
      auth_file: "{{ params.env_params.auth_file }}"
      auth_file_encrypted: "{{ params.env_params.auth_file_encrypted | default(false) }}"
      s3_cli: "{{ params.env_params.s3_cli }}"
      backup_bucket_name: "{{ params.env_params.backup_bucket_name }}"
      backup_bucket_path: "{{ params.env_params.backup_bucket_path | default('') }}"
      uploads_bucket_name: "{{ params.env_params.uploads_bucket_name }}"
      uploads_bucket_path: "{{ params.env_params.uploads_bucket_path | default('') }}"
      backup_replica_bucket_name: "{{ params.env_params.backup_replica_bucket_name }}"
      backup_replica_bucket_path: "{{ params.env_params.backup_replica_bucket_path | default('') }}"
      uploads_replica_bucket_name: "{{ params.env_params.uploads_replica_bucket_name }}"
      uploads_replica_bucket_path: "{{ params.env_params.uploads_replica_bucket_path | default('') }}"
      restore_db: "{{ params.env_params.restore_db }}"
      db_gui_root_user: "{{ params.env_params.db_gui_root_user }}"
      use_s3_storage: "{{ params.env_params.use_s3_storage }}"
      use_w3tc: "{{ params.env_params.use_w3tc }}"
      enable_db_backup: true
      enable_db_setup: true
      enable_db_setup_new: true
      enable_logs_backup: true
      enable_logs_setup: true
      enable_sync_backup: true
      enable_sync_setup: true
      enable_uploads_backup: true
      enable_uploads_setup: true
      enable_backup_replica: "{{ params.env_params.enable_backup_replica | default(false) }}"
      enable_uploads_replica: "{{ params.env_params.enable_uploads_replica | default(false) }}"
      migrate_wp_activate_all_plugins: false
      migrate_wp_plugins_to_activate: >-
        {{ params.env_params.migrate_wp_plugins_to_activate | default('') }}
      migrate_wp_plugins_to_deactivate: >-
        {{ params.env_params.migrate_wp_plugins_to_deactivate | default('') }}
      migrate_old_domain_host: "{{ params.env_params.wp_old_domain_host | default('') }}"
      migrate_new_domain_host: "{{ params.env_params.wp_new_domain_host | default('') }}"
      migrate_wp_rewrite_structure: "/%year%/%monthnum%/%day%/%postname%"
    group_params:
      custom_images: "wp_custom_images"
      custom_memory: "wp_custom_memory_app"
      db_setup_new: "db_setup_new"
      db_setup: >-
        {{
        params.env_params.non_s3_setup | default(false) | bool |
        ternary('db_setup_restore_file', 'db_setup_restore_s3')
        }}
      db_backup: "db_backup_no_sync"
      uploads_setup: >-
        {{
        params.env_params.non_s3_setup | default(false) | bool |
        ternary('uploads_setup_file', 'uploads_setup_s3')
        }}
      uploads_backup: "uploads_backup_sync"
      certbot: "certbot"
pod_params:
  wp_custom_args:
    nginx:
      enable_validate_origin: true
    mysql:
      port: "3306"
    wordpress:
      env: "staging"
      lang: "en_US"
      debug: "{{ params.env_params.wp_debug | default(false) }}"
    fluentd:
      port: "24224"
  wp_custom_args_local:
    nginx:
      enable_validate_origin: true
    mysql:
      port: "3306"
    wordpress:
      app_repo_dir: "app-wp"
      env: "development"
      lang: "en_US"
      debug: "{{ params.env_params.wp_debug | default(false) }}"
    fluentd:
      port: "24224"
  wp_custom_domain:
    public_http_port: "80"
    public_https_port: "443"
    private_http_port: "9080"
    private_https_port: "9443"
    main_domain: "{{ params.env_params.wp_full_domain }}"
    main_ssl: "{{ params.env_params.ssl }}"
    pma_domain: "{{ params.env_params.pma_full_domain }}"
    pma_ssl: "{{ params.env_params.ssl }}"
    adminer_domain: "{{ params.env_params.adminer_full_domain }}"
    adminer_ssl: "{{ params.env_params.ssl }}"
    theia_domain: "{{ params.env_params.theia_full_domain }}"
    theia_ssl: "{{ params.env_params.ssl }}"
    minio_gateway_domain: "{{ params.env_params.minio_gateway_full_domain }}"
    minio_gateway_ssl: "{{ params.env_params.ssl }}"
    filestash_domain: "{{ params.env_params.filestash_full_domain }}"
    filestash_ssl: "{{ params.env_params.ssl }}"
    nextcloud_domain: "{{ params.env_params.nextcloud_full_domain }}"
    nextcloud_ssl: "{{ params.env_params.ssl }}"
  wp_custom_domain_local:
    public_http_port: "8080"
    public_https_port: "8443"
    private_http_port: "9080"
    private_https_port: "9443"
    main_domain: "localhost"
    main_ssl: "{{ params.env_params.ssl }}"
    pma_domain: "pma.localhost"
    pma_ssl: "{{ params.env_params.ssl }}"
    adminer_domain: "adminer.localhost"
    adminer_ssl: "{{ params.env_params.ssl }}"
    theia_domain: "theia.localhost"
    theia_ssl: "{{ params.env_params.ssl }}"
    minio_gateway_domain: "minio.localhost"
    minio_gateway_ssl: "{{ params.env_params.ssl }}"
    filestash_domain: "filestash.localhost"
    filestash_ssl: "{{ params.env_params.ssl }}"
    nextcloud_domain: "nextcloud.localhost"
    nextcloud_ssl: "{{ params.env_params.ssl }}"
  wp_custom_images:
    nginx_image: "nginx"
    nginx_version: "1.14.2-alpine"
    varnish_image: "varnish"
    varnish_version: "6.4.0-1"
    wordpress_image: "lucasbasquerotto/wordpress"
    wordpress_version: "20200825"
    redis_image: "redis"
    redis_version: "6.0.6"
    memcached_image: "memcached"
    memcached_version: "1.6.6"
    pma_image: "phpmyadmin/phpmyadmin"
    pma_version: "4.8.5"
    adminer_image: "lucasbasquerotto/image"
    adminer_version: "adminer-20200713-03"
    mysql_image: "lucasbasquerotto/wordpress"
    mysql_version: "mysql-8.0.16-02"
    theia_image: "theiaide/theia"
    theia_version: "1.3.0"
    minio_gateway_image: "minio/minio"
    minio_gateway_version: "RELEASE.2020-07-02T00-15-09Z"
    filestash_image: "machines/filestash"
    filestash_version: "4cbeb2c"
    nextcloud_image: "nextcloud"
    nextcloud_version: "19.0.0-apache"
    toolbox_image: "lucasbasquerotto/image"
    toolbox_version: "toolbox-20200715-02"
    composer_image: "lucasbasquerotto/wordpress"
    composer_version: "composer-1.8.6"
    certbot_image: "certbot/certbot"
    certbot_version: "v1.2.0"
    awscli_image: "lucasbasquerotto/aws-cli"
    awscli_version: "1.0.0"
    mc_image: "minio/mc"
    mc_version: "RELEASE.2020-08-08T02-33-58Z"
    rclone_image: "rclone/rclone"
    rclone_version: "1.53.0"
    logrotator_image: "python"
    logrotator_version: "3.8.4-buster"
    fluentd_image: "lucasbasquerotto/image"
    fluentd_version: "fluentd-20200617"
  wp_custom_memory_app:
    nginx: 512mb
    varnish: 512mb
    wordpress: 512mb
    redis: 512mb
    memcached: 512mb
    pma: 512mb
    adminer: 512mb
    mysql: 758gb
    theia: 512mb
    minio_gateway: 512mb
    filestash: 512mb
    nextcloud: 512mb
    toolbox: 512mb
    composer: 512mb
    fluentd: 256mb
    certbot: 256mb
    s3_cli: 512mb
  wp_custom_memory_db:
    mysql: 1gb
    toolbox: 512mb
    fluentd: 256mb
    s3_cli: 512mb
  wp_custom_memory_cache:
    redis: 512mb
    memcached: 512mb
  wp_custom_memory_web:
    nginx: 512mb
    varnish: 512mb
    wordpress: 1gb
    pma: 512mb
    adminer: 512mb
    theia: 512mb
    minio_gateway: 512mb
    filestash: 512mb
    nextcloud: 512mb
    toolbox: 512mb
    fluentd: 256mb
    certbot: 256mb
    s3_cli: 512mb
  certbot:
    main_domain: "{{ params.env_params.wp_full_domain }}"
    domains: "{{ params.env_params.certbot_domains }}"
    email: "{{ params.env_params.certbot_email | default('') }}"
    staging: "{{ params.env_params.certbot_staging | default(false) }}"
    force: "{{ params.env_params.certbot_force | default(false) }}"
  certbot_local:
    main_domain: "localhost"
    domains: "localhost www.localhost"
    email: "{{ params.env_params.certbot_email | default('') }}"
    force: "{{ params.env_params.certbot_force | default(false) }}"
  db_backup_sync:
    backup_bucket_sync_dir: "db"
  db_backup_no_sync:
    is_compressed_file: true
  db_setup_restore_file:
    restore_use_s3: false
    restore_remote_file: "https://github.com/lucasbasquerotto/backups/blob/master/wordpress/db/20200624_214700.zip?raw=true"
    is_compressed_file: true
    db_file_name: "{{ params.credentials.wordpress.db.name }}.sql"
  db_setup_restore_s3:
    restore_use_s3: true
    restore_s3_sync: true
    restore_remote_bucket_path_dir: "db"
  db_setup_new:
    url: >-
      {{ params.env_params.ssl | bool | ternary('https', 'http')
      }}://{{ params.env_params.wp_full_domain }}
    title: "{{ params.env_params.wp_title }}"
    restore_seed: "{{ params.env_params.wp_restore_seed | default(false) }}"
    remote_seed_data: "https://gist.githubusercontent.com/lucasbasquerotto/667447640482369d0c6b093ee7200c96/raw/9d9d446b9f1017aa4bc12628aea954f1f10f020c/wordpress-theme-unit-test-data.xml"
  db_setup_new_local:
    url: >-
      {{ params.env_params.ssl | bool | ternary('https', 'http')
      }}://localhost:{{ params.env_params.ssl | bool | ternary(8443, 8080) }}
    title: "{{ params.env_params.wp_title }}"
    restore_seed: "{{ params.env_params.wp_restore_seed | default(false) }}"
    remote_seed_data: "https://gist.githubusercontent.com/lucasbasquerotto/667447640482369d0c6b093ee7200c96/raw/9d9d446b9f1017aa4bc12628aea954f1f10f020c/wordpress-theme-unit-test-data.xml"
  uploads_backup_sync:
    backup_bucket_sync_dir: "uploads"
  uploads_backup_no_sync:
    is_compressed_file: true
  uploads_setup_file:
    restore_use_s3: false
    restore_remote_file: "https://github.com/lucasbasquerotto/backups/blob/master/wordpress/uploads/20200624_214700.zip?raw=true"
    is_compressed_file: true
    restore_compressed_inner_dir: "uploads"
  uploads_setup_s3:
    restore_use_s3: true
    restore_s3_sync: true
    restore_bucket_path_dir: "uploads"
tasks:
  docker_compose_install:
    type: "task"
    root: true
    file: "docker.yml"
    compose_params:
      version: "1.27.2"
      remote: true
  main_build:
    type: "shell"
    root: true
    cmd: "./run build"
  main_upgrade:
    type: "shell"
    root: true
    cmd: "./run upgrade"
repos:
  cloud:
    src: "https://github.com/lucasbasquerotto/ansible-docker.git"
    version: "master"
  custom_cloud:
    src: "https://github.com/lucasbasquerotto/custom-cloud.git"
    version: "master"
  pod:
    src: "https://github.com/lucasbasquerotto/pod.git"
    version: "master"
  custom_pod:
    src: "https://github.com/lucasbasquerotto/custom-pod.git"
    version: "master"
  app:
    src: "https://github.com/lucasbasquerotto/wordpress-docker.git"
    version: "master"
credentials: "{{ params.credentials }}"
