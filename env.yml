name: "{{ params.name }}"
init:
  custom: "{{ params.env_params.init[params.env_params.ctx] | default({}) }}"
  all_local:
    inner_params: true
    shared_params: "local"
  efk_local:
    inner_params: true
    shared_params: "local"
  wp_local:
    inner_params: true
    shared_params: "local"
  efk:
    inner_params: true
    params:
      run_stages: "efk"
    shared_params: "remote"
  wp:
    inner_params: true
    shared_params: "remote"
  wp_efk:
    inner_params: true
    params:
      run_stages: "wp_efk"
    shared_params: "remote"
  wp_efk_nodes:
    inner_params: true
    params:
      run_stages: "wp_efk_nodes"
    shared_params: "remote"
  wp_remote_test_setup_remote_backup_sync:
    inner_params: true
    other_params:
      env_repos: "test_env_repos"
    shared_params: "remote"
  wp_remote_test_setup_bucket_dir_backup_no_sync:
    inner_params: true
    other_params:
      env_repos: "test_env_repos"
    shared_params: "remote"
  wp_remote_test_setup_bucket_file_backup_sync:
    inner_params: true
    other_params:
      env_repos: "test_env_repos"
    shared_params: "remote"
  wp_local_test_setup_remote_backup_sync:
    inner_params: true
    other_params:
      env_repos: "test_env_repos"
    shared_params: "local"
  wp_local_test_setup_bucket_dir_backup_no_sync:
    inner_params: true
    other_params:
      env_repos: "test_env_repos"
    shared_params: "local"
  wp_local_test_setup_bucket_file_backup_sync:
    inner_params: true
    other_params:
      env_repos: "test_env_repos"
    shared_params: "local"
init_shared_params:
  local:
    entrypoint: "main_entrypoint"
    entrypoint_template_src: "main_entrypoint_template_src"
    hosts_content: "local_hosts_content"
    meta: "main_meta"
    repo: "main_repo"
  remote:
    entrypoint: "main_entrypoint"
    entrypoint_template_src: "main_entrypoint_template_src"
    hosts_file: "remote_hosts_file"
    meta: "main_meta"
    repo: "main_repo"
init_params:
  local_hosts_content: |
    [main]
    localhost ansible_connection=local
    [host]
  main_entrypoint: "main.yml"
  main_entrypoint_template_src: "main.tpl.yml"
  main_meta: "init"
  main_repo: "cloud"
  remote_hosts_file: "files/hosts/dev.hosts"
  test_env_repos: [{ repo: "custom_cloud", dir: "custom-cloud" }]
meta_params:
  init:
    template_no_comments: false
    template_no_empty_lines: false
  local:
    template_no_comments: true
    template_no_empty_lines: true
  remote:
    template_no_comments: false
    template_no_empty_lines: false
main: 
  custom: "{{ params.env_params.main[params.env_params.ctx] | default({}) }}"
  all_local:
    meta: "local"
    clouds:
    - "local"
    nodes:
    - "efk_local"
    - "wp_local"
    - "wp_app"
    - "wp_efk_app"
    - "wp_db"
    - "wp_web"
    run_stages:
    - "nodes"
    - "build"
    - "all_local_stop"
    - "all_local_upgrade"
    local:
      pods:
      - "efk"
      - "wp_app_local_dynamic"
      - "wp_app"
      - "wp_db"
      - "wp_web"
      apps:
      - "wp_local"
  efk_local:
    meta: "local"
    clouds:
    - "local"
    nodes:
    - "efk_local"
    local:
      pods:
      - >- 
        {{ 
        params.env_params.dynamic | default(false) | bool | 
        ternary('efk_dynamic', 'efk')
        }}
  wp_local:
    meta: "local"
    clouds:
    - "local"
    nodes:
    - "wp_local"
    local:
      pods:
      - >- 
        {{ 
        params.env_params.dynamic | default(false) | bool | 
        ternary('wp_app_local_dynamic', 'wp_app')
        }}
      apps:
      - "wp_local"
  efk: 
    meta: "remote"
    clouds:
    - "{{ params.env_params.cloud_name }}"
    nodes:
    - "efk"
    run_stages:
    - "default"
  wp: 
    meta: "remote"
    clouds:
    - "{{ params.env_params.cloud_name }}"
    buckets:
    - "wp_uploads"
    - "wp_db"
    nodes:
    - "wp_app"
    run_stages:
    - "default"
  wp_efk: 
    meta: "remote"
    clouds:
    - "{{ params.env_params.cloud_name }}"
    buckets:
    - "wp_uploads"
    - "wp_db"
    nodes:
    - "wp_efk_app"
    run_stages:
    - "nodes"
    - "build"
    - "wp_efk_app_efk"
    - "wp_efk_app_wp"
  wp_efk_nodes: 
    meta: "remote"
    clouds:
    - "{{ params.env_params.cloud_name }}"
    buckets:
    - "wp_uploads"
    - "wp_db"
    nodes:
    - "efk_external"
    - "wp_db"
    - "wp_web"
    run_stages:
    - "nodes"
    - "build"
    - "efk_external_upgrade"
    - "wp_web_stop"
    - "wp_db_upgrade"
    - "wp_web_upgrade"
  wp_remote_test_setup_remote_backup_sync:
    meta: "remote"
    hooks: "test"
    clouds:
    - "{{ params.env_params.cloud_name }}"
    nodes:
    - "wp_remote_test_setup_remote_backup_sync"
    run_stages:
    - "default"
    - "backup"
  wp_remote_test_setup_bucket_dir_backup_no_sync:
    meta: "remote"
    hooks: "test"
    clouds:
    - "{{ params.env_params.cloud_name }}"
    nodes:
    - "wp_remote_test_setup_bucket_dir_backup_no_sync"
    run_stages:
    - "default"
    - "backup"
  wp_remote_test_setup_bucket_file_backup_sync:
    meta: "remote"
    hooks: "test"
    clouds:
    - "{{ params.env_params.cloud_name }}"
    nodes:
    - "wp_remote_test_setup_bucket_file_backup_sync"
    run_stages:
    - "default"
    - "backup"
    - "wait"
    - "clear"
  wp_local_test_setup_remote_backup_sync:
    meta: "local"
    hooks: "test"
    clouds:
    - "local"
    nodes:
    - "wp_local_test_setup_remote_backup_sync"
    local:
      pods:
      - "wp_app_local_dynamic"
      apps:
      - "wp_local"
  wp_local_test_setup_bucket_dir_backup_no_sync:
    meta: "local"
    hooks: "test"
    clouds:
    - "local"
    nodes:
    - "wp_local_test_setup_bucket_dir_backup_no_sync"
    local:
      pods:
      - "wp_app_local_dynamic"
      apps:
      - "wp_local"
  wp_local_test_setup_bucket_file_backup_sync:
    meta: "local"
    hooks: "test"
    clouds:
    - "local"
    nodes:
    - "wp_local_test_setup_bucket_file_backup_sync"
    local:
      pods:
      - "wp_app_local_dynamic"
      apps:
      - "wp_local"
hooks:
  test:
    before_cloud_main: "custom-cloud/hooks/before_cloud_main.yml"
    after_cloud_main: "custom-cloud/hooks/after_cloud_main.yml"
    before_dns: "custom-cloud/hooks/before_dns.yml"
    after_dns: "custom-cloud/hooks/after_dns.yml"
    before_buckets: "custom-cloud/hooks/before_buckets.yml"
    after_buckets: "custom-cloud/hooks/after_buckets.yml"
    before_nodes: "custom-cloud/hooks/before_nodes.yml"
    after_nodes: "custom-cloud/hooks/after_nodes.yml"
    before_wait_nodes: "custom-cloud/hooks/before_wait_nodes.yml"
    after_wait_nodes: "custom-cloud/hooks/after_wait_nodes.yml"
    before_local_prepare: "custom-cloud/hooks/before_local_prepare.yml"
    after_local_prepare: "custom-cloud/hooks/after_local_prepare.yml"
    before_remote_prepare: "custom-cloud/hooks/before_remote_prepare.yml"
    after_remote_prepare: "custom-cloud/hooks/after_remote_prepare.yml"
    before_cron: "custom-cloud/hooks/before_cron.yml"
    after_cron: "custom-cloud/hooks/after_cron.yml"
    before_exec: "custom-cloud/hooks/before_exec.yml"
    after_exec: "custom-cloud/hooks/after_exec.yml"
    before_delete_tmp: "custom-cloud/hooks/before_delete_tmp.yml"
    after_delete_tmp: "custom-cloud/hooks/after_delete_tmp.yml"
    before_delete_main: "custom-cloud/hooks/before_delete_main.yml"
    after_delete_main: "custom-cloud/hooks/after_delete_main.yml"
clouds:
  local:
    type: "local"
  do:
    type: "digital_ocean"
    credentials: "digital_ocean"
    params:
      digital_ocean_tags:
      - "auto"
      - "dmz"
      - "mysql"
      - "kibana"
      digital_ocean_firewalls:
      - "auto"
      - "dmz"
      - "mysql"
      - "kibana"
    shared_params: "digital_ocean"
cloud_shared_params: 
  digital_ocean:  
    digital_ocean_firewalls_dict: "do_firewalls_dict"
cloud_params:   
  do_firewalls_dict:
    auto:
      name: "auto"
      tags: ["auto"]
      inbound_rules:
      - ports: "22"
        sources:
          tags: ["main"]
      outbound_rules:
      - protocol: "tcp"
        ports: "1-65535"
        destinations:
          addresses: ["0.0.0.0/0", "::/0"]
      - protocol: "udp"
        ports: "1-65535"
        destinations:
          addresses: ["0.0.0.0/0", "::/0"]
      - protocol: "icmp"
        ports: "1-65535"
        destinations:
          addresses: ["0.0.0.0/0", "::/0"]
    dmz:
      name: "dmz"
      tags: ["dmz"]
      inbound_rules:
      - ports: "80"
        sources:
          addresses: ["0.0.0.0/0", "::/0"]
      - ports: "443"
        sources:
          addresses: ["0.0.0.0/0", "::/0"]
    mysql:
      name: "mysql"
      tags: ["mysql"]
      inbound_rules:
      - ports: "3306"
        sources:
          tags: ["web"]
    kibana:
      name: "kibana"
      tags: ["kibana"]
      inbound_rules:
      - ports: "5601"
        sources:
          addresses: ["0.0.0.0/0", "::/0"]
dns:
  cloudflare: 
    type: "cloudflare"
    zone: "{{ params.env_params.domain }}"
    credentials: "cloudflare"
buckets: 
  wp_db:
    name: "{{ params.env_params.wp_db_bucket.name | default('') }}"
    endpoint: "{{ params.env_params.wp_db_bucket.endpoint | default('') }}"
    credentials: "{{ params.env_params.wp_db_bucket.credentials | default('') }}"
  wp_uploads:
    name: "{{ params.env_params.wp_uploads_bucket.name | default('') }}"
    endpoint: "{{ params.env_params.wp_uploads_bucket.endpoint | default('') }}"
    credentials: "{{ params.env_params.wp_uploads_bucket.credentials | default('') }}"
nodes:
  efk_local:
    cloud: "local"
    base_dir: "/var/cloud"
    credentials: "user"
    main_pod: >- 
      {{ 
      params.env_params.dynamic | default(false) | bool | 
      ternary('efk_dynamic', 'efk')
      }}
    tasks_group: "node_prepare"
    params: 
      size: "{{ params.env_params.node_size | default('small') }}"
      cron: 
      - "local"
    shared_params: "main"
  wp_local:
    cloud: "local"
    base_dir: "/var/cloud"
    credentials: "user"
    main_pod: >-
      {{ 
      params.env_params.dynamic | default(false) | bool | 
      ternary('wp_app_local_dynamic', 'wp_app')
      }}
    tasks_group: "node_prepare"
    params: 
      size: "{{ params.env_params.node_size | default('micro') }}"
      cron: 
      - "local"
    shared_params: "main"
  wp_local_test_setup_remote_backup_sync:
    cloud: "local"
    base_dir: "/var/cloud"
    credentials: "user"
    main_pod: "wp_app_local_dynamic"
    tasks_group: "node_prepare"
    params: 
      size: "{{ params.env_params.node_size | default('micro') }}"
      cron: 
      - "local"
      pod_override_other_params:
        wp_app_local_dynamic:
          run: "wp_run_setup_remote_backup_sync"
    shared_params: "main"
  wp_local_test_setup_bucket_dir_backup_no_sync:
    cloud: "local"
    base_dir: "/var/cloud"
    credentials: "user"
    main_pod: "wp_app_local_dynamic"
    tasks_group: "node_prepare"
    params: 
      size: "{{ params.env_params.node_size | default('micro') }}"
      cron: 
      - "local"
      pod_override_other_params:
        wp_app_local_dynamic:
          run: "wp_run_setup_bucket_dir_backup_no_sync"
    shared_params: "main"
  wp_local_test_setup_bucket_file_backup_sync:
    cloud: "local"
    base_dir: "/var/cloud"
    credentials: "user"
    main_pod: "wp_app_local_dynamic"
    tasks_group: "node_prepare"
    params: 
      size: "{{ params.env_params.node_size | default('micro') }}"
      cron: 
      - "local"
      pod_override_other_params:
        wp_app_local_dynamic:
          run: "wp_run_setup_bucket_file_backup_sync"
    shared_params: "main"
  wp_remote_test_setup_remote_backup_sync:
    cloud: "{{ params.env_params.cloud_name }}"
    amount: 1
    max_amount: 1
    base_dir: "/var/cloud"
    credentials: "host"
    main_pod: "wp_app_dynamic"
    tasks_group: "node_prepare"
    params: 
      instance: "ubuntu"
      region: "default"
      size: "micro"
      host_test_type: "default"
      dns:
      - "blog"
      digital_ocean_tags:
      - "auto"
      - "dmz"
      pod_override_other_params:
        wp_app_dynamic:
          run: "wp_run_setup_remote_backup_sync"
    shared_params: "main"
  wp_remote_test_setup_bucket_dir_backup_no_sync:
    cloud: "{{ params.env_params.cloud_name }}"
    amount: 1
    max_amount: 1
    base_dir: "/var/cloud"
    credentials: "host"
    main_pod: "wp_app_dynamic"
    tasks_group: "node_prepare"
    params: 
      instance: "ubuntu"
      region: "default"
      size: "micro"
      host_test_type: "default"
      dns:
      - "blog"
      digital_ocean_tags:
      - "auto"
      - "dmz"
      pod_override_other_params:
        wp_app_dynamic:
          run: "wp_run_setup_bucket_dir_backup_no_sync"
    shared_params: "main"
  wp_remote_test_setup_bucket_file_backup_sync:
    cloud: "{{ params.env_params.cloud_name }}"
    amount: 1
    max_amount: 1
    base_dir: "/var/cloud"
    credentials: "host"
    main_pod: "wp_app_dynamic"
    tasks_group: "node_prepare"
    params: 
      instance: "ubuntu"
      region: "default"
      size: "micro"
      host_test_type: "default"
      dns:
      - "blog"
      digital_ocean_tags:
      - "auto"
      - "dmz"
      pod_override_other_params:
        wp_app_dynamic:
          run: "wp_run_setup_bucket_file_backup_sync"
    shared_params: "main"
  efk:
    cloud: "{{ params.env_params.cloud_name }}"
    amount: "{{ params.env_params.node_efk_amount | default(1) }}"
    max_amount: "{{ params.env_params.node_efk_max_amount | default(1) }}"
    base_dir: "/var/cloud"
    credentials: "{{ params.env_params.local | default(false) | bool | ternary('user', 'host') }}"
    main_pod: >- 
      {{ 
      params.env_params.dynamic | default(false) | bool | 
      ternary('efk_dynamic', 'efk')
      }}
    tasks_group: "node_prepare"
    params: 
      instance: "ubuntu"
      region: "default"
      size: "small"
      host_test_type: "default"
      dns:
      - "log"
      digital_ocean_tags:
      - "auto"
      - "kibana"
    shared_params: "main"
  efk_external:
    cloud: "{{ params.env_params.cloud_name }}"
    amount: "{{ params.env_params.node_efk_amount | default(1) }}"
    max_amount: "{{ params.env_params.node_efk_max_amount | default(1) }}"
    base_dir: "/var/cloud"
    credentials: "{{ params.env_params.local | default(false) | bool | ternary('user', 'host') }}"
    main_pod: >- 
      {{ 
      params.env_params.dynamic | default(false) | bool | 
      ternary('efk_external_dynamic', 'efk_external')
      }}
    tasks_group: "node_prepare"
    params: 
      instance: "ubuntu"
      region: "default"
      size: "small"
      host_test_type: "default"
      dns:
      - "log"
      digital_ocean_tags:
      - "auto"
      - "kibana"
    shared_params: "main"
  wp_app:
    cloud: "{{ params.env_params.cloud_name }}"
    amount: 1
    max_amount: 1
    base_dir: "/var/cloud"
    credentials: "{{ params.env_params.local | default(false) | bool | ternary('localhost', 'host') }}"
    main_pod: >- 
      {{ 
      params.env_params.dynamic | default(false) | bool | 
      ternary('wp_app_dynamic', 'wp_app')
      }}
    tasks_group: "node_prepare"
    params: 
      instance: "ubuntu"
      region: "default"
      size: "micro"
      host_test_type: "default"
      cron: 
      - "app"
      dns:
      - "blog"
      digital_ocean_tags:
      - "auto"
      - "dmz"
    shared_params: "main"
  wp_efk_app:
    cloud: "{{ params.env_params.cloud_name }}"
    amount: 1
    max_amount: 1
    base_dir: "/var/cloud"
    credentials: "{{ params.env_params.local | default(false) | bool | ternary('localhost', 'host') }}"
    main_pod: >- 
      {{ 
      params.env_params.dynamic | default(false) | bool | 
      ternary('wp_app_dynamic', 'wp_app')
      }}
    pods:
    - >- 
      {{ 
      params.env_params.dynamic | default(false) | bool | 
      ternary('efk_dynamic', 'efk')
      }}
    - >- 
      {{ 
      params.env_params.dynamic | default(false) | bool | 
      ternary('wp_app_dynamic', 'wp_app')
      }}
    tasks_group: "node_prepare"
    params: 
      instance: "ubuntu"
      region: "default"
      size: "medium"
      host_test_type: "default"
      cron: 
      - "app"
      dns:
      - "blog"
      digital_ocean_tags:
      - "auto"
      - "dmz"
      - "kibana"
      pod_override_params:
        wp_app_dynamic:
          default_logging: "wp_efk"
      pod_override_shared_params:
        efk: "wp_efk_app_pods"
        efk_dynamic: "wp_efk_app_pods"
        wp_app_dynamic: "wp_efk_app_pods"
    shared_params: "main"
  wp_db:
    cloud: "{{ params.env_params.cloud_name }}"
    amount: 1
    max_amount: 1
    base_dir: "/var/cloud"
    credentials: "{{ params.env_params.local | default(false) | bool | ternary('localhost', 'host') }}"
    main_pod: >- 
      {{ 
      params.env_params.dynamic | default(false) | bool | 
      ternary('wp_db_dynamic', 'wp_db')
      }}
    tasks_group: "node_prepare"
    dependencies:
    - host: "elasticsearch"
      node: "efk_external"
    params: 
      instance: "ubuntu"
      region: "default"
      size: "micro"
      host_test_type: "default"
      cron: 
      - "app"
      digital_ocean_tags:
      - "auto"
      - "mysql"
    shared_params: "main"
  wp_web:
    cloud: "{{ params.env_params.cloud_name }}"
    amount: 1
    max_amount: 1
    base_dir: "/var/cloud"
    credentials: "{{ params.env_params.local | default(false) | bool | ternary('localhost', 'host') }}"
    main_pod: >- 
      {{ 
      params.env_params.dynamic | default(false) | bool | 
      ternary('wp_web_dynamic', 'wp_web')
      }}
    tasks_group: "node_prepare"
    dependencies:
    - host: "elasticsearch"
      node: "efk_external"
    - host: "mysql"
      node: "wp_db"
    params: 
      instance: "ubuntu"
      region: "default"
      size: "micro"
      host_test_type: "default"
      cron: 
      - "app"
      dns:
      - "blog"
      digital_ocean_tags:
      - "auto"
      - "dmz"
    shared_params: "main"
node_shared_params:
  main:
    cloud_instance_dict: "main_cloud_instance_dict"
    cloud_region_dict: "main_cloud_region_dict"
    cloud_size_dict: "main_cloud_size_dict"
    host_test_dict: "main_host_test_dict"
    cron_dict: "main_cron_dict"
    dns_dict: "main_dns_dict"
node_params:
  main_cloud_instance_dict:
    digital_ocean:
      ubuntu:
        image: "ubuntu-18-04-x64"
        user_data_file: "templates/ubuntu-18.04.j2.sh"
        ipv6: "yes"
  main_cloud_region_dict:
    digital_ocean:
      default:
        name: "nyc3"
  main_cloud_size_dict:
    local:
      micro:
        memory: "1gb"
        cpu: 1
      small:
        memory: "2gb"
        cpu: 2
      medium:
        memory: "4gb"
        cpu: 4
      large:
        memory: "8gb"
        cpu: 8
      xlarge:
        memory: "16gb"
        cpu: 16
      x2large:
        memory: "32gb"
        cpu: 32
      x4large:
        memory: "64gb"
        cpu: 64
    digital_ocean:
      micro:
        name: "1gb"
        memory: "1gb"
        cpu: 1
      small:
        name: "2gb"
        memory: "2gb"
        cpu: 2
      medium:
        name: "4gb"
        memory: "4gb"
        cpu: 2
  main_host_test_dict:
    default:
      log_file: "/var/log/setup.log"
      setup_last_line: "Setup Finished"
      initial_connection_timeout: 90
      setup_finished_timeout: 300
  main_cron_dict: 
    app:
      user: "root"
      src_file: "files/cron/app.cron"
      dest_dir: "/var/spool/cron/crontabs"
    local: 
      user: "root"
      src_file: "files/test/cron"
      dest_dir: "/var/spool/cron/crontabs"
  main_dns_dict: 
    blog:
      name: "{{ params.env_params.dns_name }}"
      record: "blog"
    log:
      name: "{{ params.env_params.dns_name }}"
      record: "log"
pods:
  efk:
    repo: "pod"
    root: "yes"
    ctx: "custom-pod/efk/ctx.yml"
    fast_prepare: "true"
    tasks_group: "pod_efk"
    env_repos: 
    - repo: "custom_pod"
      dir: "custom-pod"
    params:
      type: "app"
      local: "{{ params.env_params.local | default(false) }}"
      orchestration: "docker_compose"
      custom_dir: "custom-pod"
    shared_params: "efk_custom_app"
  efk_dynamic:
    repo: "pod"
    root: "yes"
    ctx: "main/log/ctx.yml"
    fast_prepare: "true"
    tasks_group: "pod_efk"
    params:
      type: "app"
      local: "{{ params.env_params.local | default(false) }}"
      orchestration: "docker_compose"
      default_logging: "log"
      volumes:
      - "elasticsearch"
      networks:
      - "log"
      services:
      - "fluentd"
      - "elasticsearch"
      - "kibana"
    other_params:
      memory_dict: "efk_memory_dict"
      run: "efk_run_dynamic"
    shared_params: "main"
  efk_external:
    repo: "pod"
    root: "yes"
    ctx: "custom-pod/efk/ctx.yml"
    fast_prepare: "true"
    tasks_group: "pod_efk"
    env_repos: 
    - repo: "custom_pod"
      dir: "custom-pod"
    params:
      type: "external"
      local: "{{ params.env_params.local | default(false) }}"
      orchestration: "docker_compose"
      custom_dir: "custom-pod"
    shared_params: "efk_custom_external"
  efk_external_dynamic:
    repo: "pod"
    root: "yes"
    ctx: "main/log/ctx.yml"
    fast_prepare: "true"
    tasks_group: "pod_efk"
    params:
      type: "external"
      local: "{{ params.env_params.local | default(false) }}"
      orchestration: "docker_compose"
      default_logging: "log"
      volumes:
      - "elasticsearch"
      networks:
      - "log"
      services:
      - "elasticsearch"
      - "kibana"
    other_params:
      memory_dict: "efk_memory_dict"
      run: "efk_run_dynamic"
    shared_params: "main"
  wp_app_local_dynamic:
    repo: "pod"
    root: "yes"
    ctx: "main/wordpress/ctx.yml"
    fast_prepare: "true"
    tasks_group: "pod_wp"
    credentials:
      wordpress: "wordpress"
      mysql: "mysql"
      wp_db_bucket: "{{ params.env_params.wp_db_bucket.credentials | default('') }}"
      wp_uploads_bucket: "{{ params.env_params.wp_uploads_bucket.credentials | default('') }}"
    params:
      type: "app"
      local: true
      orchestration: "docker_compose"
      default_logging: "wp_app"
      volumes:
      - "wordpress"
      managed_volumes:
      - "mysql"
      networks:
      - "internet"
      - "local"
      services:
      - "nginx"
      - "wordpress"
      - "phpmyadmin"
      - "mysql"
      - "toolbox"
      - "composer"
      run_services:
      - "wp_s3_uploads"
      - "wp_s3_db"
      map_src_path_dict:
        wp_s3_db: "toolbox"
        wp_s3_uploads: "toolbox"
      map_services_dict:
        wp_s3_db: "toolbox"
        wp_s3_uploads: "toolbox"
      map_services_memory_dict:
        wp_s3_db: "toolbox"
        wp_s3_uploads: "toolbox"
      map_services_depends_on_dict:
        wordpress: "wordpress_app"
        phpmyadmin: "phpmyadmin_app"
      map_services_networks_dict:
        phpmyadmin: "phpmyadmin_app"
        mysql: "mysql_app"
      map_services_volumes_dict:
        mysql: "mysql_local"
        wordpress: "wordpress_local"
        wp_s3_db: "toolbox"
        wp_s3_uploads: "toolbox"
    other_params:
      memory_dict: "wp_app_memory_dict"
      meta: "wp_meta"
      run: "wp_run_dynamic_app"
      run_dict: "wp_run_dict"
    shared_params: "main"
  wp_app:
    repo: "pod"
    root: "yes"
    ctx: "custom-pod/wordpress/ctx.yml"
    fast_prepare: "true"
    tasks_group: "pod_wp"
    env_repos: 
    - repo: "custom_pod"
      dir: "custom-pod"
    credentials:
      wordpress: "wordpress"
      mysql: "mysql"
      wp_db_bucket: "{{ params.env_params.wp_db_bucket.credentials | default('') }}"
      wp_uploads_bucket: "{{ params.env_params.wp_uploads_bucket.credentials | default('') }}"
    params:
      type: "app"
      local: "{{ params.env_params.local | default(false) }}"
      orchestration: "docker_compose"
      custom_dir: "custom-pod"
    shared_params: "wp_custom_app"
  wp_app_dynamic:
    repo: "pod"
    root: "yes"
    ctx: "main/wordpress/ctx.yml"
    fast_prepare: "true"
    tasks_group: "pod_wp"
    credentials:
      wordpress: "wordpress"
      mysql: "mysql"
      bucket: "wp_bucket"
    params:
      type: "app"
      local: false
      orchestration: "docker_compose"
      default_logging: "wp_app"
      volumes:
      - "mysql"
      - "wordpress"
      networks:
      - "internet"
      - "local"
      services:
      - "nginx"
      - "wordpress"
      - "phpmyadmin"
      - "mysql"
      - "toolbox"
      run_services:
      - "wp_s3_uploads"
      - "wp_s3_db"
      map_src_path_dict:
        wp_s3_db: "toolbox"
        wp_s3_uploads: "toolbox"
      map_services_dict:
        wp_s3_db: "toolbox"
        wp_s3_uploads: "toolbox"
      map_services_memory_dict:
        wp_s3_db: "toolbox"
        wp_s3_uploads: "toolbox"
      map_services_depends_on_dict:
        wordpress: "wordpress_app"
        phpmyadmin: "phpmyadmin_app"
      map_services_networks_dict:
        phpmyadmin: "phpmyadmin_app"
        mysql: "mysql_app"
      map_services_volumes_dict:
        wp_s3_db: "toolbox"
        wp_s3_uploads: "toolbox"
    other_params:
      memory_dict: "wp_app_memory_dict"
      meta: "wp_meta"
      run: "wp_run_dynamic_app"
      run_dict: "wp_run_dict"
    shared_params: "main"
  wp_db:
    repo: "pod"
    root: "yes"
    ctx: "custom-pod/wordpress/ctx.yml"
    fast_prepare: "true"
    tasks_group: "pod_wp"
    env_repos: 
    - repo: "custom_pod"
      dir: "custom-pod"
    credentials:
      wordpress: "wordpress"
      mysql: "mysql"
      wp_db_bucket: "{{ params.env_params.wp_db_bucket.credentials | default('') }}"
    params:
      type: "db"
      local: "{{ params.env_params.local | default(false) }}"
      orchestration: "docker_compose"
      custom_dir: "custom-pod"
    shared_params: "wp_custom_db"
  wp_db_dynamic:
    repo: "pod"
    root: "yes"
    ctx: "main/wordpress/ctx.yml"
    fast_prepare: "true"
    tasks_group: "pod_wp"
    credentials:
      wordpress: "wordpress"
      mysql: "mysql"
      wp_db_bucket: "{{ params.env_params.wp_db_bucket.credentials | default('') }}"
    params:
      type: "db"
      local: false
      orchestration: "docker_compose"
      default_logging: "wp_efk"
      volumes:
      - "mysql"
      networks:
      - "internet"
      - "local"
      services:
      - "mysql"
      - "toolbox"
      - "fluentd"
      run_services:
      - "wp_s3_db"
      map_src_path_dict:
        wp_s3_db: "toolbox"
      map_services_dict:
        wp_s3_db: "toolbox"
      map_services_memory_dict:
        wp_s3_db: "toolbox"
      map_services_ports_dict:
        mysql: "mysql_db"
      map_services_volumes_dict:
        wp_s3_db: "toolbox"
    other_params:
      memory_dict: "wp_db_memory_dict"
      meta: "wp_meta"
      run: "wp_run_dynamic_db"
      run_dict: "wp_run_dict"
    shared_params: "main"
  wp_web:
    repo: "pod"
    root: "yes"
    ctx: "custom-pod/wordpress/ctx.yml"
    fast_prepare: "true"
    tasks_group: "pod_wp"
    env_repos: 
    - repo: "custom_pod"
      dir: "custom-pod"
    credentials:
      wordpress: "wordpress"
      mysql: "mysql"
      wp_uploads_bucket: "{{ params.env_params.wp_uploads_bucket.credentials | default('') }}"
    params:
      type: "web"
      local: "{{ params.env_params.local | default(false) }}"
      orchestration: "docker_compose"
      custom_dir: "custom-pod"
    shared_params: "wp_custom_web"
  wp_web_dynamic:
    repo: "pod"
    root: "yes"
    ctx: "main/wordpress/ctx.yml"
    fast_prepare: "true"
    tasks_group: "pod_wp"
    credentials:
      wordpress: "wordpress"
      mysql: "mysql"
      wp_uploads_bucket: "{{ params.env_params.wp_uploads_bucket.credentials | default('') }}"
    params:
      type: "web"
      local: false
      orchestration: "docker_compose"
      default_logging: "wp_efk"
      volumes:
      - "wordpress"
      networks:
      - "internet"
      - "local"
      services:
      - "nginx"
      - "wordpress"
      - "phpmyadmin"
      - "toolbox"
      - "fluentd"
      run_services:
      - "wp_s3_uploads"
      map_src_path_dict:
        wp_s3_uploads: "toolbox"
      map_services_dict:
        wp_s3_uploads: "toolbox"
      map_services_memory_dict:
        wp_s3_uploads: "toolbox"
      map_services_volumes_dict:
        wp_s3_uploads: "toolbox"
    other_params:
      memory_dict: "wp_web_memory_dict"
      meta: "wp_meta"
      run: "wp_run_dynamic_web"
      run_dict: "wp_run_dict"
    shared_params: "main"
pod_shared_params:
  efk_custom_app:
    custom_args: "efk_custom_args"
    custom_images: "efk_custom_images"
    custom_memory: "efk_custom_memory"
    run: "efk_run"
  efk_custom_external:
    custom_args: "efk_custom_args"
    custom_images: "efk_custom_images"
    custom_memory: "efk_custom_memory"
    run: "efk_run"
  main:
    compose_version: "main_compose_version"
    containers_dict: "main_containers_dict"
    default_logging_dict: "main_default_logging_dict"
    logging_dict: "main_logging_dict"
    managed_volumes_dict: "main_managed_volumes_dict"
    networks_dict: "main_networks_dict"
    services_data_dict: "main_services_data_dict"
    services_dict: "main_services_dict"
    services_command_dict: "main_services_command_dict"
    services_depends_on_dict: "main_services_depends_on_dict"
    services_environment_dict: "main_services_environment_dict"
    services_logging_dict: "main_services_logging_dict"
    services_networks_dict: "main_services_networks_dict"
    services_ports_dict: "main_services_ports_dict"
    services_volumes_dict: "main_services_volumes_dict"
    services_ulimits_dict: "main_services_ulimits_dict"
    volumes_dict: "main_volumes_dict"
  wp_custom_app:
    custom_args: "wp_custom_args"
    custom_domain: "wp_custom_domain"
    custom_images: "wp_custom_images"
    custom_memory: "wp_custom_memory_app"
    meta: "wp_meta"
    run: "wp_custom_run_app"
    run_dict: "wp_run_dict"
  wp_custom_db:
    custom_args: "wp_custom_args"
    custom_domain: "wp_custom_domain"
    custom_images: "wp_custom_images"
    custom_memory: "wp_custom_memory_db"
    meta: "wp_meta"
    run: "wp_custom_run_db"
    run_dict: "wp_run_dict"
  wp_custom_web:
    custom_args: "wp_custom_args"
    custom_domain: "wp_custom_domain"
    custom_images: "wp_custom_images"
    custom_memory: "wp_custom_memory_web"
    meta: "wp_meta"
    run: "wp_custom_run_web"
    run_dict: "wp_run_dict"
  wp_efk_app_pods:
    memory_dict: "wp_efk_app_memory_dict"
pod_params:
  efk_custom_args:
    fluentd: 
      port: "24224"
    elasticsearch:
      port: "9200"
      java_opts: "-Xms1g -Xmx1g"
    kibana:
      port: "5601"
  efk_custom_images:
    fluentd_image: "lucasbasquerotto/wordpress"
    fluentd_version: "fluentd-1.7.4-01"
    elasticsearch_image: "docker.elastic.co/elasticsearch/elasticsearch"
    elasticsearch_version: "7.5.0"
    kibana_image: "docker.elastic.co/kibana/kibana"
    kibana_version: "7.5.0"
  efk_custom_memory:
    fluentd: "512mb"
    elasticsearch: "2gb"
    kibana: "1gb"
  efk_memory_dict:
    1gb:
      fluentd:
        mem_limit: "128mb"
      elasticsearch:
        mem_limit: "512mb"
        environment:
          ES_JAVA_OPTS: -Xms256m -Xmx256m
      kibana:
        mem_limit: "256mb"
    2gb:
      fluentd:
        mem_limit: "256mb"
      elasticsearch:
        mem_limit: "1gb"
        environment:
          ES_JAVA_OPTS: -Xms512m -Xmx512m
      kibana:
        mem_limit: "512mb"
    4gb:
      fluentd:
        mem_limit: "512mb"
      elasticsearch:
        mem_limit: "2gb"
        environment:
          ES_JAVA_OPTS: -Xms1g -Xmx1g
      kibana:
        mem_limit: "1gb"
    8gb:
      fluentd:
        mem_limit: "1gb"
      elasticsearch:
        mem_limit: "4gb"
        environment:
          ES_JAVA_OPTS: -Xms3g -Xmx3g
      kibana:
        mem_limit: "2gb"
    16gb:
      fluentd:
        mem_limit: "2gb"
      elasticsearch:
        mem_limit: "8gb"
        environment:
          ES_JAVA_OPTS: -Xms6g -Xmx6g
      kibana:
        mem_limit: "4gb"
    32gb:
      fluentd:
        mem_limit: "4gb"
      elasticsearch:
        mem_limit: "16gb"
        environment:
          ES_JAVA_OPTS: -Xms12g -Xmx12g
      kibana:
        mem_limit: "8gb"
  efk_run:
    general:
      orchestration: "compose"
      script_dir: "custom-pod/efk"
      script_env_file: "main.sh"
  efk_run_dynamic:
    general:
      orchestration: "compose"
      script_dir: "main/log/scripts"
      script_env_file: "efk.sh"
  main_compose_version: "2.4"
  main_containers_dict:
    nginx:
      wordpress:
        ssl: "{{ params.env_params.ssl | default(false) }}"
        port: "{{ params.env_params.ssl | default(false) | bool | ternary(443, 80) }}"
        external_port: >-
          {{ 
          params.env_params.local | default(false) | bool | 
          ternary(
          params.env_params.ssl | default(false) | bool | ternary(8443, 8080),
          params.env_params.ssl | default(false) | bool | ternary(443, 80)
          ) 
          }}
      phpmyadmin:
        ssl: "{{ params.env_params.ssl | default(false) }}"
        port: "{{ params.env_params.ssl | default(false) | bool | ternary(9443, 9080) }}"
    wordpress:
      env: >-
        {{ 
        params.env_params.local | default(false) | bool | 
        ternary('development', 'staging') 
        }}
      domain: "{{ params.env_params.wp_full_domain | default('') }}"
    phpmyadmin:
      domain: "{{ params.env_params.wp_full_domain | default('') }}"
    mysql:
      host: "mysql"
      port: "3306"
    fluentd:
      flush_interval: "1s"
    elasticsearch:
      port: "9200"
  main_default_logging_dict:
    log: "json"
    wp_efk: "fluentd"
    wp_app: "json"
  main_logging_dict:
    json:
      driver: "json-file"
      options:
        max-size: "50m"
    fluentd:
      driver: "fluentd"
      options:
        fluentd-address: "localhost:24224"
        tag: !unsafe "docker.{{.Name}}.{{.ID}}"
  main_managed_volumes_dict:
    mysql: {}
  main_networks_dict:
    log:
      driver: bridge
    internet:
      driver: "bridge"
    local:
      driver: "bridge"
      internal: true
  main_services_dict:
    composer:
      args:
        IMAGE: "lucasbasquerotto/wordpress"
        VERSION: "composer-1.8.6"
      working_dir: /var/www/html
    elasticsearch:
      args:
        IMAGE: "docker.elastic.co/elasticsearch/elasticsearch"
        VERSION: "7.5.0"
    fluentd:
      args:
        IMAGE: "lucasbasquerotto/wordpress"
        VERSION: "fluentd-1.7.4-01"
    kibana:
      args:
        IMAGE: "docker.elastic.co/kibana/kibana"
        VERSION: "7.5.0"
    mysql:
      args:
        IMAGE: "lucasbasquerotto/wordpress"
        VERSION: "mysql-8.0.16-02"
      environment:
        MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
        MYSQL_DATABASE: $DB_NAME
        MYSQL_USER: $DB_USER
        MYSQL_PASSWORD: $DB_PASSWORD
    nginx:
      args:
        IMAGE: "nginx"
        VERSION: "1.14.2-alpine"
    phpmyadmin:
      args:
        IMAGE: "phpmyadmin/phpmyadmin"
        VERSION: "4.8.5"
      environment:
        PMA_HOST: $DB_HOST
        PMA_PORT: $DB_PORT
    toolbox:
      args:
        IMAGE: "lucasbasquerotto/wordpress"
        VERSION: "toolbox-ubuntu-18.04-20190925"
      command: "tail -f /dev/null"
    wordpress:
      args:
        IMAGE: "lucasbasquerotto/wordpress"
        VERSION: "0.0.2"
        WORDPRESS_INI_FILE_TYPE: "development"
      environment:
        DB_HOST: $DB_HOST:$DB_PORT
        DB_NAME: $DB_NAME
        DB_USER: $DB_USER 
      extra_hosts:
      - "test1:1.1.1.1"
      - "test2:2.2.2.2"
    wordpress_local:
      args:
        IMAGE: "lucasbasquerotto/wordpress"
        VERSION: "0.0.2"
        WORDPRESS_INI_FILE_TYPE: development
      environment:
        DB_HOST: $DB_HOST:$DB_PORT
        DB_NAME: $DB_NAME
        DB_USER: $DB_USER
  main_services_data_dict:
    wp_s3_db:
      s3_cli: "awscli"
      s3_endpoint: "{{ params.env_params.wp_db_bucket.endpoint | default('') }}"
      bucket:
        access_key: "{{ params.credentials[params.env_params.wp_db_bucket.credentials | default('')].access_key | default('') }}"
        secret_key: "{{ params.credentials[params.env_params.wp_db_bucket.credentials | default('')].secret_key | default('') }}"
    wp_s3_uploads:
      s3_cli: "awscli"
      s3_endpoint: "{{ params.env_params.wp_uploads_bucket.endpoint | default('') }}"
      bucket:
        access_key: "{{ params.credentials[params.env_params.wp_uploads_bucket.credentials | default('')].access_key | default('') }}"
        secret_key: "{{ params.credentials[params.env_params.wp_uploads_bucket.credentials | default('')].secret_key | default('') }}"
  main_services_command_dict:
    composer: "tail -f /dev/null"
  main_services_depends_on_dict:
    nginx:
    - "wordpress"
    - "phpmyadmin"
    wordpress_app:
    - "mysql"
    phpmyadmin_app:
    - "mysql"
    fluentd_app:
    - "elasticsearch"
    kibana_app:
    - "elasticsearch"
    kibana_web:
    - "elasticsearch"
  main_services_environment_dict:
    elasticsearch:
      cluster.initial_master_nodes: elasticsearch
  main_services_logging_dict:
    elasticsearch: "json"
    fluentd: "json"
  main_services_networks_dict:
    nginx:
    - "internet"
    - "local"
    wordpress:
    - "internet"
    - "local"
    phpmyadmin:
    - "internet"
    - "local"
    phpmyadmin_app:
    - "local"
    mysql:
    - "internet"
    - "local"
    mysql_app:
    - "local"
    toolbox:
    - "internet"
    - "local"
    fluentd:
    - "log"
    elasticsearch:
    - "log"
    kibana:
    - "log"
  main_services_ports_dict:
    nginx:
    - "{{ params.env_params.local | default(false) | bool | ternary('8080:80', '80:80') }}"
    - "{{ params.env_params.local | default(false) | bool | ternary('8443:443', '443:443') }}"
    - "9080:9080"
    - "9443:9443"
    mysql_db:
    - "3306:3306"
    fluentd:
    - "24224:24224"
    - "24224:24224/udp"
    elasticsearch:
    - "9200:9200"
    kibana:
    - "5601:5601"
  main_services_volumes_dict:
    nginx:
    - "$DATA_DIR/tmp/nginx:/tmp/main/nginx"
    wordpress:
    - "$DATA_DIR/wordpress/uploads:/var/www/html/web/app/uploads"
    - "$DATA_DIR/tmp/wordpress:/tmp/main/wordpress"
    wordpress_local:
    - "$WP_APP_REPO_DIR:/var/www/html"
    - "$DATA_DIR/wordpress/uploads:/var/www/html/web/app/uploads"
    - "$DATA_DIR/tmp/wordpress:/tmp/main/wordpress"
    phpmyadmin:
    - "$DATA_DIR/tmp/phpmyadmin:/tmp/main/phpmyadmin"
    mysql:
    - "$DATA_DIR/mysql:/var/lib/mysql"
    - "$DATA_DIR/tmp/mysql:/tmp/main/mysql"
    mysql_local:
    - "mysql:/var/lib/mysql"
    - "$DATA_DIR/tmp/mysql:/tmp/main/mysql"
    composer:
    - "$WP_APP_REPO_DIR:/var/www/html"
    - "$DATA_DIR/tmp/composer:/tmp/main/composer"
    toolbox:
    - "$DATA_DIR:/var/main/data"
    - "$DATA_DIR/tmp:/tmp/main"
    elasticsearch:
    - "$DATA_DIR/elasticsearch:/usr/share/elasticsearch/data"
  main_services_ulimits_dict:
    elasticsearch:
      memlock:
        soft: -1
        hard: -1
  main_volumes_dict:
    test_local_1:
      rel_path: "test_local_1"
      mode: "0777"
    test_local_2:
      rel_path: "test_local_2"
      mode: "0777"
    test_remote_1:
      rel_path: "test_remote_1"
      mode: "0777"
    test_remote_2:
      rel_path: "test_remote_2"
      mode: "0777"
  wp_app_memory_dict:
    1gb:
      nginx:
        mem_limit: "128mb"
      wordpress:
        mem_limit: "128mb"
      phpmyadmin:
        mem_limit: "128mb"
      mysql:
        mem_limit: "512mb"
      toolbox:
        mem_limit: "128mb"
      composer:
        mem_limit: "128mb"
    2gb:
      nginx:
        mem_limit: "256mb"
      wordpress:
        mem_limit: "256mb"
      phpmyadmin:
        mem_limit: "256mb"
      mysql:
        mem_limit: "1gb"
      toolbox:
        mem_limit: "256mb"
      composer:
        mem_limit: "256mb"
    4gb:
      nginx:
        mem_limit: "512mb"
      wordpress:
        mem_limit: "512mb"
      phpmyadmin:
        mem_limit: "512mb"
      mysql:
        mem_limit: "1gb"
      toolbox:
        mem_limit: "512mb"
      composer:
        mem_limit: "512mb"
    8gb:
      nginx:
        mem_limit: "1gb"
      wordpress:
        mem_limit: "1gb"
      phpmyadmin:
        mem_limit: "1gb"
      mysql:
        mem_limit: "2gb"
      toolbox:
        mem_limit: "1gb"
      composer:
        mem_limit: "1gb"
    16gb:
      nginx:
        mem_limit: "2gb"
      wordpress:
        mem_limit: "2gb"
      phpmyadmin:
        mem_limit: "2gb"
      mysql:
        mem_limit: "4gb"
      toolbox:
        mem_limit: "2gb"
      composer:
        mem_limit: "2gb"
    32gb:
      nginx:
        mem_limit: "4gb"
      wordpress:
        mem_limit: "4gb"
      phpmyadmin:
        mem_limit: "4gb"
      mysql:
        mem_limit: "8gb"
      toolbox:
        mem_limit: "4gb"
      composer:
        mem_limit: "4gb"
  wp_db_memory_dict:
    1gb:
      mysql:
        mem_limit: "512mb"
      toolbox:
        mem_limit: "256mb"
    2gb:
      mysql:
        mem_limit: "1gb"
      toolbox:
        mem_limit: "512mb"
    4gb:
      mysql:
        mem_limit: "2gb"
      toolbox:
        mem_limit: "1gb"
    8gb:
      mysql:
        mem_limit: "4gb"
      toolbox:
        mem_limit: "2gb"
    16gb:
      mysql:
        mem_limit: "8gb"
      toolbox:
        mem_limit: "4gb"
    32gb:
      mysql:
        mem_limit: "16gb"
      toolbox:
        mem_limit: "8gb"
  wp_custom_args:
    mysql:
      host: "mysql"
      port: "3306"
    wordpress:
      app_name: "wp_local"
      env: >-
        {{ 
        params.env_params.local | default(false) | bool | 
        ternary('development', 'staging') 
        }}
      lang: "en_US"
  wp_custom_domain:
    main_domain: "{{ params.env_params.wp_full_domain | default('') }}"
    main_port: >-
      {{ 
      params.env_params.local | default(false) | bool | 
      ternary(
      params.env_params.ssl | default(false) | bool | ternary(8443, 8080),
      params.env_params.ssl | default(false) | bool | ternary(443, 80)
      ) 
      }}
    main_ssl: "{{ params.env_params.ssl | default(false) }}"
    pma_domain: "{{ params.env_params.wp_full_domain | default('') }}"
    pma_port: "{{ params.env_params.ssl | default(false) | bool | ternary(9443, 9080) }}"
    pma_ssl: "{{ params.env_params.ssl | default(false) }}"
  wp_custom_images:
    nginx_image: "nginx"
    nginx_version: "1.14.2-alpine"
    wordpress_image: "lucasbasquerotto/wordpress"
    wordpress_version: "0.0.2"
    pma_image: "phpmyadmin/phpmyadmin"
    pma_version: "4.8.5"
    mysql_image: "lucasbasquerotto/wordpress"
    mysql_version: "mysql-8.0.16-02"
    toolbox_image: "lucasbasquerotto/wordpress"
    toolbox_version: "toolbox-ubuntu-18.04-20190925"
    composer_image: "lucasbasquerotto/wordpress"
    composer_version: "composer-1.8.6"
    awscli_image: "lucasbasquerotto/aws-cli"
    awscli_version: "1.0.0"
  wp_custom_memory_app:
    nginx: 512mb
    wordpress: 512mb
    pma: 512mb
    mysql: 1gb
    toolbox: 512mb
    composer: 512mb
    s3_uploads: 512mb
    s3_db: 512mb
  wp_custom_memory_db:
    mysql: 1gb
    toolbox: 512mb
    s3_db: 512mb
  wp_custom_memory_web:
    nginx: 512mb
    wordpress: 512mb
    pma: 512mb
    toolbox: 512mb
    composer: 512mb
    s3_uploads: 512mb
  wp_custom_run_app:
    tasks: "tasks_app"
    general: "general"
    migrate: "migrate"
    setup_task_wp_uploads: "setup_task_wp_uploads"
    setup_verify_wp_uploads: "setup_verify_wp_uploads"
    setup_remote_wp_uploads: "setup_remote_wp_uploads_file"
    backup_task_wp_uploads: "backup_task_wp_uploads_static"
    backup_remote_wp_uploads: "backup_remote_wp_uploads_sync_dir"
    s3_wp_uploads: "s3_wp_uploads"
    setup_task_wp_db: "setup_task_wp_db_restore"
    setup_verify_wp_db: "setup_verify_wp_db"
    setup_remote_wp_db: "setup_remote_wp_db_file"
    setup_local_wp_db: "setup_local_wp_db"
    backup_task_wp_db: "backup_task_wp_db_static"
    backup_remote_wp_db: "backup_remote_wp_db_sync_dir"
    backup_local_wp_db: "backup_local_wp_db"
    db_wp_db: "db_wp_db"
    s3_wp_db: "s3_wp_db"
  wp_custom_run_db:
    tasks: "tasks_db"
    general: "general"
    migrate: "migrate"
    setup_task_wp_db: "setup_task_wp_db_restore"
    setup_verify_wp_db: "setup_verify_wp_db"
    setup_remote_wp_db: "setup_remote_wp_db_file"
    setup_local_wp_db: "setup_local_wp_db"
    backup_task_wp_db: "backup_task_wp_db_static"
    backup_remote_wp_db: "backup_remote_wp_db_sync_dir"
    backup_local_wp_db: "backup_local_wp_db"
    db_wp_db: "db_wp_db"
    s3_wp_db: "s3_wp_db"
  wp_custom_run_web:
    tasks: "tasks_web"
    general: "general"
    migrate: "migrate"
    setup_task_wp_uploads: "setup_task_wp_uploads"
    setup_verify_wp_uploads: "setup_verify_wp_uploads"
    setup_remote_wp_uploads: "setup_remote_wp_uploads_file"
    backup_task_wp_uploads: "backup_task_wp_uploads_static"
    backup_remote_wp_uploads: "backup_remote_wp_uploads_sync_dir"
    s3_wp_uploads: "s3_wp_uploads"
  wp_efk_app_memory_dict:
    2gb:
      fluentd:
        mem_limit: "128mb"
      elasticsearch:
        mem_limit: "512mb"
        environment:
          ES_JAVA_OPTS: -Xms256m -Xmx256m
      kibana:
        mem_limit: "256mb"
      nginx:
        mem_limit: "128mb"
      wordpress:
        mem_limit: "128mb"
      phpmyadmin:
        mem_limit: "128mb"
      mysql:
        mem_limit: "256mb"
      toolbox:
        mem_limit: "128mb"
      composer:
        mem_limit: "128mb"
    4gb:
      fluentd:
        mem_limit: "256mb"
      elasticsearch:
        mem_limit: "1gb"
        environment:
          ES_JAVA_OPTS: -Xms512m -Xmx512m
      kibana:
        mem_limit: "512mb"
      nginx:
        mem_limit: "256mb"
      wordpress:
        mem_limit: "256mb"
      phpmyadmin:
        mem_limit: "256mb"
      mysql:
        mem_limit: "512mb"
      toolbox:
        mem_limit: "256mb"
      composer:
        mem_limit: "256mb"
    8gb:
      fluentd:
        mem_limit: "512mb"
      elasticsearch:
        mem_limit: "2gb"
        environment:
          ES_JAVA_OPTS: -Xms1g -Xmx1g
      kibana:
        mem_limit: "1gb"
      nginx:
        mem_limit: "512mb"
      wordpress:
        mem_limit: "512mb"
      phpmyadmin:
        mem_limit: "512mb"
      mysql:
        mem_limit: "1gb"
      toolbox:
        mem_limit: "512mb"
      composer:
        mem_limit: "512mb"
    16gb:
      fluentd:
        mem_limit: "1gb"
      elasticsearch:
        mem_limit: "4gb"
        environment:
          ES_JAVA_OPTS: -Xms3g -Xmx3g
      kibana:
        mem_limit: "2gb"
      nginx:
        mem_limit: "1gb"
      wordpress:
        mem_limit: "1gb"
      phpmyadmin:
        mem_limit: "1gb"
      mysql:
        mem_limit: "2gb"
      toolbox:
        mem_limit: "1gb"
      composer:
        mem_limit: "1gb"
    32gb:
      fluentd:
        mem_limit: "2gb"
      elasticsearch:
        mem_limit: "8gb"
        environment:
          ES_JAVA_OPTS: -Xms6g -Xmx6g
      kibana:
        mem_limit: "4gb"
      nginx:
        mem_limit: "2gb"
      wordpress:
        mem_limit: "2gb"
      phpmyadmin:
        mem_limit: "2gb"
      mysql:
        mem_limit: "4gb"
      toolbox:
        mem_limit: "2gb"
      composer:
        mem_limit: "2gb"
  wp_meta:
    use_run_dict: true
  wp_run_dynamic_app:
    tasks: "tasks_app"
    general: "general_dynamic"
    migrate: "migrate"
    setup_task_wp_uploads: "setup_task_wp_uploads"
    setup_verify_wp_uploads: "setup_verify_wp_uploads"
    setup_remote_wp_uploads: "setup_remote_wp_uploads_file"
    backup_task_wp_uploads: "backup_task_wp_uploads_static"
    backup_remote_wp_uploads: "backup_remote_wp_uploads_sync_dir"
    s3_wp_uploads: "s3_wp_uploads"
    setup_task_wp_db: "setup_task_wp_db_restore"
    setup_verify_wp_db: "setup_verify_wp_db"
    setup_remote_wp_db: "setup_remote_wp_db_file"
    setup_local_wp_db: "setup_local_wp_db"
    backup_task_wp_db: "backup_task_wp_db_static"
    backup_remote_wp_db: "backup_remote_wp_db_sync_dir"
    backup_local_wp_db: "backup_local_wp_db"
    db_wp_db: "db_wp_db"
    s3_wp_db: "s3_wp_db"
  wp_run_dynamic_db:
    tasks: "tasks_db"
    general: "general_dynamic"
    migrate: "migrate"
    setup_task_wp_db: "setup_task_wp_db_restore"
    setup_verify_wp_db: "setup_verify_wp_db"
    setup_remote_wp_db: "setup_remote_wp_db_file"
    setup_local_wp_db: "setup_local_wp_db"
    backup_task_wp_db: "backup_task_wp_db_static"
    backup_remote_wp_db: "backup_remote_wp_db_sync_dir"
    backup_local_wp_db: "backup_local_wp_db"
    db_wp_db: "db_wp_db"
    s3_wp_db: "s3_wp_db"
  wp_run_dynamic_web:
    tasks: "tasks_web"
    general: "general_dynamic"
    migrate: "migrate"
    setup_task_wp_uploads: "setup_task_wp_uploads"
    setup_verify_wp_uploads: "setup_verify_wp_uploads"
    setup_remote_wp_uploads: "setup_remote_wp_uploads_file"
    backup_task_wp_uploads: "backup_task_wp_uploads_static"
    backup_remote_wp_uploads: "backup_remote_wp_uploads_sync_dir"
    s3_wp_uploads: "s3_wp_uploads"
  wp_run_setup_remote_backup_sync:
    tasks: "tasks_app"
    general: "general_dynamic"
    migrate: "migrate"
    setup_task_wp_uploads: "setup_task_wp_uploads"
    setup_verify_wp_uploads: "setup_verify_wp_uploads"
    setup_remote_wp_uploads: "setup_remote_wp_uploads_file"
    backup_task_wp_uploads: "backup_task_wp_uploads_static"
    backup_remote_wp_uploads: "backup_remote_wp_uploads_sync_dir"
    s3_wp_uploads: "s3_wp_uploads"
    setup_task_wp_db: "setup_task_wp_db_restore"
    setup_verify_wp_db: "setup_verify_wp_db"
    setup_remote_wp_db: "setup_remote_wp_db_file"
    setup_local_wp_db: "setup_local_wp_db"
    backup_task_wp_db: "backup_task_wp_db_static"
    backup_remote_wp_db: "backup_remote_wp_db_sync_dir"
    backup_local_wp_db: "backup_local_wp_db"
    db_wp_db: "db_wp_db"
    s3_wp_db: "s3_wp_db"
  wp_run_setup_bucket_dir_backup_no_sync:
    tasks: "tasks_app"
    general: "general_dynamic"
    migrate: "migrate"
    setup_task_wp_uploads: "setup_task_wp_uploads"
    setup_verify_wp_uploads: "setup_verify_wp_uploads"
    setup_remote_wp_uploads: "setup_remote_wp_uploads_bucket_path_dir"
    backup_task_wp_uploads: "backup_task_wp_uploads_static"
    backup_remote_wp_uploads: "backup_remote_wp_uploads_no_sync"
    s3_wp_uploads: "s3_wp_uploads"
    setup_task_wp_db: "setup_task_wp_db_restore"
    setup_verify_wp_db: "setup_verify_wp_db"
    setup_remote_wp_db: "setup_remote_wp_db_bucket_path_dir"
    setup_local_wp_db: "setup_local_wp_db"
    backup_task_wp_db: "backup_task_wp_db_static"
    backup_remote_wp_db: "backup_remote_wp_db_no_sync"
    backup_local_wp_db: "backup_local_wp_db"
    db_wp_db: "db_wp_db"
    s3_wp_db: "s3_wp_db"
  wp_run_setup_bucket_file_backup_sync:
    tasks: "tasks_app"
    general: "general_dynamic"
    migrate: "migrate"
    setup_task_wp_uploads: "setup_task_wp_uploads"
    setup_verify_wp_uploads: "setup_verify_wp_uploads"
    setup_remote_wp_uploads: "setup_remote_wp_uploads_bucket_path_file"
    backup_task_wp_uploads: "backup_task_wp_uploads_static"
    backup_remote_wp_uploads: "backup_remote_wp_uploads_sync_dir_2"
    s3_wp_uploads: "s3_wp_uploads"
    setup_task_wp_db: "setup_task_wp_db_restore"
    setup_verify_wp_db: "setup_verify_wp_db"
    setup_remote_wp_db: "setup_remote_wp_db_bucket_path_file"
    setup_local_wp_db: "setup_local_wp_db"
    backup_task_wp_db: "backup_task_wp_db_static"
    backup_remote_wp_db: "backup_remote_wp_db_sync_dir_2"
    backup_local_wp_db: "backup_local_wp_db"
    db_wp_db: "db_wp_db"
    s3_wp_db: "s3_wp_db"
  wp_run_dict:
    tasks_app:
      backup: "backup:task:wp_db,backup:task:wp_uploads" 
      setup: "setup:task:wp_uploads,setup:task:wp_db" 
    tasks_db:
      backup: "backup:task:wp_db" 
      setup: "setup:task:wp_db" 
    tasks_web:
      backup: "backup:task:wp_uploads" 
      setup: "setup:task:wp_uploads" 
    general:
      backup_delete_old_days: 3
      backup_local_base_dir: "/tmp/main/backup"
      orchestration: "compose"
      script_dir: "custom-pod/wordpress/scripts"
      script_env_file: >-
        {{ params.env_params.local | default(false) | bool | ternary('local.sh', 'remote.sh') }}
      toolbox_service: "toolbox"
    general_dynamic:
      backup_delete_old_days: 3
      backup_local_base_dir: "/tmp/main/backup"
      orchestration: "compose"
      script_dir: "main/wordpress/scripts"
      script_env_file: >-
        {{ params.env_params.local | default(false) | bool | ternary('local.sh', 'remote.sh') }}
      toolbox_service: "toolbox"
    migrate:
      url: >-
        {{ params.env_params.ssl | default(false) | bool | ternary('https', 'http') 
        }}://{{ params.env_params.wp_full_domain | default('') }}
      title: "{{ params.env_params.wp_title | default('No Title :/') }}"
      admin_user: "{{ params.credentials.wordpress.setup.admin_user | default('') }}"
      admin_password: "{{ params.credentials.wordpress.setup.admin_password | default('') }}"
      admin_email: "{{ params.credentials.wordpress.setup.admin_email | default('') }}"
      restore_seed: true
      remote_seed_data: "https://gist.githubusercontent.com/lucasbasquerotto/667447640482369d0c6b093ee7200c96/raw/9d9d446b9f1017aa4bc12628aea954f1f10f020c/wordpress-theme-unit-test-data.xml"
      old_domain_host: "{{ params.env_params.wp_old_domain_host | default('') }}"
      new_domain_host: "{{ params.env_params.wp_new_domain_host | default('') }}"
    s3_wp_uploads:
      endpoint: "{{ params.env_params.wp_uploads_bucket.endpoint | default('') }}"
      bucket_name: "{{ params.env_params.wp_uploads_bucket.name | default('') }}"
      bucket_path: "{{ params.env_params.wp_uploads_bucket.path | default('') }}"
      service: "wp_s3_uploads"
      cli: "awscli"
      cli_cmd: "run"
    setup_task_wp_uploads:
      task_name_verify: "setup:verify:default:wp_uploads"
      task_name_remote: "setup:remote:default:wp_uploads"
      setup_dest_base_dir: "/var/main/data/wordpress/uploads"
    setup_verify_wp_uploads:
      setup_dest_dir_to_verify: "/var/main/data/wordpress/uploads"
    setup_remote_wp_uploads_file:
      task_kind: "dir"
      restore_tmp_dir: "/tmp/main/restore/wordpress/uploads"
      restore_remote_file: "https://github.com/lucasbasquerotto/my-projects/blob/master/wp/backup-uploads-20190917_195406-1568760846.zip?raw=true"
      restore_is_zip_file: "true"
      restore_zip_pass: "{{ params.credentials.wp_uploads_zip_file_pass | default('') }}"
      restore_zip_inner_dir: "uploads"
    setup_remote_wp_uploads_bucket_path_file:
      task_kind: "dir"
      task_name_s3: "s3:task:wp_uploads"
      restore_tmp_dir: "/tmp/main/restore/wordpress/uploads"
      restore_remote_bucket_path_file: "wp-static/wp-uploads.zip"
      restore_is_zip_file: "true"
      restore_zip_pass: "{{ params.credentials.wp_uploads_zip_file_pass | default('') }}"
      restore_zip_inner_dir: "uploads"
    setup_remote_wp_uploads_bucket_path_dir:
      task_kind: "dir"
      task_name_s3: "s3:task:wp_uploads"
      restore_tmp_dir: "/tmp/main/restore/wordpress/uploads"
      restore_remote_bucket_path_dir: "uploads"
    backup_task_wp_uploads_static:
      task_name_remote: "backup:remote:default:wp_uploads"
      backup_src_base_dir: "/var/main/data/wordpress"
      backup_local_static_dir:  "/tmp/main/backup/static"
    backup_task_wp_uploads_dynamic:
      task_name_remote: "backup:remote:default:wp_uploads"
      backup_src_base_dir: "/var/main/data/wordpress"
    backup_remote_wp_uploads_no_sync:
      task_kind: "dir"
      task_name_s3: "s3:task:wp_uploads"
      backup_src_dir: "uploads"
      backup_bucket_static_dir: "wp-static"
      backup_zip_file: "wp-uploads.zip"
    backup_remote_wp_uploads_sync_dir:
      task_kind: "dir"
      task_name_s3: "s3:task:wp_uploads"
      backup_src_dir: "uploads"
      backup_bucket_sync_dir: "uploads"
    backup_remote_wp_uploads_sync_dir_2:
      task_kind: "dir"
      task_name_s3: "s3:task:wp_uploads"
      backup_src_dir: "uploads"
      backup_bucket_sync_dir: "uploads2"
    setup_task_wp_db_new_db:
      setup_run_new_task: "true"
      task_name_new: "setup:new:wp_db"
    setup_task_wp_db_restore:
      task_name_verify: "setup:verify:db:wp_db"
      task_name_remote: "setup:remote:default:wp_db"
      task_name_local: "setup:local:db:wp_db"
      setup_dest_base_dir: "/tmp/main/mysql/restore"
    setup_verify_wp_db:
      db_task_name: "restore:verify:mysql"
    setup_remote_wp_db_file:
      task_kind: "file"
      restore_dest_file: "{{ params.credentials.wordpress.db.name | default('') }}.sql"
      restore_tmp_dir: "/tmp/main/restore/mysql"
      restore_remote_file: "https://github.com/lucasbasquerotto/my-projects/blob/master/wp/backup-db-20190917_195406-1568760846.zip?raw=true" 
      restore_is_zip_file: "true"
      restore_zip_pass: "{{ params.credentials.wp_db_zip_file_pass | default('') }}"
      restore_zip_inner_file: "{{ params.credentials.wordpress.db.name | default('') }}.sql"
    setup_remote_wp_db_bucket_path_file: 
      task_kind: "file"
      task_name_s3: "s3:task:wp_db"
      restore_dest_file: "{{ params.credentials.wordpress.db.name | default('') }}.sql"
      restore_tmp_dir: "/tmp/main/restore/mysql"
      restore_remote_bucket_path_file: "wp-static/wp-db.zip"
      restore_is_zip_file: "true"
      restore_zip_pass: "{{ params.credentials.wp_db_zip_file_pass | default('') }}"
      restore_zip_inner_file: "{{ params.credentials.wordpress.db.name | default('') }}.sql"
    setup_remote_wp_db_bucket_path_dir: 
      task_kind: "file"
      task_name_s3: "s3:task:wp_db"
      restore_dest_file: "{{ params.credentials.wordpress.db.name | default('') }}.sql"
      restore_tmp_dir: "/tmp/main/restore/mysql"
      restore_remote_bucket_path_dir: "db"
    setup_local_wp_db:
      db_task_name: "restore:file:mysql"
      db_sql_file_name: "{{ params.credentials.wordpress.db.name | default('') }}.sql"
    backup_task_wp_db_static:
      task_name_local: "backup:local:db:wp_db"
      task_name_remote: "backup:remote:default:wp_db"
      backup_src_base_dir: "/tmp/main/mysql/backup"
      backup_local_static_dir:  "/tmp/main/backup/static"
    backup_task_wp_db_dynamic:
      task_name_local: "backup:local:db:wp_db"
      task_name_remote: "backup:remote:default:wp_db"
      backup_src_base_dir: "/tmp/main/mysql/backup"
    backup_remote_wp_db_no_sync:
      task_kind: "file"
      task_name_s3: "s3:task:wp_db"
      backup_src_file: "{{ params.credentials.wordpress.db.name | default('') }}.sql"
      backup_bucket_static_dir: "wp-static"
      backup_zip_file: "wp-db.zip"
    backup_remote_wp_db_sync_dir:
      task_kind: "file"
      task_name_s3: "s3:task:wp_db"
      backup_src_file: "{{ params.credentials.wordpress.db.name | default('') }}.sql"
      backup_bucket_sync_dir: "db"   
    backup_remote_wp_db_sync_dir_2:
      task_kind: "file"
      task_name_s3: "s3:task:wp_db"
      backup_src_file: "{{ params.credentials.wordpress.db.name | default('') }}.sql"
      backup_bucket_sync_dir: "db2"   
    backup_local_wp_db:
      db_task_name: "backup:file:mysql"
      db_sql_file_name: "{{ params.credentials.wordpress.db.name | default('') }}.sql"
    db_wp_db:
      db_service: "mysql"
      db_name: "{{ params.credentials.wordpress.db.name | default('') }}"
      db_user: "{{ params.credentials.wordpress.db.user | default('') }}"
      db_pass: "{{ params.credentials.wordpress.db.password | default('') }}"
      db_connect_wait_secs: 90
    s3_wp_db:
      endpoint: "{{ params.env_params.wp_db_bucket.endpoint | default('') }}"
      bucket_name: "{{ params.env_params.wp_db_bucket.name | default('') }}"
      bucket_path: "{{ params.env_params.wp_db_bucket.path | default('') }}"
      service: "wp_s3_db"
      cli: "awscli"
      cli_cmd: "run"
  wp_web_memory_dict:
    1gb:
      nginx:
        mem_limit: "128mb"
      wordpress:
        mem_limit: "512mb"
      phpmyadmin:
        mem_limit: "128mb"
      toolbox:
        mem_limit: "128mb"
      composer:
        mem_limit: "128mb"
    2gb:
      nginx:
        mem_limit: "512mb"
      wordpress:
        mem_limit: "1gb"
      phpmyadmin:
        mem_limit: "512mb"
      toolbox:
        mem_limit: "512mb"
      composer:
        mem_limit: "512mb"
    4gb:
      nginx:
        mem_limit: "1gb"
      wordpress:
        mem_limit: "2gb"
      phpmyadmin:
        mem_limit: "1gb"
      toolbox:
        mem_limit: "1gb"
      composer:
        mem_limit: "1gb"
    8gb:
      nginx:
        mem_limit: "2gb"
      wordpress:
        mem_limit: "4gb"
      phpmyadmin:
        mem_limit: "2gb"
      toolbox:
        mem_limit: "2gb"
      composer:
        mem_limit: "2gb"
    16gb:
      nginx:
        mem_limit: "4gb"
      wordpress:
        mem_limit: "8gb"
      phpmyadmin:
        mem_limit: "4gb"
      toolbox:
        mem_limit: "4gb"
      composer:
        mem_limit: "4gb"
    32gb:
      nginx:
        mem_limit: "8gb"
      wordpress:
        mem_limit: "16gb"
      phpmyadmin:
        mem_limit: "8gb"
      toolbox:
        mem_limit: "8gb"
      composer:
        mem_limit: "8gb"
apps:
  wp_local:
    repo: "app"
run_stages:
  default: ["default_prepare_nodes", "default_build_pods", "default_upgrade_pods"]
  nodes: ["default_prepare_nodes"]
  build: ["default_build_pods"]
  pods: ["default_upgrade_pods"]
  backup: ["default_backup_pods"]
  wait: ["default_wait_pods"]
  clear: ["default_clear_pods"]
  all_local_stop: ["all_local_stop"]
  all_local_upgrade: ["all_local_upgrade"]
  efk_external_upgrade: ["efk_external_upgrade"]
  wp_efk_app_efk: ["wp_efk_app_wp_stop", "wp_efk_app_efk_upgrade"]
  wp_efk_app_wp: ["wp_efk_app_wp_upgrade"]
  wp_efk_nodes_prepare: ["wp_web_stop"]
  wp_db_upgrade: ["wp_db_upgrade"]
  wp_web_upgrade: ["wp_web_upgrade"]
run_stage_tasks:
  default_prepare_nodes:
    task_tag: "prepare"
    nodes_tasks: true
    all_nodes: true
  default_build_pods:
    task_tag: "build"
    pods_tasks: true
    all_nodes: true
  default_upgrade_pods:
    task_tag: "upgrade"
    pods_tasks: true
    all_nodes: true
  default_backup_pods:
    task_tag: "backup"
    pods_tasks: true
    all_nodes: true
  default_wait_pods:
    task_tag: "wait"
    pods_tasks: true
    all_nodes: true
  default_clear_pods:
    task_tag: "clear_all"
    pods_tasks: true
    all_nodes: true
  all_local_stop:
    task_tag: "stop_to_upgrade"
    pods_tasks: true
    partial_pods: true
    nodes: ["wp_efk_app_efk", "wp_efk_app_wp"]
  all_local_upgrade:
    task_tag: "upgrade"
    pods_tasks: true
    nodes: ["efk_local", "wp_web", "wp_db"]
  efk_external_upgrade:
    task_tag: "upgrade"
    pods_tasks: true
    nodes: ["efk_external"]
  wp_efk_app_wp_stop:
    task_tag: "stop_to_upgrade"
    pods_tasks: true
    partial_pods: true
    nodes: ["wp_efk_app_wp"]
  wp_efk_app_efk_upgrade: 
    task_tag: "upgrade"
    pods_tasks: true
    partial_pods: true
    nodes: ["wp_efk_app_efk"]
  wp_efk_app_wp_upgrade:
    task_tag: "upgrade"
    pods_tasks: true
    partial_pods: true
    nodes: ["wp_efk_app_wp"]
  wp_web_stop:
    task_tag: "stop_to_upgrade"
    pods_tasks: true
    nodes: ["wp_web"]
  wp_db_upgrade:
    task_tag: "upgrade"
    pods_tasks: true
    nodes: ["wp_db"]
  wp_web_upgrade:
    task_tag: "upgrade"
    pods_tasks: true
    nodes: ["wp_web"]
run_stage_node_pods:
  wp_efk_app_efk: 
    node: "wp_efk_app"
    pods: 
    - >-
      {{ 
      params.env_params.dynamic | default(false) | bool | 
      ternary('efk_dynamic', 'efk')
      }}
  wp_efk_app_wp: 
    node: "wp_efk_app"
    pods:
    - >- 
      {{ 
      params.env_params.dynamic | default(false) | bool | 
      ternary('wp_app_dynamic', 'wp_app')
      }}
tasks_groups:
  node_prepare:
    prepare: "docker_compose_install"
  pod_wp:
    build: "main_build"
    upgrade: "main_upgrade"
    stop_to_upgrade: "main_stop_to_upgrade"
    backup: "main_backup"
    wait: "main_wait"
    clear_all: "main_clear_all"
  pod_efk:
    build: "main_build"
    upgrade: "main_upgrade"
    stop_to_upgrade: "skip"
    backup: "skip"
    wait: "main_wait"
tasks:
  skip:
    type: "skip"
  docker_compose_install:
    type: "task"
    root: "true"
    file: "docker.yml"
    compose_params:
      version: "1.25.3"
      remote: true
  main_build: 
    type: "shell"
    root: "true"
    cmd: "./run build"
  main_upgrade:
    type: "shell"
    root: "true"
    cmd: "./run upgrade"
  main_stop_to_upgrade:
    type: "shell"
    root: "true"
    cmd: "./run stop-to-upgrade"
  main_backup:
    type: "shell"
    root: "true"
    cmd: "./run backup"
  main_wait:
    type: "shell"
    root: "true"
    cmd: "sleep {{ params.env_params.wait | default('60') }}"
  main_clear_all:
    type: "shell"
    root: "true"
    cmd: "./run clear-all"
repos:
  cloud:
    src: "https://github.com/lucasbasquerotto/cloud.git"
    version: "master"
  custom_cloud:
    src: "https://github.com/lucasbasquerotto/custom-cloud.git"
    version: "master"
  pod:
    src: "https://github.com/lucasbasquerotto/pod.git"
    version: "master"
  custom_pod:
    src: "https://github.com/lucasbasquerotto/custom-pod.git"
    version: "master"
  app:
    src: "https://github.com/lucasbasquerotto/app.git"
    version: "master"
destroy: 
  custom: "{{ params.env_params.destroy[params.env_params.ctx] | default({}) }}"
  all_local: {}
  efk_local: {}
  wp_local: {}
  efk: 
    clouds:
    - "{{ params.env_params.cloud_name }}"
    nodes:
    - "efk"
  wp: 
    clouds:
    - "{{ params.env_params.cloud_name }}"
    buckets:
    - "wp_uploads"
    - "wp_db"
    nodes:
    - "wp_app"
  wp_remote_test_setup_remote_backup_sync:
    clouds:
    - "{{ params.env_params.cloud_name }}"
    buckets:
    - "wp_uploads"
    - "wp_db"
    nodes:
    - "wp_remote_test_setup_remote_backup_sync"
  wp_remote_test_setup_bucket_dir_backup_no_sync:
    clouds:
    - "{{ params.env_params.cloud_name }}"
    buckets:
    - "wp_uploads"
    - "wp_db"
    nodes:
    - "wp_remote_test_setup_bucket_dir_backup_no_sync"
  wp_remote_test_setup_bucket_file_backup_sync:
    clouds:
    - "{{ params.env_params.cloud_name }}"
    buckets:
    - "wp_uploads"
    - "wp_db"
    nodes:
    - "wp_remote_test_setup_bucket_file_backup_sync"
  wp_efk: 
    clouds:
    - "{{ params.env_params.cloud_name }}"
    buckets:
    - "wp_uploads"
    - "wp_db"
    nodes:
    - "wp_efk_app"
  wp_efk_nodes: 
    clouds:
    - "{{ params.env_params.cloud_name }}"
    buckets:
    - "wp_uploads"
    - "wp_db"
    nodes:
    - "efk_external"
    - "wp_db"
    - "wp_web"
credentials: "{{ params.credentials | default({}) }}"
