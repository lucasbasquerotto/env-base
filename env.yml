name: "{{ params.name }}"
ctx: "{{ params.ctx }}"
init:
  custom: "{{ params.env_params.init[params.env_params.ctx] | default({}) }}"
  all_local:
    repo: "cloud"
    hosts_content: |
      [main]
      localhost ansible_connection=local
      [host]
  efk_local:
    repo: "cloud"
    hosts_content: |
      [main]
      localhost ansible_connection=local
      [host]
  wp_local:
    repo: "cloud"
    hosts_content: |
      [main]
      localhost ansible_connection=local
      [host]
  efk: 
    repo: "cloud"
    hosts_file: "files/hosts/dev.hosts"
  wp: 
    repo: "cloud"
    hosts_file: "files/hosts/dev.hosts"
  wp_efk: 
    repo: "cloud"
    hosts_file: "files/hosts/dev.hosts"
  wp_efk_nodes: 
    repo: "cloud"
    hosts_file: "files/hosts/dev.hosts"
main: 
  custom: "{{ params.env_params.main[params.env_params.ctx] | default({}) }}"
  all_local:
    clouds:
    - "local"
    nodes:
    - "efk_local"
    - "efk"
    - "wp_local"
    - "wp_app"
    - "wp_efk_app"
    - "wp_db"
    - "wp_web"
    local:
      pods:
      - "efk"
      - "wp_app_local"
      - "wp_app"
      - "wp_db"
      - "wp_web"
      apps:
      - "wp_local"
  efk_local:
    clouds:
    - "local"
    nodes:
    - "efk_local"
    local:
      pods:
      - "efk"
  wp_local:
    clouds:
    - "local"
    nodes:
    - "wp_local"
    local:
      pods:
      - "wp_app_local"
      apps:
      - "wp_local"
  efk: 
    clouds:
    - "{{ params.env_params.cloud_name }}"
    nodes:
    - "efk"
  wp: 
    clouds:
    - "{{ params.env_params.cloud_name }}"
    buckets:
    - "wp_backup"
    nodes:
    - "wp_app"
  wp_efk: 
    clouds:
    - "{{ params.env_params.cloud_name }}"
    buckets:
    - "wp_backup"
    nodes:
    - "wp_efk_app"
  wp_efk_nodes: 
    clouds:
    - "{{ params.env_params.cloud_name }}"
    buckets:
    - "wp_backup"
    nodes:
    - "efk"
    - "wp_db"
    - "wp_web"
clouds:
  local:
    type: "local"
  do:
    type: "digital_ocean"
    credentials: "digital_ocean"
    params:
      digital_ocean_tags:
      - "auto"
      - "dmz"
      - "mysql"
      - "kibana"
      digital_ocean_firewalls:
      - "auto"
      - "dmz"
      - "mysql"
      - "kibana"
    shared_params: "digital_ocean"
cloud_shared_params: 
  digital_ocean:  
    digital_ocean_firewalls_dict: "do_firewalls_dict"
cloud_params:   
  do_firewalls_dict:
    auto:
      name: "auto"
      tags: ["auto"]
      inbound_rules:
      - ports: "22"
        sources:
          tags: ["main"]
      outbound_rules:
      - protocol: "tcp"
        ports: "1-65535"
        destinations:
          addresses: ["0.0.0.0/0", "::/0"]
      - protocol: "udp"
        ports: "1-65535"
        destinations:
          addresses: ["0.0.0.0/0", "::/0"]
      - protocol: "icmp"
        ports: "1-65535"
        destinations:
          addresses: ["0.0.0.0/0", "::/0"]
    dmz:
      name: "dmz"
      tags: ["dmz"]
      inbound_rules:
      - ports: "80"
        sources:
          addresses: ["0.0.0.0/0", "::/0"]
      - ports: "443"
        sources:
          addresses: ["0.0.0.0/0", "::/0"]
    mysql:
      name: "mysql"
      tags: ["mysql"]
      inbound_rules:
      - ports: "3306"
        sources:
          tags: ["web"]
    kibana:
      name: "kibana"
      tags: ["kibana"]
      inbound_rules:
      - ports: "5601"
        sources:
          addresses: ["0.0.0.0/0", "::/0"]
dns:
  cloudflare: 
    type: "cloudflare"
    zone: "{{ params.env_params.domain }}"
    credentials: "cloudflare"
buckets: 
  wp_backup:
    name: "{{ params.env_params.wp_backup_bucket.name }}"
    endpoint: "{{ params.env_params.wp_backup_bucket.endpoint }}"
    credentials: "{{ params.env_params.wp_backup_bucket.credentials }}"
nodes:
  efk_local:
    cloud: "local"
    base_dir: "/var/cloud"
    credentials: "user"
    main_pod: "efk"
    params: 
      size: "{{ params.env_params.node_size | default('small') }}"
      cron: 
      - "local"
    shared_params: "main"
  wp_local:
    cloud: "local"
    base_dir: "/var/cloud"
    credentials: "user"
    main_pod: "wp_app_local"
    params: 
      size: "{{ params.env_params.node_size | default('micro') }}"
      cron: 
      - "local"
    shared_params: "main"
  efk:
    cloud: "{{ params.env_params.cloud_name }}"
    amount: 1
    max_amount: 1
    base_dir: "/var/cloud"
    credentials: "{{ params.env_params.local | default(false) | bool | ternary('localhost', 'host') }}"
    main_pod: "efk"
    params: 
      instance: "ubuntu"
      region: "default"
      size: "small"
      host_test: "default"
      dns:
      - "log"
      digital_ocean_tags:
      - "auto"
      - "kibana"
    shared_params: "main"
  wp_app:
    cloud: "{{ params.env_params.cloud_name }}"
    amount: 1
    max_amount: 1
    base_dir: "/var/cloud"
    credentials: "{{ params.env_params.local | default(false) | bool | ternary('localhost', 'host') }}"
    main_pod: "wp_app"
    params: 
      instance: "ubuntu"
      region: "default"
      size: "micro"
      host_test: "default"
      cron: 
      - "app"
      dns:
      - "blog"
      digital_ocean_tags:
      - "auto"
      - "dmz"
    shared_params: "main"
  wp_efk_app:
    cloud: "{{ params.env_params.cloud_name }}"
    amount: 1
    max_amount: 1
    base_dir: "/var/cloud"
    credentials: "{{ params.env_params.local | default(false) | bool | ternary('localhost', 'host') }}"
    main_pod: "wp_app"
    pods:
    - "efk"
    - "wp_app"
    params: 
      instance: "ubuntu"
      region: "default"
      size: "medium"
      host_test: "default"
      cron: 
      - "app"
      dns:
      - "blog"
      digital_ocean_tags:
      - "auto"
      - "dmz"
      - "kibana"
      pod_override_params:
        wp_app:
          default_logging: "wp_efk"
      pod_override_shared_params:
        efk: "wp_efk_app_pods"
        wp_app: "wp_efk_app_pods"
    shared_params: "main"
  wp_db:
    cloud: "{{ params.env_params.cloud_name }}"
    amount: 1
    max_amount: 1
    base_dir: "/var/cloud"
    credentials: "{{ params.env_params.local | default(false) | bool | ternary('localhost', 'host') }}"
    main_pod: "wp_db"
    params: 
      instance: "ubuntu"
      region: "default"
      size: "micro"
      host_test: "default"
      cron: 
      - "app"
      digital_ocean_tags:
      - "auto"
      - "mysql"
    shared_params: "main"
  wp_web:
    cloud: "{{ params.env_params.cloud_name }}"
    amount: 1
    max_amount: 1
    base_dir: "/var/cloud"
    credentials: "{{ params.env_params.local | default(false) | bool | ternary('localhost', 'host') }}"
    main_pod: "wp_web"
    params: 
      instance: "ubuntu"
      region: "default"
      size: "micro"
      host_test: "default"
      cron: 
      - "app"
      dns:
      - "blog"
      digital_ocean_tags:
      - "auto"
      - "dmz"
    shared_params: "main"
node_shared_params:
  main:
    cloud_instance_dict: "main_cloud_instance_dict"
    cloud_region_dict: "main_cloud_region_dict"
    cloud_size_dict: "main_cloud_size_dict"
    host_test_dict: "main_host_test_dict"
    cron_dict: "main_cron_dict"
    dns_dict: "main_dns_dict"
node_params:
  main_cloud_instance_dict:
    digital_ocean:
      ubuntu:
        image: "ubuntu-18-04-x64"
        user_data_file: "templates/ubuntu-18.04.j2.sh"
        ipv6: "yes"
  main_cloud_region_dict:
    digital_ocean:
      default:
        name: "nyc3"
  main_cloud_size_dict:
    local:
      micro:
        memory: "1gb"
        cpu: 1
      small:
        memory: "2gb"
        cpu: 2
      medium:
        memory: "4gb"
        cpu: 4
      large:
        memory: "8gb"
        cpu: 8
      xlarge:
        memory: "16gb"
        cpu: 16
      x2large:
        memory: "32gb"
        cpu: 32
      x4large:
        memory: "64gb"
        cpu: 64
    digital_ocean:
      micro:
        name: "1gb"
        memory: "1gb"
        cpu: 1
      small:
        name: "2gb"
        memory: "2gb"
        cpu: 2
      medium:
        name: "4gb"
        memory: "4gb"
        cpu: 2
  main_host_test_dict:
    default:
      log_file: "/var/log/setup.log"
      setup_last_line: "Setup Finished"
      initial_connection_timeout: 90
      setup_finished_timeout: 300
  main_cron_dict: 
    app:
      user: "root"
      src_file: "files/cron/app.cron"
      dest_dir: "/var/spool/cron/crontabs"
    local: 
      user: "root"
      src_file: "files/test/cron"
      dest_dir: "/var/spool/cron/crontabs"
  main_dns_dict: 
    blog:
      name: "{{ params.env_params.dns_name }}"
      record: "blog"
    log:
      name: "{{ params.env_params.dns_name }}"
      record: "log"
orchestrations: 
  none: 
    type: "none"
  compose: 
    type: "compose"
    version: "1.24.0"
    container: "true"
pods:
  efk:
    repo: "pod"
    orchestration: "{{ params.env_params.orchestration }}"
    root: "yes"
    ctx: "main/log/ctx.yml"
    fast_prepare: "true"
    env_dir: "env-efk"
    cmd: "sysctl -w vm.max_map_count=262144"
    params:
      local: "{{ params.env_params.local | default(false) }}"
      default_logging: "log"
      volumes:
      - "elasticsearch"
      networks:
      - "log"
      services:
      - "fluentd"
      - "elasticsearch"
      - "kibana"
      run_services:
      - "fluentd"
    other_params:
      memory_dict: "efk_memory_dict"
    shared_params: "main"
  wp_app_local:
    repo: "pod"
    orchestration: "{{ params.env_params.orchestration }}"
    root: "yes"
    ctx: "main/wordpress/ctx.yml"
    fast_prepare: "true"
    env_dir: "env-wp-app-local"
    cmd: ""
    credentials:
      wordpress: "wordpress"
      mysql: "mysql"
      bucket: "wp_bucket"
    params:
      type: "app"
      local: true
      default_logging: "wp_app"
      volumes:
      - "wordpress"
      managed_volumes:
      - "mysql"
      networks:
      - "internet"
      - "local"
      services:
      - "nginx"
      - "wordpress"
      - "phpmyadmin"
      - "mysql"
      - "toolbox"
      - "composer"
      map_src_path_dict:
        phpmyadmin: "phpmyadmin"
      map_services_depends_on_dict:
        wordpress: "wordpress_app"
        phpmyadmin: "phpmyadmin_app"
      map_services_networks_dict:
        phpmyadmin: "phpmyadmin_app"
        mysql: "mysql_app"
      map_services_volumes_dict:
        mysql: "mysql_local"
        wordpress: "wordpress_local"
    other_params:
      memory_dict: "wp_app_memory_dict"
      run: "wp_run"
    shared_params: "main"
  wp_app:
    repo: "pod"
    orchestration: "{{ params.env_params.orchestration }}"
    root: "yes"
    ctx: "main/wordpress/ctx.yml"
    fast_prepare: "true"
    env_dir: "env-wp-app"
    cmd: "{{ params.env_params.local | default(false) | bool | ternary('', './run setup') }}"
    credentials:
      wordpress: "wordpress"
      mysql: "mysql"
      bucket: "wp_bucket"
    params:
      type: "app"
      local: false
      default_logging: "wp_app"
      volumes:
      - "mysql"
      - "wordpress"
      networks:
      - "internet"
      - "local"
      services:
      - "nginx"
      - "wordpress"
      - "phpmyadmin"
      - "mysql"
      - "toolbox"
      map_services_depends_on_dict:
        wordpress: "wordpress_app"
        phpmyadmin: "phpmyadmin_app"
      map_services_networks_dict:
        phpmyadmin: "phpmyadmin_app"
        mysql: "mysql_app"
    other_params:
      memory_dict: "wp_app_memory_dict"
      run: "wp_run"
    shared_params: "main"
  wp_db:
    repo: "pod"
    orchestration: "{{ params.env_params.orchestration }}"
    root: "yes"
    ctx: "main/wordpress/ctx.yml"
    fast_prepare: "true"
    env_dir: "env-wp-db"
    cmd: "{{ params.env_params.local | default(false) | bool | ternary('', './run setup') }}"
    credentials:
      wordpress: "wordpress"
      mysql: "mysql"
      bucket: "wp_bucket"
    params:
      type: "db"
      local: false
      default_logging: "wp_efk"
      volumes:
      - "mysql"
      networks:
      - "internet"
      - "local"
      services:
      - "mysql"
      - "toolbox"
      map_services_ports_dict:
        mysql: "mysql_db"
    other_params:
      memory_dict: "wp_db_memory_dict"
      run: "wp_run"
    shared_params: "main"
  wp_web:
    repo: "pod"
    orchestration: "{{ params.env_params.orchestration }}"
    root: "yes"
    ctx: "main/wordpress/ctx.yml"
    fast_prepare: "true"
    env_dir: "env-wp-web"
    cmd: "{{ params.env_params.local | default(false) | bool | ternary('', './run setup') }}"
    credentials:
      wordpress: "wordpress"
      mysql: "mysql"
      bucket: "wp_bucket"
    params:
      type: "web"
      local: false
      default_logging: "wp_efk"
      volumes:
      - "wordpress"
      networks:
      - "internet"
      - "local"
      services:
      - "nginx"
      - "wordpress"
      - "phpmyadmin"
      - "toolbox"
    other_params:
      memory_dict: "wp_web_memory_dict"
      run: "wp_run"
    shared_params: "main"
pod_shared_params:
  main:
    compose_version: "main_compose_version"
    containers_dict: "main_containers_dict"
    default_logging_dict: "main_default_logging_dict"
    logging_dict: "main_logging_dict"
    managed_volumes_dict: "main_managed_volumes_dict"
    networks_dict: "main_networks_dict"
    services_dict: "main_services_dict"
    services_command_dict: "main_services_command_dict"
    services_depends_on_dict: "main_services_depends_on_dict"
    services_environment_dict: "main_services_environment_dict"
    services_logging_dict: "main_services_logging_dict"
    services_networks_dict: "main_services_networks_dict"
    services_ports_dict: "main_services_ports_dict"
    services_volumes_dict: "main_services_volumes_dict"
    services_ulimits_dict: "main_services_ulimits_dict"
    volumes_dict: "main_volumes_dict"
  wp_efk_app_pods:
    memory_dict: "wp_efk_app_memory_dict"    
pod_params:
  efk_memory_dict:
    1gb:
      fluentd:
        mem_limit: "128mb"
      elasticsearch:
        mem_limit: "512mb"
        environment:
          ES_JAVA_OPTS: -Xms256m -Xmx256m
      kibana:
        mem_limit: "256mb"
    2gb:
      fluentd:
        mem_limit: "256mb"
      elasticsearch:
        mem_limit: "1gb"
        environment:
          ES_JAVA_OPTS: -Xms512m -Xmx512m
      kibana:
        mem_limit: "512mb"
    4gb:
      fluentd:
        mem_limit: "512mb"
      elasticsearch:
        mem_limit: "2gb"
        environment:
          ES_JAVA_OPTS: -Xms1g -Xmx1g
      kibana:
        mem_limit: "1gb"
    8gb:
      fluentd:
        mem_limit: "1gb"
      elasticsearch:
        mem_limit: "4gb"
        environment:
          ES_JAVA_OPTS: -Xms3g -Xmx3g
      kibana:
        mem_limit: "2gb"
    16gb:
      fluentd:
        mem_limit: "2gb"
      elasticsearch:
        mem_limit: "8gb"
        environment:
          ES_JAVA_OPTS: -Xms6g -Xmx6g
      kibana:
        mem_limit: "4gb"
    32gb:
      fluentd:
        mem_limit: "4gb"
      elasticsearch:
        mem_limit: "16gb"
        environment:
          ES_JAVA_OPTS: -Xms12g -Xmx12g
      kibana:
        mem_limit: "8gb"
  main_compose_version: "2.4"
  main_containers_dict:
    nginx:
      wordpress:
        ssl: "{{ params.env_params.ssl | default(false) }}"
        port: "{{ params.env_params.ssl | default(false) | bool | ternary(443, 80) }}"
        external_port: >-
          {{ 
          params.env_params.local | default(false) | bool | 
          ternary(
          params.env_params.ssl | default(false) | bool | ternary(8443, 8080),
          params.env_params.ssl | default(false) | bool | ternary(443, 80)
          ) 
          }}
      phpmyadmin:
        ssl: "{{ params.env_params.ssl | default(false) }}"
        port: "{{ params.env_params.ssl | default(false) | bool | ternary(9443, 9080) }}"
    wordpress:
      env: >-
        {{ 
        params.env_params.local | default(false) | bool | 
        ternary('development', 'staging') 
        }}
      domain: "{{ params.env_params.wp_full_domain | default('') }}"
    phpmyadmin:
      domain: "{{ params.env_params.wp_full_domain | default('') }}"
    mysql:
      host: "mysql"
      port: "3306"
    toolbox:
      s3_endpoint: "{{ params.env_params.wp_backup_bucket.endpoint }}"
      use_aws_s3_cli: "true"
    fluentd:
      flush_interval: "1s"
    elasticsearch:
      port: "9200"
  main_default_logging_dict:
    log: "json"
    wp_efk: "fluentd"
    wp_app: "json"
  main_logging_dict:
    json:
      driver: "json-file"
      options:
        max-size: "50m"
    fluentd:
      driver: "fluentd"
      options:
        fluentd-address: "localhost:24224"
        tag: !unsafe "docker.{{.Name}}.{{.ID}}"
  main_managed_volumes_dict:
    mysql: {}
  main_networks_dict:
    log:
      driver: bridge
    internet:
      driver: "bridge"
    local:
      driver: "bridge"
      internal: true
  main_services_dict:
    composer:
      args:
        IMAGE: "lucasbasquerotto/wordpress"
        VERSION: "composer-1.8.6"
      working_dir: /var/www/html
    elasticsearch:
      args:
        IMAGE: "docker.elastic.co/elasticsearch/elasticsearch"
        VERSION: "7.5.0"
    fluentd:
      args:
        IMAGE: "lucasbasquerotto/wordpress"
        VERSION: "fluentd-1.7.4-01"
    kibana:
      args:
        IMAGE: "docker.elastic.co/kibana/kibana"
        VERSION: "7.5.0"
    mysql:
      args:
        IMAGE: "lucasbasquerotto/wordpress"
        VERSION: "mysql-8.0.16-02"
      environment:
        MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
        MYSQL_DATABASE: $DB_NAME
        MYSQL_USER: $DB_USER
        MYSQL_PASSWORD: $DB_PASSWORD
    nginx:
      args:
        IMAGE: "nginx"
        VERSION: "1.14.2-alpine"
    phpmyadmin:
      args:
        IMAGE: "phpmyadmin/phpmyadmin"
        VERSION: "4.8.5"
      environment:
        PMA_HOST: $DB_HOST
        PMA_PORT: $DB_PORT
    toolbox:
      args:
        IMAGE: "lucasbasquerotto/wordpress"
        VERSION: "toolbox-ubuntu-18.04-20190925"
    wordpress:
      args:
        IMAGE: "lucasbasquerotto/wordpress"
        VERSION: "0.0.2"
        WORDPRESS_INI_FILE_TYPE: "development"
      environment:
        DB_HOST: $DB_HOST:$DB_PORT
        DB_NAME: $DB_NAME
        DB_USER: $DB_USER 
    wordpress_local:
      args:
        IMAGE: "lucasbasquerotto/wordpress"
        VERSION: "0.0.2"
        WORDPRESS_INI_FILE_TYPE: development
      environment:
        DB_HOST: $DB_HOST:$DB_PORT
        DB_NAME: $DB_NAME
        DB_USER: $DB_USER
  main_services_command_dict:
    composer: "tail -f /dev/null"
    toolbox: "tail -f /dev/null"
  main_services_depends_on_dict:
    nginx:
    - "wordpress"
    - "phpmyadmin"
    wordpress_app:
    - "mysql"
    phpmyadmin_app:
    - "mysql"
    fluentd_app:
    - "elasticsearch"
    kibana_app:
    - "elasticsearch"
    kibana_web:
    - "elasticsearch"
  main_services_environment_dict:
    elasticsearch:
      cluster.initial_master_nodes: elasticsearch
  main_services_logging_dict:
    elasticsearch: "json"
    fluentd: "json"
  main_services_networks_dict:
    nginx:
    - "internet"
    - "local"
    wordpress:
    - "internet"
    - "local"
    phpmyadmin:
    - "internet"
    - "local"
    phpmyadmin_app:
    - "local"
    mysql:
    - "internet"
    - "local"
    mysql_app:
    - "local"
    toolbox:
    - "internet"
    - "local"
    fluentd:
    - "log"
    elasticsearch:
    - "log"
    kibana:
    - "log"
  main_services_ports_dict:
    nginx:
    - "{{ params.env_params.local | default(false) | bool | ternary('8080:80', '80:80') }}"
    - "{{ params.env_params.local | default(false) | bool | ternary('8443:443', '443:443') }}"
    - "9080:9080"
    - "9443:9443"
    mysql_db:
    - "3306:3306"
    fluentd:
    - "24224:24224"
    - "24224:24224/udp"
    elasticsearch:
    - "9200:9200"
    kibana:
    - "5601:5601"
  main_services_volumes_dict:
    nginx:
    - "$DATA_DIR/tmp/nginx:/tmp/main/nginx"
    wordpress:
    - "$DATA_DIR/wordpress/uploads:/var/www/html/web/app/uploads"
    - "$DATA_DIR/tmp/wordpress:/tmp/main/wordpress"
    wordpress_local:
    - "$WP_APP_REPO_DIR:/var/www/html"
    - "$DATA_DIR/wordpress/uploads:/var/www/html/web/app/uploads"
    - "$DATA_DIR/tmp/wordpress:/tmp/main/wordpress"
    phpmyadmin:
    - "$DATA_DIR/tmp/phpmyadmin:/tmp/main/phpmyadmin"
    mysql:
    - "$DATA_DIR/mysql:/var/lib/mysql"
    - "$DATA_DIR/tmp/mysql:/tmp/main/mysql"
    mysql_local:
    - "mysql:/var/lib/mysql"
    - "$DATA_DIR/tmp/mysql:/tmp/main/mysql"
    composer:
    - "$WP_APP_REPO_DIR:/var/www/html"
    - "$DATA_DIR/tmp/composer:/tmp/main/composer"
    toolbox:
    - "$DATA_DIR/tmp:/tmp/main"
    - "$DATA_DIR:/tmp/data"
    elasticsearch:
    - "$DATA_DIR/elasticsearch:/usr/share/elasticsearch/data"
  main_services_ulimits_dict:
    elasticsearch:
      memlock:
        soft: -1
        hard: -1
  main_volumes_dict:
    test_local_1:
      rel_path: "test_local_1"
      mode: "0777"
    test_local_2:
      rel_path: "test_local_2"
      mode: "0777"
    test_remote_1:
      rel_path: "test_remote_1"
      mode: "0777"
    test_remote_2:
      rel_path: "test_remote_2"
      mode: "0777"
  wp_app_memory_dict:
    1gb:
      nginx:
        mem_limit: "128mb"
      wordpress:
        mem_limit: "128mb"
      phpmyadmin:
        mem_limit: "128mb"
      mysql:
        mem_limit: "256mb"
      toolbox:
        mem_limit: "128mb"
      composer:
        mem_limit: "128mb"
    2gb:
      nginx:
        mem_limit: "256mb"
      wordpress:
        mem_limit: "256mb"
      phpmyadmin:
        mem_limit: "256mb"
      mysql:
        mem_limit: "512mb"
      toolbox:
        mem_limit: "256mb"
      composer:
        mem_limit: "256mb"
    4gb:
      nginx:
        mem_limit: "512mb"
      wordpress:
        mem_limit: "512mb"
      phpmyadmin:
        mem_limit: "512mb"
      mysql:
        mem_limit: "1gb"
      toolbox:
        mem_limit: "512mb"
      composer:
        mem_limit: "512mb"
    8gb:
      nginx:
        mem_limit: "1gb"
      wordpress:
        mem_limit: "1gb"
      phpmyadmin:
        mem_limit: "1gb"
      mysql:
        mem_limit: "2gb"
      toolbox:
        mem_limit: "1gb"
      composer:
        mem_limit: "1gb"
    16gb:
      nginx:
        mem_limit: "2gb"
      wordpress:
        mem_limit: "2gb"
      phpmyadmin:
        mem_limit: "2gb"
      mysql:
        mem_limit: "4gb"
      toolbox:
        mem_limit: "2gb"
      composer:
        mem_limit: "2gb"
    32gb:
      nginx:
        mem_limit: "4gb"
      wordpress:
        mem_limit: "4gb"
      phpmyadmin:
        mem_limit: "4gb"
      mysql:
        mem_limit: "8gb"
      toolbox:
        mem_limit: "4gb"
      composer:
        mem_limit: "4gb"
  wp_db_memory_dict:
    1gb:
      mysql:
        mem_limit: "512mb"
      toolbox:
        mem_limit: "256mb"
    2gb:
      mysql:
        mem_limit: "1gb"
      toolbox:
        mem_limit: "512mb"
    4gb:
      mysql:
        mem_limit: "2gb"
      toolbox:
        mem_limit: "1gb"
    8gb:
      mysql:
        mem_limit: "4gb"
      toolbox:
        mem_limit: "2gb"
    16gb:
      mysql:
        mem_limit: "8gb"
      toolbox:
        mem_limit: "4gb"
    32gb:
      mysql:
        mem_limit: "16gb"
      toolbox:
        mem_limit: "8gb"
  wp_efk_app_memory_dict:
    2gb:
      fluentd:
        mem_limit: "128mb"
      elasticsearch:
        mem_limit: "512mb"
        environment:
          ES_JAVA_OPTS: -Xms256m -Xmx256m
      kibana:
        mem_limit: "256mb"
      nginx:
        mem_limit: "128mb"
      wordpress:
        mem_limit: "128mb"
      phpmyadmin:
        mem_limit: "128mb"
      mysql:
        mem_limit: "256mb"
      toolbox:
        mem_limit: "128mb"
      composer:
        mem_limit: "128mb"
    4gb:
      fluentd:
        mem_limit: "256mb"
      elasticsearch:
        mem_limit: "1gb"
        environment:
          ES_JAVA_OPTS: -Xms512m -Xmx512m
      kibana:
        mem_limit: "512mb"
      nginx:
        mem_limit: "256mb"
      wordpress:
        mem_limit: "256mb"
      phpmyadmin:
        mem_limit: "256mb"
      mysql:
        mem_limit: "512mb"
      toolbox:
        mem_limit: "256mb"
      composer:
        mem_limit: "256mb"
    8gb:
      fluentd:
        mem_limit: "512mb"
      elasticsearch:
        mem_limit: "2gb"
        environment:
          ES_JAVA_OPTS: -Xms1g -Xmx1g
      kibana:
        mem_limit: "1gb"
      nginx:
        mem_limit: "512mb"
      wordpress:
        mem_limit: "512mb"
      phpmyadmin:
        mem_limit: "512mb"
      mysql:
        mem_limit: "1gb"
      toolbox:
        mem_limit: "512mb"
      composer:
        mem_limit: "512mb"
    16gb:
      fluentd:
        mem_limit: "1gb"
      elasticsearch:
        mem_limit: "4gb"
        environment:
          ES_JAVA_OPTS: -Xms3g -Xmx3g
      kibana:
        mem_limit: "2gb"
      nginx:
        mem_limit: "1gb"
      wordpress:
        mem_limit: "1gb"
      phpmyadmin:
        mem_limit: "1gb"
      mysql:
        mem_limit: "2gb"
      toolbox:
        mem_limit: "1gb"
      composer:
        mem_limit: "1gb"
    32gb:
      fluentd:
        mem_limit: "2gb"
      elasticsearch:
        mem_limit: "8gb"
        environment:
          ES_JAVA_OPTS: -Xms6g -Xmx6g
      kibana:
        mem_limit: "4gb"
      nginx:
        mem_limit: "2gb"
      wordpress:
        mem_limit: "2gb"
      phpmyadmin:
        mem_limit: "2gb"
      mysql:
        mem_limit: "4gb"
      toolbox:
        mem_limit: "2gb"
      composer:
        mem_limit: "2gb"
  wp_run:
    setup_db_dict:
      error: 
        type: "my_invalid_db_type"
      remote_file: 
        type: "web_file"
        src: "https://github.com/lucasbasquerotto/my-projects/blob/master/wp/backup-db-20190917_195406-1568760846.zip?raw=true"
      remote_bucket_path_file: 
        type: "bucket_file"
        src: "backup-20191003_191456-1570140896/db.zip"
      remote_bucket_path_dir: 
        type: "bucket_dir"
        src: "db"
    setup_uploads_dict:
      error: 
        type: "my_invalid_uploads_type"
      remote_zip_file: 
        type: "web_file"
        src: "https://github.com/lucasbasquerotto/my-projects/blob/master/wp/backup-uploads-20190917_195406-1568760846.zip?raw=true"
      remote_bucket_path_file: 
        type: "bucket_file"
        src: "backup-20191003_191456-1570140896/uploads.zip"
      remote_bucket_path_dir: 
        type: "bucket_dir"
        src: "uploads"
    setup:
      url: >-
        {{ params.env_params.ssl | default(false) | bool | ternary('https', 'http') 
        }}://{{ params.env_params.wp_full_domain | default('') }}
      title: "{{ params.env_params.wp_title | default('No Title :/') }}"
      restore_db: "remote_file"
      restore_uploads: "remote_zip_file"
      restore_seed: false
      remote_seed_data: "https://gist.githubusercontent.com/lucasbasquerotto/667447640482369d0c6b093ee7200c96/raw/9d9d446b9f1017aa4bc12628aea954f1f10f020c/wordpress-theme-unit-test-data.xml"
      old_domain_host: "{{ params.env_params.wp_old_domain_host | default('') }}"
      new_domain_host: "{{ params.env_params.wp_new_domain_host | default('') }}"
    backup:
      bucket_db_sync_dir: "db"
      bucket_uploads_sync_dir: "uploads"
      bucket_path: "main"
      bucket_name: "lucasbasquerotto-wp-backup"
      delete_old_days: 3
  wp_web_memory_dict:
    1gb:
      nginx:
        mem_limit: "128mb"
      wordpress:
        mem_limit: "512mb"
      phpmyadmin:
        mem_limit: "128mb"
      toolbox:
        mem_limit: "128mb"
      composer:
        mem_limit: "128mb"
    2gb:
      nginx:
        mem_limit: "512mb"
      wordpress:
        mem_limit: "1gb"
      phpmyadmin:
        mem_limit: "512mb"
      toolbox:
        mem_limit: "512mb"
      composer:
        mem_limit: "512mb"
    4gb:
      nginx:
        mem_limit: "1gb"
      wordpress:
        mem_limit: "2gb"
      phpmyadmin:
        mem_limit: "1gb"
      toolbox:
        mem_limit: "1gb"
      composer:
        mem_limit: "1gb"
    8gb:
      nginx:
        mem_limit: "2gb"
      wordpress:
        mem_limit: "4gb"
      phpmyadmin:
        mem_limit: "2gb"
      toolbox:
        mem_limit: "2gb"
      composer:
        mem_limit: "2gb"
    16gb:
      nginx:
        mem_limit: "4gb"
      wordpress:
        mem_limit: "8gb"
      phpmyadmin:
        mem_limit: "4gb"
      toolbox:
        mem_limit: "4gb"
      composer:
        mem_limit: "4gb"
    32gb:
      nginx:
        mem_limit: "8gb"
      wordpress:
        mem_limit: "16gb"
      phpmyadmin:
        mem_limit: "8gb"
      toolbox:
        mem_limit: "8gb"
      composer:
        mem_limit: "8gb"
apps:
  wp_local:
    repo: "app"
repos:
  cloud:
    src: "https://github.com/lucasbasquerotto/ansible-docker.git"
    version: "master"
  pod:
    src: "https://github.com/lucasbasquerotto/docker-main"
    version: "master"
  app:
    src: "https://github.com/lucasbasquerotto/wordpress-docker"
    version: "master"
destroy: 
  custom: "{{ params.env_params.destroy[params.env_params.ctx] | default({}) }}"
  all_local:
    clouds:
    - "local"
    nodes:
    - "efk_local"
    - "efk"
    - "wp_local"
    - "wp_app"
    - "wp_efk_app"
    - "wp_db"
    - "wp_web"
    local:
      pods:
      - "efk"
      - "wp_app_local"
      - "wp_app"
      - "wp_db"
      - "wp_web"
      apps:
      - "wp_local"
  efk_local:
    clouds:
    - "local"
    nodes:
    - "efk_local"
    local:
      pods:
      - "efk"
  wp_local:
    clouds:
    - "local"
    nodes:
    - "wp_local"
    local:
      pods:
      - "wp_app_local"
      apps:
      - "wp_local"
  efk: 
    clouds:
    - "{{ params.env_params.cloud_name }}"
    nodes:
    - "efk"
  wp: 
    clouds:
    - "{{ params.env_params.cloud_name }}"
    buckets:
    - "wp_backup"
    nodes:
    - "wp_app"
  wp_efk: 
    clouds:
    - "{{ params.env_params.cloud_name }}"
    buckets:
    - "wp_backup"
    nodes:
    - "wp_efk_app"
  wp_efk_nodes: 
    clouds:
    - "{{ params.env_params.cloud_name }}"
    buckets:
    - "wp_backup"
    nodes:
    - "efk"
    - "wp_db"
    - "wp_web"
credentials: "{{ params.credentials | default({}) }}"
